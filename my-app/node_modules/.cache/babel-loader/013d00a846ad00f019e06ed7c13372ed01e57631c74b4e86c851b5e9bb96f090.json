{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\AllSurveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importa o hook para navegação\nimport axios from 'axios';\nimport { jsPDF } from 'jspdf'; // Importando jsPDF para criar o PDF\nimport { FaDownload } from 'react-icons/fa'; // Importando o ícone de download do react-icons\nimport JSZip from 'jszip'; // Importando a biblioteca JSZip\nimport FileSaver from 'file-saver'; // Para salvar o arquivo ZIP\nimport './AllSurveys.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllSurveys = () => {\n  _s();\n  const navigate = useNavigate(); // Hook para redirecionamento\n  const [surveys, setSurveys] = useState([]);\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null); // Controla qual título está expandido\n  const [expandedQuestions, setExpandedQuestions] = useState({}); // Controla as perguntas expandidas por entrevista\n  const [currentPage, setCurrentPage] = useState(1); // Página atual\n  const [surveysPerPage] = useState(20); // Número de entrevistas por página\n\n  // Carregar os dados da API\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/surveys').then(response => setSurveys(response.data)).catch(error => console.error('Erro ao obter as entrevistas:', error));\n  }, []);\n\n  // Alternar expansão de um título específico\n  const toggleSurveyExpansion = id => {\n    setExpandedSurveyId(prevId => prevId === id ? null : id); // Se já estiver expandido, recolhe, senão expande\n  };\n\n  // Alternar expansão de uma pergunta específica dentro de uma entrevista\n  const toggleQuestionExpansion = (surveyId, index) => {\n    const questionKey = `${surveyId}-${index}`; // Gerar uma chave única para cada pergunta (combinando surveyId e index)\n    setExpandedQuestions(prevExpandedQuestions => ({\n      ...prevExpandedQuestions,\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true // Expande ou recolhe\n    }));\n  };\n\n  // Função para gerar o PDF\n  const generatePDF = (surveyData, zip) => {\n    const doc = new jsPDF();\n\n    // Título do PDF\n    doc.setFontSize(18);\n    doc.text('Informações da Entrevista', 14, 20);\n    let yPosition = 30;\n\n    // Informações do entrevistador\n    doc.setFontSize(12);\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n\n    // Informações do entrevistado\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n\n    // Adicionar perguntas e respostas\n    surveyData.surveyDetails.forEach((question, index) => {\n      var _question$Documentaca;\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\n      yPosition += 20; // Espaço entre perguntas\n\n      // Adicionar arquivos à subpasta da pergunta, se houver documentos\n      if ((_question$Documentaca = question.Documentacao) !== null && _question$Documentaca !== void 0 && _question$Documentaca.trim()) {\n        const files = question.Documentacao.split(',');\n        files.forEach(fileName => {\n          // Adiciona os documentos dentro da pasta da pergunta no ZIP\n          axios.get(`http://localhost:4000/uploads/${fileName.trim()}`, {\n            responseType: 'blob'\n          }).then(response => {\n            const fileData = response.data;\n            zip.file(`Entrevistador_${surveyData.entrevistadorName}/Entrevistado_${surveyData.entrevistadoName}/Pergunta_${index + 1}/${fileName.trim()}`, fileData);\n          }).catch(error => console.error(`Erro ao obter o arquivo ${fileName.trim()}:`, error));\n        });\n      }\n    });\n\n    // Nome do arquivo: Entrevistador - Entrevistado.pdf\n    const filename = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`;\n\n    // Salvar o PDF com o nome correto\n    const pdfData = doc.output('blob');\n    zip.file(`Entrevistador_${surveyData.entrevistadorName}/Entrevistado_${surveyData.entrevistadoName}/Informacoes_Entrevista.pdf`, pdfData);\n  };\n\n  // Função para gerar e baixar o arquivo ZIP\n  const generateZip = surveyData => {\n    const zip = new JSZip();\n    // Criar a estrutura de pastas e adicionar o PDF e documentos\n    generatePDF(surveyData, zip);\n\n    // Criar o ZIP e iniciar o download\n    zip.generateAsync({\n      type: 'blob'\n    }).then(content => {\n      FileSaver.saveAs(content, `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.zip`);\n    });\n  };\n\n  // Determina os índices para cortar as entrevistas para a página atual\n  const indexOfLastSurvey = currentPage * surveysPerPage;\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\n\n  // Funções de navegação de página\n  const nextPage = () => {\n    if (currentPage * surveysPerPage < surveys.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-home\",\n        onClick: () => navigate('/'),\n        children: \"Voltar para P\\xE1gina Inicial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Entrevistas Realizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), currentSurveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-header\",\n        onClick: () => toggleSurveyExpansion(survey.entrevista_id),\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Entrevistador:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadorName || 'Sem nome do entrevistador', \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Entrevistado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadoName || 'Sem nome do entrevistado']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => generateZip(survey),\n          style: {\n            padding: '5px',\n            backgroundColor: '#007bff',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '50%',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(FaDownload, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), expandedSurveyId === survey.entrevista_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"survey-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Entrevistador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Nome:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadorName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cargo:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadorJobTitle]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Entrevistado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Nome:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadoName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cargo:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadoJobTitle]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-list\",\n          children: survey.surveyDetails.map((question, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Pergunta:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 26\n                }, this), \" \", question.Pergunta]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 23\n              }, this), question.Documentacao && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"download-question-docs\",\n                onClick: () => toggleQuestionExpansion(survey.entrevista_id, index),\n                children: expandedQuestions[`${survey.entrevista_id}-${index}`] ? 'Esconder documentos' : 'Mostrar documentos'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 25\n              }, this), expandedQuestions[`${survey.entrevista_id}-${index}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: question.Documentacao.split(',').map((doc, docIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: doc\n                  }, docIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 31\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 25\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, survey.id_entrevista, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        children: \"Pr\\xF3xima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSurveys, \"k4xM5Xf2jUksJFxbAvxz2/2CBHY=\", false, function () {\n  return [useNavigate];\n});\n_c = AllSurveys;\nexport default AllSurveys;\nvar _c;\n$RefreshReg$(_c, \"AllSurveys\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsPDF","FaDownload","JSZip","FileSaver","jsxDEV","_jsxDEV","Fragment","_Fragment","AllSurveys","_s","navigate","surveys","setSurveys","expandedSurveyId","setExpandedSurveyId","expandedQuestions","setExpandedQuestions","currentPage","setCurrentPage","surveysPerPage","get","then","response","data","catch","error","console","toggleSurveyExpansion","id","prevId","toggleQuestionExpansion","surveyId","index","questionKey","prevExpandedQuestions","generatePDF","surveyData","zip","doc","setFontSize","text","yPosition","entrevistadorName","entrevistadoName","surveyDetails","forEach","question","_question$Documentaca","Pergunta","Resposta","Comentarios","Documentacao","trim","files","split","fileName","responseType","fileData","file","filename","pdfData","output","generateZip","generateAsync","type","content","saveAs","indexOfLastSurvey","indexOfFirstSurvey","currentSurveys","slice","nextPage","length","prevPage","children","style","textAlign","marginBottom","className","onClick","_jsxFileName","lineNumber","columnNumber","map","survey","entrevista_id","display","justifyContent","alignItems","padding","backgroundColor","color","border","borderRadius","cursor","size","entrevistadorJobTitle","entrevistadoJobTitle","docIndex","id_entrevista","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/AllSurveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Importa o hook para navegação\r\nimport axios from 'axios';\r\nimport { jsPDF } from 'jspdf'; // Importando jsPDF para criar o PDF\r\nimport { FaDownload } from 'react-icons/fa'; // Importando o ícone de download do react-icons\r\nimport JSZip from 'jszip'; // Importando a biblioteca JSZip\r\nimport FileSaver from 'file-saver'; // Para salvar o arquivo ZIP\r\nimport './AllSurveys.css';\r\n\r\nconst AllSurveys = () => {\r\n  const navigate = useNavigate(); // Hook para redirecionamento\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null); // Controla qual título está expandido\r\n  const [expandedQuestions, setExpandedQuestions] = useState({}); // Controla as perguntas expandidas por entrevista\r\n  const [currentPage, setCurrentPage] = useState(1); // Página atual\r\n  const [surveysPerPage] = useState(20); // Número de entrevistas por página\r\n\r\n  // Carregar os dados da API\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:4000/api/surveys')\r\n      .then((response) => setSurveys(response.data))\r\n      .catch((error) => console.error('Erro ao obter as entrevistas:', error));\r\n  }, []);\r\n\r\n  // Alternar expansão de um título específico\r\n  const toggleSurveyExpansion = (id) => {\r\n    setExpandedSurveyId((prevId) => (prevId === id ? null : id)); // Se já estiver expandido, recolhe, senão expande\r\n  };\r\n\r\n  // Alternar expansão de uma pergunta específica dentro de uma entrevista\r\n  const toggleQuestionExpansion = (surveyId, index) => {\r\n    const questionKey = `${surveyId}-${index}`; // Gerar uma chave única para cada pergunta (combinando surveyId e index)\r\n    setExpandedQuestions((prevExpandedQuestions) => ({\r\n      ...prevExpandedQuestions,\r\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true, // Expande ou recolhe\r\n    }));\r\n  };\r\n\r\n  // Função para gerar o PDF\r\n  const generatePDF = (surveyData, zip) => {\r\n    const doc = new jsPDF();\r\n\r\n    // Título do PDF\r\n    doc.setFontSize(18);\r\n    doc.text('Informações da Entrevista', 14, 20);\r\n\r\n    let yPosition = 30;\r\n\r\n    // Informações do entrevistador\r\n    doc.setFontSize(12);\r\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n\r\n    // Informações do entrevistado\r\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n\r\n    // Adicionar perguntas e respostas\r\n    surveyData.surveyDetails.forEach((question, index) => {\r\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\r\n      yPosition += 20; // Espaço entre perguntas\r\n\r\n      // Adicionar arquivos à subpasta da pergunta, se houver documentos\r\n      if (question.Documentacao?.trim()) {\r\n        const files = question.Documentacao.split(',');\r\n        files.forEach((fileName) => {\r\n          // Adiciona os documentos dentro da pasta da pergunta no ZIP\r\n          axios\r\n            .get(`http://localhost:4000/uploads/${fileName.trim()}`, { responseType: 'blob' })\r\n            .then((response) => {\r\n              const fileData = response.data;\r\n              zip.file(`Entrevistador_${surveyData.entrevistadorName}/Entrevistado_${surveyData.entrevistadoName}/Pergunta_${index + 1}/${fileName.trim()}`, fileData);\r\n            })\r\n            .catch((error) => console.error(`Erro ao obter o arquivo ${fileName.trim()}:`, error));\r\n        });\r\n      }\r\n    });\r\n\r\n    // Nome do arquivo: Entrevistador - Entrevistado.pdf\r\n    const filename = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`;\r\n\r\n    // Salvar o PDF com o nome correto\r\n    const pdfData = doc.output('blob');\r\n    zip.file(`Entrevistador_${surveyData.entrevistadorName}/Entrevistado_${surveyData.entrevistadoName}/Informacoes_Entrevista.pdf`, pdfData);\r\n  };\r\n\r\n  // Função para gerar e baixar o arquivo ZIP\r\n  const generateZip = (surveyData) => {\r\n    const zip = new JSZip();\r\n    // Criar a estrutura de pastas e adicionar o PDF e documentos\r\n    generatePDF(surveyData, zip);\r\n\r\n    // Criar o ZIP e iniciar o download\r\n    zip.generateAsync({ type: 'blob' }).then((content) => {\r\n      FileSaver.saveAs(content, `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.zip`);\r\n    });\r\n  };\r\n\r\n  // Determina os índices para cortar as entrevistas para a página atual\r\n  const indexOfLastSurvey = currentPage * surveysPerPage;\r\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\r\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\r\n\r\n  // Funções de navegação de página\r\n  const nextPage = () => {\r\n    if (currentPage * surveysPerPage < surveys.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <button className='back-home'\r\n          onClick={() => navigate('/')}>\r\n          Voltar para Página Inicial\r\n        </button>\r\n      </div>\r\n\r\n      <h1>Entrevistas Realizadas</h1>\r\n\r\n      {/* Exibir as entrevistas da página atual */}\r\n      {currentSurveys.map((survey) => (\r\n        <div key={survey.id_entrevista} className=\"survey\">\r\n          <div\r\n            className=\"survey-header\"\r\n            onClick={() => toggleSurveyExpansion(survey.entrevista_id)}\r\n            style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\r\n          >\r\n            <h2>\r\n              <strong>Entrevistador:</strong> {survey.entrevistadorName || 'Sem nome do entrevistador'} |\r\n              <strong> Entrevistado:</strong> {survey.entrevistadoName || 'Sem nome do entrevistado'}\r\n            </h2>\r\n\r\n            {/* Botão de Download com Ícone */}\r\n            <button\r\n              onClick={() => generateZip(survey)}\r\n              style={{\r\n                padding: '5px',\r\n                backgroundColor: '#007bff',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '50%',\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <FaDownload size={16} />\r\n            </button>\r\n          </div>\r\n\r\n          {expandedSurveyId === survey.entrevista_id && (\r\n            <>\r\n              {/* Detalhes do entrevistador e do entrevistado */}\r\n              <div className=\"survey-details\">\r\n                <div>\r\n                  <h3>Entrevistador</h3>\r\n                  <ul>\r\n                    <li><strong>Nome:</strong> {survey.entrevistadorName}</li>\r\n                    <li><strong>Cargo:</strong> {survey.entrevistadorJobTitle}</li>\r\n                  </ul>\r\n                </div>\r\n                <div>\r\n                  <h3>Entrevistado</h3>\r\n                  <ul>\r\n                    <li><strong>Nome:</strong> {survey.entrevistadoName}</li>\r\n                    <li><strong>Cargo:</strong> {survey.entrevistadoJobTitle}</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"questions-list\">\r\n                {survey.surveyDetails.map((question, index) => {\r\n                  return (\r\n                    <div key={index} className=\"question\">\r\n                      <p><strong>Pergunta:</strong> {question.Pergunta}</p>\r\n                      {question.Documentacao && (\r\n                        <button\r\n                          className=\"download-question-docs\"\r\n                          onClick={() => toggleQuestionExpansion(survey.entrevista_id, index)}\r\n                        >\r\n                          {expandedQuestions[`${survey.entrevista_id}-${index}`] ? 'Esconder documentos' : 'Mostrar documentos'}\r\n                        </button>\r\n                      )}\r\n\r\n                      {expandedQuestions[`${survey.entrevista_id}-${index}`] && (\r\n                        <div>\r\n                          <ul>\r\n                            {question.Documentacao.split(',').map((doc, docIndex) => (\r\n                              <li key={docIndex}>{doc}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Controles de paginação */}\r\n      <div className=\"pagination\">\r\n        <button onClick={prevPage}>Anterior</button>\r\n        <button onClick={nextPage}>Próxima</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSurveys;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}