{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\AllSurveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllSurveys = () => {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  const [filteredSurveys, setFilteredSurveys] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchCategory, setSearchCategory] = useState('');\n\n  // Carregar os dados da API\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/surveys').then(response => {\n      setSurveys(response.data);\n      setFilteredSurveys(response.data);\n    }).catch(error => console.error('Erro ao obter as entrevistas:', error));\n  }, []);\n\n  // Função de filtro\n  useEffect(() => {\n    if (searchTerm.trim() === '') {\n      setFilteredSurveys(surveys); // Se não houver pesquisa, exibe todas as entrevistas\n    } else {\n      const filtered = surveys.filter(survey => {\n        switch (searchCategory) {\n          case 'entrevistado':\n            return survey.entrevistadoName.toLowerCase().includes(searchTerm.toLowerCase());\n          case 'entrevistador':\n            return survey.entrevistadorName.toLowerCase().includes(searchTerm.toLowerCase());\n          case 'id':\n            return survey.id_entrevista.toString().includes(searchTerm);\n          default:\n            return survey.entrevistadoName.toLowerCase().includes(searchTerm.toLowerCase()) || survey.entrevistadorName.toLowerCase().includes(searchTerm.toLowerCase()) || survey.id_entrevista.toString().includes(searchTerm);\n        }\n      });\n      setFilteredSurveys(filtered);\n    }\n  }, [searchTerm, searchCategory, surveys]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Entrevistas Realizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: searchCategory,\n        onChange: e => setSearchCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Selecione a categoria\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"entrevistado\",\n          children: \"Nome do Entrevistado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"entrevistador\",\n          children: \"Nome do Entrevistador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"id\",\n          children: \"ID da Entrevista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Pesquisar\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value) // Atualiza o termo de pesquisa\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: filteredSurveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Entrevistador:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadorName, \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Entrevistado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadoName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"ID da Entrevista:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 16\n          }, this), \" \", survey.id_entrevista]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, survey.id_entrevista, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSurveys, \"7wDPri2Qi6Gj3lWXJ2oozFij9B4=\");\n_c = AllSurveys;\nexport default AllSurveys;\nvar _c;\n$RefreshReg$(_c, \"AllSurveys\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AllSurveys","_s","surveys","setSurveys","filteredSurveys","setFilteredSurveys","searchTerm","setSearchTerm","searchCategory","setSearchCategory","get","then","response","data","catch","error","console","trim","filtered","filter","survey","entrevistadoName","toLowerCase","includes","entrevistadorName","id_entrevista","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","map","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/AllSurveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AllSurveys = () => {\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [filteredSurveys, setFilteredSurveys] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchCategory, setSearchCategory] = useState('');\r\n\r\n  // Carregar os dados da API\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:4000/api/surveys')\r\n      .then((response) => {\r\n        setSurveys(response.data);\r\n        setFilteredSurveys(response.data);\r\n      })\r\n      .catch((error) => console.error('Erro ao obter as entrevistas:', error));\r\n  }, []);\r\n\r\n  // Função de filtro\r\n  useEffect(() => {\r\n    if (searchTerm.trim() === '') {\r\n      setFilteredSurveys(surveys); // Se não houver pesquisa, exibe todas as entrevistas\r\n    } else {\r\n      const filtered = surveys.filter((survey) => {\r\n        switch (searchCategory) {\r\n          case 'entrevistado':\r\n            return survey.entrevistadoName.toLowerCase().includes(searchTerm.toLowerCase());\r\n          case 'entrevistador':\r\n            return survey.entrevistadorName.toLowerCase().includes(searchTerm.toLowerCase());\r\n          case 'id':\r\n            return survey.id_entrevista.toString().includes(searchTerm);\r\n          default:\r\n            return (\r\n              survey.entrevistadoName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n              survey.entrevistadorName.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n              survey.id_entrevista.toString().includes(searchTerm)\r\n            );\r\n        }\r\n      });\r\n      setFilteredSurveys(filtered);\r\n    }\r\n  }, [searchTerm, searchCategory, surveys]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Entrevistas Realizadas</h1>\r\n\r\n      {/* Barra de pesquisa com seletor de categoria */}\r\n      <div>\r\n        <select\r\n          value={searchCategory}\r\n          onChange={(e) => setSearchCategory(e.target.value)}\r\n        >\r\n          <option value=\"\">Selecione a categoria</option>\r\n          <option value=\"entrevistado\">Nome do Entrevistado</option>\r\n          <option value=\"entrevistador\">Nome do Entrevistador</option>\r\n          <option value=\"id\">ID da Entrevista</option>\r\n        </select>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Pesquisar\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)} // Atualiza o termo de pesquisa\r\n        />\r\n      </div>\r\n\r\n      {/* Exibir as entrevistas filtradas */}\r\n      <div>\r\n        {filteredSurveys.map((survey) => (\r\n          <div key={survey.id_entrevista}>\r\n            <h2>\r\n              <strong>Entrevistador:</strong> {survey.entrevistadorName} |\r\n              <strong> Entrevistado:</strong> {survey.entrevistadoName}\r\n            </h2>\r\n            <p><strong>ID da Entrevista:</strong> {survey.id_entrevista}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSurveys;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}