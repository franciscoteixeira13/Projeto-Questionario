{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './Survey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    selectedQuestions,\n    userInfo\n  } = location.state || {\n    selectedQuestions: [],\n    userInfo: {}\n  };\n  console.log('Perguntas recebidas:', selectedQuestions); // Log para depuração\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\n  const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\n  const [files, setFiles] = useState([]);\n  const [expandedInfo, setExpandedInfo] = useState({});\n  const handleNextQuestion = () => {\n    if (responses[currentQuestionIndex] === '') {\n      alert('Por favor, forneça uma resposta antes de continuar.'); // Alerta para o usuário\n      return; // Não avança se a resposta estiver vazia\n    }\n    if (currentQuestionIndex === selectedQuestions.length - 1) {\n      handleSubmit();\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1);\n    }\n  };\n  const handleOptionSelect = option => {\n    setResponses(prevResponses => {\n      const updatedResponses = [...prevResponses];\n      updatedResponses[currentQuestionIndex] = option;\n      return updatedResponses;\n    });\n  };\n  const toggleInfo = id => {\n    setExpandedInfo(prev => ({\n      ...prev,\n      [id]: !prev[id]\n    }));\n  };\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(selectedFiles); // Armazena os arquivos no estado\n  };\n  const handleSubmit = () => {\n    const now = new Date();\n    const submissionData = {\n      user: userInfo,\n      responses: responses.map((resp, index) => ({\n        Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\n        Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\n        Indice_Pergunta: selectedQuestions[index].id,\n        Ambito: selectedQuestions[index].âmbito,\n        Pergunta: selectedQuestions[index].pergunta,\n        Resposta: responses[index],\n        Comentarios: comments[index]\n      })),\n      files: files // Adiciona os arquivos ao envio\n    };\n    console.log('Dados a serem enviados:', submissionData);\n\n    // Enviar os dados para o backend\n    fetch('http://localhost:4000/api/survey', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(submissionData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.text().then(text => {\n          throw new Error(`Erro ${response.status}: ${text}`);\n        });\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Dados enviados com sucesso:', data);\n      navigate('/survey-summary', {\n        state: {\n          selectedQuestions,\n          responses,\n          comments\n        }\n      });\n    }).catch(error => {\n      console.error('Erro ao enviar os dados:', error);\n      alert(`Houve um erro ao enviar os dados: ${error.message}`);\n    });\n  };\n  if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\n    return null; // Ou alguma mensagem de erro\n  }\n  const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\n  const totalQuestions = selectedQuestions.length; // Total de perguntas\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Pergunta \", currentQuestionIndex + 1, \" de \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pergunta-text\",\n      children: selectedQuestions[currentQuestionIndex].pergunta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Informa\\xE7\\xF5es do Entrevistado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nome:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 20\n        }, this), \" \", userInfo === null || userInfo === void 0 ? void 0 : userInfo.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cargo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 20\n        }, this), \" \", userInfo === null || userInfo === void 0 ? void 0 : userInfo.jobTitle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Localiza\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 20\n        }, this), \" \", userInfo === null || userInfo === void 0 ? void 0 : userInfo.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\xC1rea Funcional:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 20\n        }, this), \" \", userInfo === null || userInfo === void 0 ? void 0 : userInfo.functionalArea]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Sim'),\n        children: \"Sim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Não'),\n        children: \"N\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"40\",\n      className: \"response-input\",\n      value: responses[currentQuestionIndex],\n      onChange: e => setResponses(prevResponses => {\n        const updatedResponses = [...prevResponses];\n        updatedResponses[currentQuestionIndex] = e.target.value;\n        return updatedResponses;\n      }),\n      placeholder: \"A sua resposta...\",\n      rows: \"4\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"informacoes-adicionais\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"informacoes-button\",\n        onClick: () => toggleInfo(currentQuestionId),\n        style: {\n          cursor: 'pointer'\n        },\n        children: [expandedInfo[currentQuestionId] ? '▲' : '▼', \" Informa\\xE7\\xF5es Adicionais\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }, this), expandedInfo[currentQuestionId] && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"question-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Normas Aplic\\xE1veis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this), \" \", selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\xCDndice da Pergunta:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), \" \", selectedQuestions[currentQuestionIndex].id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\xC2mbito:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), \" \", selectedQuestions[currentQuestionIndex].âmbito || 'N/A']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Coment\\xE1rios:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"40\",\n      className: \"comment-input\",\n      value: comments[currentQuestionIndex],\n      onChange: e => setComments(prevComments => {\n        const updatedComments = [...prevComments];\n        updatedComments[currentQuestionIndex] = e.target.value;\n        return updatedComments;\n      }),\n      placeholder: \"O seu coment\\xE1rio...\",\n      rows: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        children: \"Carregar Arquivos (Excel, Word, Imagens, etc.):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        multiple: true,\n        accept: \".xlsx, .xls, .docx, .doc, .jpg, .jpeg, .png, .pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handlePreviousQuestion,\n        disabled: currentQuestionIndex === 0,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"BZruFnMD74TV3qP7a80hAPz4jtU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Survey","_s","location","navigate","selectedQuestions","userInfo","state","console","log","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","Array","length","fill","comments","setComments","files","setFiles","expandedInfo","setExpandedInfo","handleNextQuestion","alert","handleSubmit","prevIndex","handlePreviousQuestion","handleOptionSelect","option","prevResponses","updatedResponses","toggleInfo","id","prev","handleFileChange","e","selectedFiles","from","target","now","Date","submissionData","user","map","resp","index","Data","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","Normas_aplicaveis","normasAplicaveis","Indice_Pergunta","Ambito","âmbito","Pergunta","pergunta","Resposta","Comentarios","fetch","method","headers","body","JSON","stringify","then","response","ok","text","Error","status","json","data","catch","error","message","currentQuestionId","totalQuestions","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","jobTitle","functionalArea","onClick","minLength","maxLength","value","onChange","placeholder","rows","required","style","cursor","prevComments","updatedComments","htmlFor","type","multiple","accept","disabled","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/Survey.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './Survey.css';\r\n\r\nconst Survey = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { selectedQuestions, userInfo } = location.state || { selectedQuestions: [], userInfo: {} };\r\n\r\n    console.log('Perguntas recebidas:', selectedQuestions); // Log para depuração\r\n\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [files, setFiles] = useState([]);\r\n    const [expandedInfo, setExpandedInfo] = useState({});\r\n\r\n    const handleNextQuestion = () => {\r\n        if (responses[currentQuestionIndex] === '') {\r\n            alert('Por favor, forneça uma resposta antes de continuar.'); // Alerta para o usuário\r\n            return; // Não avança se a resposta estiver vazia\r\n        }\r\n\r\n        if (currentQuestionIndex === selectedQuestions.length - 1) {\r\n            handleSubmit();\r\n        } else {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousQuestion = () => {\r\n        if (currentQuestionIndex > 0) {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\r\n        }\r\n    };\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setResponses((prevResponses) => {\r\n            const updatedResponses = [...prevResponses];\r\n            updatedResponses[currentQuestionIndex] = option;\r\n            return updatedResponses;\r\n        });\r\n    };\r\n\r\n    const toggleInfo = (id) => {\r\n        setExpandedInfo(prev => ({\r\n            ...prev,\r\n            [id]: !prev[id],\r\n        }));\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const selectedFiles = Array.from(e.target.files);\r\n        setFiles(selectedFiles); // Armazena os arquivos no estado\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const now = new Date();\r\n        const submissionData = {\r\n            user: userInfo,\r\n            responses: responses.map((resp, index) => ({\r\n                Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\r\n                Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\r\n                Indice_Pergunta: selectedQuestions[index].id,\r\n                Ambito: selectedQuestions[index].âmbito,\r\n                Pergunta: selectedQuestions[index].pergunta,\r\n                Resposta: responses[index],\r\n                Comentarios: comments[index]\r\n            })),\r\n            files: files // Adiciona os arquivos ao envio\r\n        };\r\n\r\n        console.log('Dados a serem enviados:', submissionData);\r\n\r\n        // Enviar os dados para o backend\r\n        fetch('http://localhost:4000/api/survey', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(submissionData),\r\n        })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.text().then(text => {\r\n                    throw new Error(`Erro ${response.status}: ${text}`);\r\n                });\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            console.log('Dados enviados com sucesso:', data);\r\n            navigate('/survey-summary', { state: { selectedQuestions, responses, comments } });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Erro ao enviar os dados:', error);\r\n            alert(`Houve um erro ao enviar os dados: ${error.message}`);\r\n        });\r\n    };\r\n\r\n    if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\r\n        return null; // Ou alguma mensagem de erro\r\n    }\r\n\r\n    const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\r\n    const totalQuestions = selectedQuestions.length; // Total de perguntas\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pergunta {currentQuestionIndex + 1} de {totalQuestions}</h2>\r\n            <h3 className='pergunta-text'>{selectedQuestions[currentQuestionIndex].pergunta}</h3>\r\n\r\n            {/* Informações do Entrevistado */}\r\n            <div className=\"user-info\">\r\n                <h4>Informações do Entrevistado</h4>\r\n                <p><strong>Nome:</strong> {userInfo?.name}</p>\r\n                <p><strong>Cargo:</strong> {userInfo?.jobTitle}</p>\r\n                <p><strong>Localização:</strong> {userInfo?.location}</p>\r\n                <p><strong>Área Funcional:</strong> {userInfo?.functionalArea}</p>\r\n            </div>\r\n\r\n            <div className=\"option-buttons\">\r\n                <button\r\n                    className={`small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`}\r\n                    onClick={() => handleOptionSelect('Sim')}\r\n                >\r\n                    Sim\r\n                </button>\r\n                <button\r\n                    className={`small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`}\r\n                    onClick={() => handleOptionSelect('Não')}\r\n                >\r\n                    Não\r\n                </button>\r\n            </div>\r\n            <textarea\r\n                minLength='5'\r\n                maxLength='40'\r\n                className=\"response-input\"\r\n                value={responses[currentQuestionIndex]}\r\n                onChange={(e) =>\r\n                    setResponses((prevResponses) => {\r\n                        const updatedResponses = [...prevResponses];\r\n                        updatedResponses[currentQuestionIndex] = e.target.value;\r\n                        return updatedResponses;\r\n                    })\r\n                }\r\n                placeholder=\"A sua resposta...\"\r\n                rows=\"4\"\r\n                required\r\n            />\r\n\r\n            <div className='informacoes-adicionais'>\r\n                <button className='informacoes-button' onClick={() => toggleInfo(currentQuestionId)} style={{ cursor: 'pointer' }}>\r\n                    {expandedInfo[currentQuestionId] ? '▲' : '▼'} Informações Adicionais\r\n                </button>\r\n            </div>\r\n            {expandedInfo[currentQuestionId] && (\r\n                <ul className='question-details'>\r\n                    <li><strong>Normas Aplicáveis:</strong> {selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A'}</li>\r\n                    <li><strong>Índice da Pergunta:</strong> {selectedQuestions[currentQuestionIndex].id}</li>\r\n                    <li><strong>Âmbito:</strong> {selectedQuestions[currentQuestionIndex].âmbito || 'N/A'}</li>\r\n                </ul>\r\n            )}\r\n\r\n            <h3>Comentários:</h3>\r\n            <textarea\r\n                minLength='5'\r\n                maxLength='40'\r\n                className=\"comment-input\"\r\n                value={comments[currentQuestionIndex]}\r\n                onChange={(e) =>\r\n                    setComments((prevComments) => {\r\n                        const updatedComments = [...prevComments];\r\n                        updatedComments[currentQuestionIndex] = e.target.value;\r\n                        return updatedComments;\r\n                    })\r\n                }\r\n                placeholder=\"O seu comentário...\"\r\n                rows=\"3\"\r\n            />\r\n\r\n            {/* Upload de Arquivos */}\r\n            <div className=\"file-upload\">\r\n                <label htmlFor=\"file-upload\">Carregar Arquivos (Excel, Word, Imagens, etc.):</label>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"file-upload\"\r\n                    multiple\r\n                    accept=\".xlsx, .xls, .docx, .doc, .jpg, .jpeg, .png, .pdf\"\r\n                    onChange={handleFileChange}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n                {currentQuestionIndex > 0 && (\r\n                    <button className='back-button' onClick={handlePreviousQuestion} disabled={currentQuestionIndex === 0}>\r\n                        Voltar\r\n                    </button>\r\n                )}\r\n                <button className='submit-button' type='submit' onClick={handleNextQuestion}>\r\n                    {currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Survey;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}