{"ast":null,"code":"\"use strict\";\n\n// These use the global symbol registry so that multiple copies of this\n// library can work together in case they are not deduped.\nconst GENSYNC_START = Symbol.for(\"gensync:v1:start\");\nconst GENSYNC_SUSPEND = Symbol.for(\"gensync:v1:suspend\");\nconst GENSYNC_EXPECTED_START = \"GENSYNC_EXPECTED_START\";\nconst GENSYNC_EXPECTED_SUSPEND = \"GENSYNC_EXPECTED_SUSPEND\";\nconst GENSYNC_OPTIONS_ERROR = \"GENSYNC_OPTIONS_ERROR\";\nconst GENSYNC_RACE_NONEMPTY = \"GENSYNC_RACE_NONEMPTY\";\nconst GENSYNC_ERRBACK_NO_CALLBACK = \"GENSYNC_ERRBACK_NO_CALLBACK\";\nmodule.exports = Object.assign(function gensync(optsOrFn) {\n  let genFn = optsOrFn;\n  if (typeof optsOrFn !== \"function\") {\n    genFn = newGenerator(optsOrFn);\n  } else {\n    genFn = wrapGenerator(optsOrFn);\n  }\n  return Object.assign(genFn, makeFunctionAPI(genFn));\n}, {\n  all: buildOperation({\n    name: \"all\",\n    arity: 1,\n    sync: function (args) {\n      const items = Array.from(args[0]);\n      return items.map(item => evaluateSync(item));\n    },\n    async: function (args, resolve, reject) {\n      const items = Array.from(args[0]);\n      if (items.length === 0) {\n        Promise.resolve().then(() => resolve([]));\n        return;\n      }\n      let count = 0;\n      const results = items.map(() => undefined);\n      items.forEach((item, i) => {\n        evaluateAsync(item, val => {\n          results[i] = val;\n          count += 1;\n          if (count === results.length) resolve(results);\n        }, reject);\n      });\n    }\n  }),\n  race: buildOperation({\n    name: \"race\",\n    arity: 1,\n    sync: function (args) {\n      const items = Array.from(args[0]);\n      if (items.length === 0) {\n        throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\n      }\n      return evaluateSync(items[0]);\n    },\n    async: function (args, resolve, reject) {\n      const items = Array.from(args[0]);\n      if (items.length === 0) {\n        throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\n      }\n      for (const item of items) {\n        evaluateAsync(item, resolve, reject);\n      }\n    }\n  })\n});\n\n/**\r\n * Given a generator function, return the standard API object that executes\r\n * the generator and calls the callbacks.\r\n */\nfunction makeFunctionAPI(genFn) {\n  const fns = {\n    sync: function (...args) {\n      return evaluateSync(genFn.apply(this, args));\n    },\n    async: function (...args) {\n      return new Promise((resolve, reject) => {\n        evaluateAsync(genFn.apply(this, args), resolve, reject);\n      });\n    },\n    errback: function (...args) {\n      const cb = args.pop();\n      if (typeof cb !== \"function\") {\n        throw makeError(\"Asynchronous function called without callback\", GENSYNC_ERRBACK_NO_CALLBACK);\n      }\n      let gen;\n      try {\n        gen = genFn.apply(this, args);\n      } catch (err) {\n        cb(err);\n        return;\n      }\n      evaluateAsync(gen, val => cb(undefined, val), err => cb(err));\n    }\n  };\n  return fns;\n}\nfunction assertTypeof(type, name, value, allowUndefined) {\n  if (typeof value === type || allowUndefined && typeof value === \"undefined\") {\n    return;\n  }\n  let msg;\n  if (allowUndefined) {\n    msg = `Expected opts.${name} to be either a ${type}, or undefined.`;\n  } else {\n    msg = `Expected opts.${name} to be a ${type}.`;\n  }\n  throw makeError(msg, GENSYNC_OPTIONS_ERROR);\n}\nfunction makeError(msg, code) {\n  return Object.assign(new Error(msg), {\n    code\n  });\n}\n\n/**\r\n * Given an options object, return a new generator that dispatches the\r\n * correct handler based on sync or async execution.\r\n */\nfunction newGenerator({\n  name,\n  arity,\n  sync,\n  async,\n  errback\n}) {\n  assertTypeof(\"string\", \"name\", name, true /* allowUndefined */);\n  assertTypeof(\"number\", \"arity\", arity, true /* allowUndefined */);\n  assertTypeof(\"function\", \"sync\", sync);\n  assertTypeof(\"function\", \"async\", async, true /* allowUndefined */);\n  assertTypeof(\"function\", \"errback\", errback, true /* allowUndefined */);\n  if (async && errback) {\n    throw makeError(\"Expected one of either opts.async or opts.errback, but got _both_.\", GENSYNC_OPTIONS_ERROR);\n  }\n  if (typeof name !== \"string\") {\n    let fnName;\n    if (errback && errback.name && errback.name !== \"errback\") {\n      fnName = errback.name;\n    }\n    if (async && async.name && async.name !== \"async\") {\n      fnName = async.name.replace(/Async$/, \"\");\n    }\n    if (sync && sync.name && sync.name !== \"sync\") {\n      fnName = sync.name.replace(/Sync$/, \"\");\n    }\n    if (typeof fnName === \"string\") {\n      name = fnName;\n    }\n  }\n  if (typeof arity !== \"number\") {\n    arity = sync.length;\n  }\n  return buildOperation({\n    name,\n    arity,\n    sync: function (args) {\n      return sync.apply(this, args);\n    },\n    async: function (args, resolve, reject) {\n      if (async) {\n        async.apply(this, args).then(resolve, reject);\n      } else if (errback) {\n        errback.call(this, ...args, (err, value) => {\n          if (err == null) resolve(value);else reject(err);\n        });\n      } else {\n        resolve(sync.apply(this, args));\n      }\n    }\n  });\n}\nfunction wrapGenerator(genFn) {\n  return setFunctionMetadata(genFn.name, genFn.length, function (...args) {\n    return genFn.apply(this, args);\n  });\n}\nfunction buildOperation({\n  name,\n  arity,\n  sync,\n  async\n}) {\n  return setFunctionMetadata(name, arity, function* (...args) {\n    const resume = yield GENSYNC_START;\n    if (!resume) {\n      // Break the tail call to avoid a bug in V8 v6.X with --harmony enabled.\n      const res = sync.call(this, args);\n      return res;\n    }\n    let result;\n    try {\n      async.call(this, args, value => {\n        if (result) return;\n        result = {\n          value\n        };\n        resume();\n      }, err => {\n        if (result) return;\n        result = {\n          err\n        };\n        resume();\n      });\n    } catch (err) {\n      result = {\n        err\n      };\n      resume();\n    }\n\n    // Suspend until the callbacks run. Will resume synchronously if the\n    // callback was already called.\n    yield GENSYNC_SUSPEND;\n    if (result.hasOwnProperty(\"err\")) {\n      throw result.err;\n    }\n    return result.value;\n  });\n}\nfunction evaluateSync(gen) {\n  let value;\n  while (!({\n    value\n  } = gen.next()).done) {\n    assertStart(value, gen);\n  }\n  return value;\n}\nfunction evaluateAsync(gen, resolve, reject) {\n  (function step() {\n    try {\n      let value;\n      while (!({\n        value\n      } = gen.next()).done) {\n        assertStart(value, gen);\n\n        // If this throws, it is considered to have broken the contract\n        // established for async handlers. If these handlers are called\n        // synchronously, it is also considered bad behavior.\n        let sync = true;\n        let didSyncResume = false;\n        const out = gen.next(() => {\n          if (sync) {\n            didSyncResume = true;\n          } else {\n            step();\n          }\n        });\n        sync = false;\n        assertSuspend(out, gen);\n        if (!didSyncResume) {\n          // Callback wasn't called synchronously, so break out of the loop\n          // and let it call 'step' later.\n          return;\n        }\n      }\n      return resolve(value);\n    } catch (err) {\n      return reject(err);\n    }\n  })();\n}\nfunction assertStart(value, gen) {\n  if (value === GENSYNC_START) return;\n  throwError(gen, makeError(`Got unexpected yielded value in gensync generator: ${JSON.stringify(value)}. Did you perhaps mean to use 'yield*' instead of 'yield'?`, GENSYNC_EXPECTED_START));\n}\nfunction assertSuspend({\n  value,\n  done\n}, gen) {\n  if (!done && value === GENSYNC_SUSPEND) return;\n  throwError(gen, makeError(done ? \"Unexpected generator completion. If you get this, it is probably a gensync bug.\" : `Expected GENSYNC_SUSPEND, got ${JSON.stringify(value)}. If you get this, it is probably a gensync bug.`, GENSYNC_EXPECTED_SUSPEND));\n}\nfunction throwError(gen, err) {\n  // Call `.throw` so that users can step in a debugger to easily see which\n  // 'yield' passed an unexpected value. If the `.throw` call didn't throw\n  // back to the generator, we explicitly do it to stop the error\n  // from being swallowed by user code try/catches.\n  if (gen.throw) gen.throw(err);\n  throw err;\n}\nfunction isIterable(value) {\n  return !!value && (typeof value === \"object\" || typeof value === \"function\") && !value[Symbol.iterator];\n}\nfunction setFunctionMetadata(name, arity, fn) {\n  if (typeof name === \"string\") {\n    // This should always work on the supported Node versions, but for the\n    // sake of users that are compiling to older versions, we check for\n    // configurability so we don't throw.\n    const nameDesc = Object.getOwnPropertyDescriptor(fn, \"name\");\n    if (!nameDesc || nameDesc.configurable) {\n      Object.defineProperty(fn, \"name\", Object.assign(nameDesc || {}, {\n        configurable: true,\n        value: name\n      }));\n    }\n  }\n  if (typeof arity === \"number\") {\n    const lengthDesc = Object.getOwnPropertyDescriptor(fn, \"length\");\n    if (!lengthDesc || lengthDesc.configurable) {\n      Object.defineProperty(fn, \"length\", Object.assign(lengthDesc || {}, {\n        configurable: true,\n        value: arity\n      }));\n    }\n  }\n  return fn;\n}","map":{"version":3,"names":["GENSYNC_START","Symbol","for","GENSYNC_SUSPEND","GENSYNC_EXPECTED_START","GENSYNC_EXPECTED_SUSPEND","GENSYNC_OPTIONS_ERROR","GENSYNC_RACE_NONEMPTY","GENSYNC_ERRBACK_NO_CALLBACK","module","exports","Object","assign","gensync","optsOrFn","genFn","newGenerator","wrapGenerator","makeFunctionAPI","all","buildOperation","name","arity","sync","args","items","Array","from","map","item","evaluateSync","async","resolve","reject","length","Promise","then","count","results","undefined","forEach","i","evaluateAsync","val","race","makeError","fns","apply","errback","cb","pop","gen","err","assertTypeof","type","value","allowUndefined","msg","code","Error","fnName","replace","call","setFunctionMetadata","resume","res","result","hasOwnProperty","next","done","assertStart","step","didSyncResume","out","assertSuspend","throwError","JSON","stringify","throw","isIterable","iterator","fn","nameDesc","getOwnPropertyDescriptor","configurable","defineProperty","lengthDesc"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/node_modules/gensync/index.js"],"sourcesContent":["\"use strict\";\r\n\r\n// These use the global symbol registry so that multiple copies of this\r\n// library can work together in case they are not deduped.\r\nconst GENSYNC_START = Symbol.for(\"gensync:v1:start\");\r\nconst GENSYNC_SUSPEND = Symbol.for(\"gensync:v1:suspend\");\r\n\r\nconst GENSYNC_EXPECTED_START = \"GENSYNC_EXPECTED_START\";\r\nconst GENSYNC_EXPECTED_SUSPEND = \"GENSYNC_EXPECTED_SUSPEND\";\r\nconst GENSYNC_OPTIONS_ERROR = \"GENSYNC_OPTIONS_ERROR\";\r\nconst GENSYNC_RACE_NONEMPTY = \"GENSYNC_RACE_NONEMPTY\";\r\nconst GENSYNC_ERRBACK_NO_CALLBACK = \"GENSYNC_ERRBACK_NO_CALLBACK\";\r\n\r\nmodule.exports = Object.assign(\r\n  function gensync(optsOrFn) {\r\n    let genFn = optsOrFn;\r\n    if (typeof optsOrFn !== \"function\") {\r\n      genFn = newGenerator(optsOrFn);\r\n    } else {\r\n      genFn = wrapGenerator(optsOrFn);\r\n    }\r\n\r\n    return Object.assign(genFn, makeFunctionAPI(genFn));\r\n  },\r\n  {\r\n    all: buildOperation({\r\n      name: \"all\",\r\n      arity: 1,\r\n      sync: function(args) {\r\n        const items = Array.from(args[0]);\r\n        return items.map(item => evaluateSync(item));\r\n      },\r\n      async: function(args, resolve, reject) {\r\n        const items = Array.from(args[0]);\r\n\r\n        if (items.length === 0) {\r\n          Promise.resolve().then(() => resolve([]));\r\n          return;\r\n        }\r\n\r\n        let count = 0;\r\n        const results = items.map(() => undefined);\r\n        items.forEach((item, i) => {\r\n          evaluateAsync(\r\n            item,\r\n            val => {\r\n              results[i] = val;\r\n              count += 1;\r\n\r\n              if (count === results.length) resolve(results);\r\n            },\r\n            reject\r\n          );\r\n        });\r\n      },\r\n    }),\r\n    race: buildOperation({\r\n      name: \"race\",\r\n      arity: 1,\r\n      sync: function(args) {\r\n        const items = Array.from(args[0]);\r\n        if (items.length === 0) {\r\n          throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\r\n        }\r\n\r\n        return evaluateSync(items[0]);\r\n      },\r\n      async: function(args, resolve, reject) {\r\n        const items = Array.from(args[0]);\r\n        if (items.length === 0) {\r\n          throw makeError(\"Must race at least 1 item\", GENSYNC_RACE_NONEMPTY);\r\n        }\r\n\r\n        for (const item of items) {\r\n          evaluateAsync(item, resolve, reject);\r\n        }\r\n      },\r\n    }),\r\n  }\r\n);\r\n\r\n/**\r\n * Given a generator function, return the standard API object that executes\r\n * the generator and calls the callbacks.\r\n */\r\nfunction makeFunctionAPI(genFn) {\r\n  const fns = {\r\n    sync: function(...args) {\r\n      return evaluateSync(genFn.apply(this, args));\r\n    },\r\n    async: function(...args) {\r\n      return new Promise((resolve, reject) => {\r\n        evaluateAsync(genFn.apply(this, args), resolve, reject);\r\n      });\r\n    },\r\n    errback: function(...args) {\r\n      const cb = args.pop();\r\n      if (typeof cb !== \"function\") {\r\n        throw makeError(\r\n          \"Asynchronous function called without callback\",\r\n          GENSYNC_ERRBACK_NO_CALLBACK\r\n        );\r\n      }\r\n\r\n      let gen;\r\n      try {\r\n        gen = genFn.apply(this, args);\r\n      } catch (err) {\r\n        cb(err);\r\n        return;\r\n      }\r\n\r\n      evaluateAsync(gen, val => cb(undefined, val), err => cb(err));\r\n    },\r\n  };\r\n  return fns;\r\n}\r\n\r\nfunction assertTypeof(type, name, value, allowUndefined) {\r\n  if (\r\n    typeof value === type ||\r\n    (allowUndefined && typeof value === \"undefined\")\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  let msg;\r\n  if (allowUndefined) {\r\n    msg = `Expected opts.${name} to be either a ${type}, or undefined.`;\r\n  } else {\r\n    msg = `Expected opts.${name} to be a ${type}.`;\r\n  }\r\n\r\n  throw makeError(msg, GENSYNC_OPTIONS_ERROR);\r\n}\r\nfunction makeError(msg, code) {\r\n  return Object.assign(new Error(msg), { code });\r\n}\r\n\r\n/**\r\n * Given an options object, return a new generator that dispatches the\r\n * correct handler based on sync or async execution.\r\n */\r\nfunction newGenerator({ name, arity, sync, async, errback }) {\r\n  assertTypeof(\"string\", \"name\", name, true /* allowUndefined */);\r\n  assertTypeof(\"number\", \"arity\", arity, true /* allowUndefined */);\r\n  assertTypeof(\"function\", \"sync\", sync);\r\n  assertTypeof(\"function\", \"async\", async, true /* allowUndefined */);\r\n  assertTypeof(\"function\", \"errback\", errback, true /* allowUndefined */);\r\n  if (async && errback) {\r\n    throw makeError(\r\n      \"Expected one of either opts.async or opts.errback, but got _both_.\",\r\n      GENSYNC_OPTIONS_ERROR\r\n    );\r\n  }\r\n\r\n  if (typeof name !== \"string\") {\r\n    let fnName;\r\n    if (errback && errback.name && errback.name !== \"errback\") {\r\n      fnName = errback.name;\r\n    }\r\n    if (async && async.name && async.name !== \"async\") {\r\n      fnName = async.name.replace(/Async$/, \"\");\r\n    }\r\n    if (sync && sync.name && sync.name !== \"sync\") {\r\n      fnName = sync.name.replace(/Sync$/, \"\");\r\n    }\r\n\r\n    if (typeof fnName === \"string\") {\r\n      name = fnName;\r\n    }\r\n  }\r\n\r\n  if (typeof arity !== \"number\") {\r\n    arity = sync.length;\r\n  }\r\n\r\n  return buildOperation({\r\n    name,\r\n    arity,\r\n    sync: function(args) {\r\n      return sync.apply(this, args);\r\n    },\r\n    async: function(args, resolve, reject) {\r\n      if (async) {\r\n        async.apply(this, args).then(resolve, reject);\r\n      } else if (errback) {\r\n        errback.call(this, ...args, (err, value) => {\r\n          if (err == null) resolve(value);\r\n          else reject(err);\r\n        });\r\n      } else {\r\n        resolve(sync.apply(this, args));\r\n      }\r\n    },\r\n  });\r\n}\r\n\r\nfunction wrapGenerator(genFn) {\r\n  return setFunctionMetadata(genFn.name, genFn.length, function(...args) {\r\n    return genFn.apply(this, args);\r\n  });\r\n}\r\n\r\nfunction buildOperation({ name, arity, sync, async }) {\r\n  return setFunctionMetadata(name, arity, function*(...args) {\r\n    const resume = yield GENSYNC_START;\r\n    if (!resume) {\r\n      // Break the tail call to avoid a bug in V8 v6.X with --harmony enabled.\r\n      const res = sync.call(this, args);\r\n      return res;\r\n    }\r\n\r\n    let result;\r\n    try {\r\n      async.call(\r\n        this,\r\n        args,\r\n        value => {\r\n          if (result) return;\r\n\r\n          result = { value };\r\n          resume();\r\n        },\r\n        err => {\r\n          if (result) return;\r\n\r\n          result = { err };\r\n          resume();\r\n        }\r\n      );\r\n    } catch (err) {\r\n      result = { err };\r\n      resume();\r\n    }\r\n\r\n    // Suspend until the callbacks run. Will resume synchronously if the\r\n    // callback was already called.\r\n    yield GENSYNC_SUSPEND;\r\n\r\n    if (result.hasOwnProperty(\"err\")) {\r\n      throw result.err;\r\n    }\r\n\r\n    return result.value;\r\n  });\r\n}\r\n\r\nfunction evaluateSync(gen) {\r\n  let value;\r\n  while (!({ value } = gen.next()).done) {\r\n    assertStart(value, gen);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction evaluateAsync(gen, resolve, reject) {\r\n  (function step() {\r\n    try {\r\n      let value;\r\n      while (!({ value } = gen.next()).done) {\r\n        assertStart(value, gen);\r\n\r\n        // If this throws, it is considered to have broken the contract\r\n        // established for async handlers. If these handlers are called\r\n        // synchronously, it is also considered bad behavior.\r\n        let sync = true;\r\n        let didSyncResume = false;\r\n        const out = gen.next(() => {\r\n          if (sync) {\r\n            didSyncResume = true;\r\n          } else {\r\n            step();\r\n          }\r\n        });\r\n        sync = false;\r\n\r\n        assertSuspend(out, gen);\r\n\r\n        if (!didSyncResume) {\r\n          // Callback wasn't called synchronously, so break out of the loop\r\n          // and let it call 'step' later.\r\n          return;\r\n        }\r\n      }\r\n\r\n      return resolve(value);\r\n    } catch (err) {\r\n      return reject(err);\r\n    }\r\n  })();\r\n}\r\n\r\nfunction assertStart(value, gen) {\r\n  if (value === GENSYNC_START) return;\r\n\r\n  throwError(\r\n    gen,\r\n    makeError(\r\n      `Got unexpected yielded value in gensync generator: ${JSON.stringify(\r\n        value\r\n      )}. Did you perhaps mean to use 'yield*' instead of 'yield'?`,\r\n      GENSYNC_EXPECTED_START\r\n    )\r\n  );\r\n}\r\nfunction assertSuspend({ value, done }, gen) {\r\n  if (!done && value === GENSYNC_SUSPEND) return;\r\n\r\n  throwError(\r\n    gen,\r\n    makeError(\r\n      done\r\n        ? \"Unexpected generator completion. If you get this, it is probably a gensync bug.\"\r\n        : `Expected GENSYNC_SUSPEND, got ${JSON.stringify(\r\n            value\r\n          )}. If you get this, it is probably a gensync bug.`,\r\n      GENSYNC_EXPECTED_SUSPEND\r\n    )\r\n  );\r\n}\r\n\r\nfunction throwError(gen, err) {\r\n  // Call `.throw` so that users can step in a debugger to easily see which\r\n  // 'yield' passed an unexpected value. If the `.throw` call didn't throw\r\n  // back to the generator, we explicitly do it to stop the error\r\n  // from being swallowed by user code try/catches.\r\n  if (gen.throw) gen.throw(err);\r\n  throw err;\r\n}\r\n\r\nfunction isIterable(value) {\r\n  return (\r\n    !!value &&\r\n    (typeof value === \"object\" || typeof value === \"function\") &&\r\n    !value[Symbol.iterator]\r\n  );\r\n}\r\n\r\nfunction setFunctionMetadata(name, arity, fn) {\r\n  if (typeof name === \"string\") {\r\n    // This should always work on the supported Node versions, but for the\r\n    // sake of users that are compiling to older versions, we check for\r\n    // configurability so we don't throw.\r\n    const nameDesc = Object.getOwnPropertyDescriptor(fn, \"name\");\r\n    if (!nameDesc || nameDesc.configurable) {\r\n      Object.defineProperty(\r\n        fn,\r\n        \"name\",\r\n        Object.assign(nameDesc || {}, {\r\n          configurable: true,\r\n          value: name,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  if (typeof arity === \"number\") {\r\n    const lengthDesc = Object.getOwnPropertyDescriptor(fn, \"length\");\r\n    if (!lengthDesc || lengthDesc.configurable) {\r\n      Object.defineProperty(\r\n        fn,\r\n        \"length\",\r\n        Object.assign(lengthDesc || {}, {\r\n          configurable: true,\r\n          value: arity,\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  return fn;\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}