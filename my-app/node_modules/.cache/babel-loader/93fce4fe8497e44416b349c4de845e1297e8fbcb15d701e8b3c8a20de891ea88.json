{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './FileUpload.css'; // Adicione o estilo de acordo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [currentFile, setCurrentFile] = useState(''); // Para armazenar o nome do arquivo atual na pasta\n\n  // Função para obter o nome do arquivo atual na pasta 'ficheiro-excel'\n  useEffect(() => {\n    fetch('http://localhost:4000/api/excel-file') // Chama a API para obter o nome do arquivo atual\n    .then(response => response.json()).then(data => {\n      if (data.fileName) {\n        setCurrentFile(data.fileName); // Atualiza o nome do arquivo atual\n      }\n    }).catch(error => console.error('Erro ao obter o arquivo atual:', error));\n  }, []);\n\n  // Função para selecionar o arquivo\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel')) {\n      setSelectedFile(file);\n      setFileName(file.name); // Exibe o nome do arquivo\n    } else {\n      alert('Por favor, selecione um arquivo Excel válido (.xlsx ou .xls)');\n    }\n  };\n\n  // Função para fazer o upload do arquivo\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      fetch('http://localhost:4000/api/upload-file', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        alert('Arquivo carregado com sucesso!');\n        console.log(data);\n      }).catch(error => {\n        console.error('Erro ao carregar o arquivo:', error);\n        alert('Erro ao carregar o arquivo!');\n      });\n    } else {\n      alert('Por favor, selecione um arquivo primeiro.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Carregar Ficheiro Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileChange,\n      id: \"file-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Arquivo selecionado:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this), \" \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }, this), currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Arquivo Atual na Pasta:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this), \" \", currentFile]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFileUpload,\n      children: \"Inserir Ficheiro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"fpcAocdsXxVPkGa3NlELUo4zU9I=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","fileName","setFileName","currentFile","setCurrentFile","fetch","then","response","json","data","catch","error","console","handleFileChange","event","file","target","files","type","name","alert","handleFileUpload","formData","FormData","append","method","body","log","className","children","_jsxFileName","lineNumber","columnNumber","accept","onChange","id","onClick","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './FileUpload.css'; // Adicione o estilo de acordo\r\n\r\nconst FileUpload = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [currentFile, setCurrentFile] = useState(''); // Para armazenar o nome do arquivo atual na pasta\r\n\r\n    // Função para obter o nome do arquivo atual na pasta 'ficheiro-excel'\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/api/excel-file') // Chama a API para obter o nome do arquivo atual\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.fileName) {\r\n                    setCurrentFile(data.fileName); // Atualiza o nome do arquivo atual\r\n                }\r\n            })\r\n            .catch((error) => console.error('Erro ao obter o arquivo atual:', error));\r\n    }, []);\r\n\r\n    // Função para selecionar o arquivo\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel')) {\r\n            setSelectedFile(file);\r\n            setFileName(file.name); // Exibe o nome do arquivo\r\n        } else {\r\n            alert('Por favor, selecione um arquivo Excel válido (.xlsx ou .xls)');\r\n        }\r\n    };\r\n\r\n    // Função para fazer o upload do arquivo\r\n    const handleFileUpload = () => {\r\n        if (selectedFile) {\r\n            const formData = new FormData();\r\n            formData.append('file', selectedFile);\r\n\r\n            fetch('http://localhost:4000/api/upload-file', {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                alert('Arquivo carregado com sucesso!');\r\n                console.log(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Erro ao carregar o arquivo:', error);\r\n                alert('Erro ao carregar o arquivo!');\r\n            });\r\n        } else {\r\n            alert('Por favor, selecione um arquivo primeiro.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"file-upload-container\">\r\n            <h2>Carregar Ficheiro Excel</h2>\r\n            \r\n            {/* Botão para selecionar o arquivo */}\r\n            <input \r\n                type=\"file\" \r\n                accept=\".xlsx, .xls\" \r\n                onChange={handleFileChange} \r\n                id=\"file-input\"\r\n            />\r\n\r\n            {/* Nome do arquivo selecionado */}\r\n            {fileName && <p><strong>Arquivo selecionado:</strong> {fileName}</p>}\r\n\r\n            {/* Nome do arquivo atual na pasta 'ficheiro-excel' */}\r\n            {currentFile && (\r\n                <div>\r\n                    <p><strong>Arquivo Atual na Pasta:</strong> {currentFile}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* Botão para fazer o upload do arquivo */}\r\n            <button onClick={handleFileUpload}>Inserir Ficheiro</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}