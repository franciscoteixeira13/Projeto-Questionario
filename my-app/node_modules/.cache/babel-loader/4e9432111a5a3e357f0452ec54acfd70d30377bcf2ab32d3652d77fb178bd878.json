{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\AllSurveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importa o hook para navegação\nimport axios from 'axios';\nimport { jsPDF } from 'jspdf'; // Importando jsPDF para criar o PDF\nimport JSZip from 'jszip'; // Importando JSZip\nimport { FaDownload } from 'react-icons/fa'; // Importando o ícone de download do react-icons\nimport './AllSurveys.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllSurveys = () => {\n  _s();\n  const navigate = useNavigate(); // Hook para redirecionamento\n  const [surveys, setSurveys] = useState([]);\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null); // Controla qual título está expandido\n  const [expandedQuestions, setExpandedQuestions] = useState({}); // Controla as perguntas expandidas por entrevista\n  const [currentPage, setCurrentPage] = useState(1); // Página atual\n  const [surveysPerPage] = useState(10); // Número de entrevistas por página\n\n  // Carregar os dados da API\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/surveys').then(response => setSurveys(response.data)).catch(error => console.error('Erro ao obter as entrevistas:', error));\n  }, []);\n\n  // Alternar expansão de um título específico\n  const toggleSurveyExpansion = id => {\n    setExpandedSurveyId(prevId => prevId === id ? null : id); // Se já estiver expandido, recolhe, senão expande\n  };\n\n  // Alternar expansão de uma pergunta específica dentro de uma entrevista\n  const toggleQuestionExpansion = (surveyId, index) => {\n    const questionKey = `${surveyId}-${index}`; // Gerar uma chave única para cada pergunta (combinando surveyId e index)\n    setExpandedQuestions(prevExpandedQuestions => ({\n      ...prevExpandedQuestions,\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true // Expande ou recolhe\n    }));\n  };\n  const downloadFile = fileName => {\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\n    const link = document.createElement('a');\n    link.href = fileUrl;\n    link.download = fileName;\n    link.click();\n  };\n\n  // Função para gerar o PDF\n  // Gera o PDF como array buffer\n  const generatePDF = survey => {\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n\n    // Título com ID da Entrevista logo ao lado (sem espaçamento lateral)\n    doc.text('Informações da Entrevista:', 14, 20);\n    doc.setFontSize(14);\n    doc.text(`${survey.entrevista_id || 'Não disponível'}`, 170, 20); // Colocando o ID ao lado sem distância\n\n    let yPosition = 40; // Ajustando a posição inicial para mais espaço no topo\n\n    // Largura das colunas para o entrevistador e entrevistado\n    const columnWidth = 85;\n    const marginLeft = 14; // Distância da esquerda para a coluna do entrevistador\n    const marginRight = 105; // Distância da esquerda para a coluna do entrevistado\n\n    // Adicionando as informações do Entrevistador à esquerda com espaçamento extra\n    doc.setFontSize(14);\n    doc.text('Entrevistador:', marginLeft, yPosition);\n    yPosition += 10;\n    doc.setFontSize(12);\n    doc.text(`Nome: ${survey.entrevistadorName || 'Não disponível'}`, marginLeft, yPosition);\n    yPosition += 6;\n    doc.text(`Cargo: ${survey.entrevistadorJobTitle || 'Não disponível'}`, marginLeft, yPosition);\n    yPosition += 6;\n    doc.text(`Localização: ${survey.entrevistadorLocation || 'Não disponível'}`, marginLeft, yPosition);\n    yPosition += 6;\n    doc.text(`Área Funcional: ${survey.entrevistadorFunctional_area || 'Não disponível'}`, marginLeft, yPosition);\n    yPosition += 10;\n\n    // Mantendo a mesma altura para o Entrevistado, alinhado ao lado direito\n    let yPositionEntrevistado = 40; // Iniciando a posição do entrevistado com o mesmo espaçamento\n\n    doc.setFontSize(14);\n    doc.text('Entrevistado:', marginRight, yPositionEntrevistado);\n    yPositionEntrevistado += 10;\n    doc.setFontSize(12);\n    doc.text(`Nome: ${survey.entrevistadoName || 'Não disponível'}`, marginRight, yPositionEntrevistado);\n    yPositionEntrevistado += 6;\n    doc.text(`Cargo: ${survey.entrevistadoJobTitle || 'Não disponível'}`, marginRight, yPositionEntrevistado);\n    yPositionEntrevistado += 6;\n    doc.text(`Localização: ${survey.entrevistadoLocation || 'Não disponível'}`, marginRight, yPositionEntrevistado);\n    yPositionEntrevistado += 6;\n    doc.text(`Área Funcional: ${survey.entrevistadoFunctional_area || 'Não disponível'}`, marginRight, yPositionEntrevistado);\n    yPositionEntrevistado += 10;\n\n    // Desenhando uma linha vertical entre as colunas do entrevistador e entrevistado\n    doc.setLineWidth(0.5);\n    doc.line(marginRight - 10, 30, marginRight - 10, yPositionEntrevistado); // Linha vertical separando as duas colunas\n\n    // Adicionando um espaçamento maior entre as listas do entrevistador/entrevistado e os detalhes da entrevista\n    yPositionEntrevistado += 20; // Aqui aumentamos o espaçamento entre as seções\n\n    // Iniciando a seção de detalhes da entrevista abaixo das listas do entrevistador e entrevistado\n    doc.setFontSize(14);\n    doc.text('Detalhes da Entrevista:', marginLeft, yPositionEntrevistado);\n    yPositionEntrevistado += 10;\n\n    // Iterando sobre as perguntas e respostas\n    survey.surveyDetails.forEach((question, index) => {\n      // Pergunta em negrito\n      doc.setFontSize(12);\n      doc.setFont('helvetica', 'bold');\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, marginLeft, yPositionEntrevistado, {\n        maxWidth: 180\n      });\n      yPositionEntrevistado += 10;\n\n      // Removendo o espaçamento entre \"Pergunta\" e \"Âmbito\"\n      doc.setFont('helvetica', 'normal');\n      doc.text(`Âmbito: ${question.Ambito || 'Não disponível'}`, marginLeft, yPositionEntrevistado, {\n        maxWidth: 180\n      });\n      yPositionEntrevistado += 6; // Espaço reduzido entre Âmbito e Índice\n\n      // Detalhes da Pergunta\n      doc.text(`Índice da Pergunta: ${question.IndicePergunta || 'Não disponível'}`, marginLeft, yPositionEntrevistado, {\n        maxWidth: 180\n      });\n      yPositionEntrevistado += 6;\n\n      // Resposta\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, marginLeft, yPositionEntrevistado, {\n        maxWidth: 180\n      });\n      yPositionEntrevistado += 6;\n\n      // Comentários\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, marginLeft, yPositionEntrevistado, {\n        maxWidth: 180\n      });\n      yPositionEntrevistado += 10;\n\n      // Verificar se a posição y está muito próxima do final da página\n      if (yPositionEntrevistado > 270) {\n        // 270 é a margem inferior do PDF\n        doc.addPage(); // Adiciona uma nova página se a posição y estiver muito alta\n        yPositionEntrevistado = 20; // Reinicia a posição y na nova página\n      }\n    });\n    return doc.output('arraybuffer'); // Retorna o PDF como um array buffer\n  };\n\n  // Gera o ZIP e força o download\n  const generateZIP = async surveyData => {\n    const zip = new JSZip();\n    const pdfBuffer = generatePDF(surveyData);\n\n    // Adiciona o PDF ao ZIP\n    zip.file(`${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`, pdfBuffer);\n\n    // Array para armazenar as promessas de download de arquivos\n    const downloadPromises = [];\n\n    // Cria subpastas para perguntas e adiciona os arquivos associados\n    surveyData.surveyDetails.forEach((question, index) => {\n      var _question$Documentaca;\n      if ((_question$Documentaca = question.Documentacao) !== null && _question$Documentaca !== void 0 && _question$Documentaca.trim()) {\n        const questionFolder = zip.folder(`Pergunta ${index + 1}`);\n        const files = question.Documentacao.split(',');\n\n        // Para cada arquivo, adiciona uma promessa de download\n        files.forEach(fileName => {\n          const fileUrl = `http://localhost:4000/uploads/${fileName.trim()}`;\n          const downloadPromise = axios.get(fileUrl, {\n            responseType: 'arraybuffer'\n          }) // Baixa o arquivo como arraybuffer\n          .then(response => {\n            questionFolder.file(fileName.trim(), response.data); // Adiciona o arquivo ao ZIP\n          }).catch(error => {\n            console.error(`Erro ao baixar arquivo \"${fileName}\":`, error);\n          });\n          downloadPromises.push(downloadPromise); // Armazena a promessa\n        });\n      }\n    });\n\n    // Aguarda todos os downloads serem concluídos antes de gerar o ZIP\n    await Promise.all(downloadPromises);\n\n    // Gera o arquivo ZIP como um blob\n    zip.generateAsync({\n      type: 'blob'\n    }).then(content => {\n      // Força o download do arquivo ZIP\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(content);\n      link.download = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.zip`;\n      link.click();\n    });\n  };\n\n  // Determina os índices para cortar as entrevistas para a página atual\n  const indexOfLastSurvey = currentPage * surveysPerPage;\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\n\n  // Funções de navegação de página\n  const nextPage = () => {\n    if (currentPage * surveysPerPage < surveys.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-home\",\n        onClick: () => navigate('/'),\n        children: \"Voltar para P\\xE1gina Inicial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Entrevistas Realizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), currentSurveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-header\",\n        onClick: () => toggleSurveyExpansion(survey.entrevista_id),\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Entrevistador:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadorName || 'Sem nome do entrevistador', \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Entrevistado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadoName || 'Sem nome do entrevistado']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-button\",\n          onClick: () => generateZIP(survey),\n          children: /*#__PURE__*/_jsxDEV(FaDownload, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), expandedSurveyId === survey.entrevista_id && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"survey-details\",\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            gap: '20px',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '10px',\n              borderRight: '1px solid #ddd'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Entrevistador\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Nome:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadorName || 'Não disponível']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cargo:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadorJobTitle || 'Não disponível']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Localiza\\xE7\\xE3o:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadorLocation || 'Não disponível']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\xC1rea Funcional:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadorFunctional_area || 'Não disponível']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              flex: 1,\n              padding: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Entrevistado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Nome:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadoName || 'Não disponível']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Cargo:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadoJobTitle || 'Não disponível']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Localiza\\xE7\\xE3o:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadoLocation || 'Não disponível']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"\\xC1rea Funcional:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this), \" \", survey.entrevistadoFunctional_area || 'Não disponível']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"questions-list\",\n          style: {\n            paddingLeft: '20px',\n            marginTop: '10px'\n          },\n          children: survey.surveyDetails.map((question, index) => {\n            var _question$Documentaca2;\n            const questionKey = `${survey.id_entrevista}-${index}`; // Gerar chave única para a pergunta\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"question-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'flex',\n                  alignItems: 'center',\n                  cursor: 'pointer'\n                },\n                onClick: () => toggleQuestionExpansion(survey.id_entrevista, index),\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    marginRight: '10px',\n                    // Espaçamento entre a seta e o texto\n                    transform: expandedQuestions[questionKey] ? 'rotate(90deg)' : 'rotate(0deg)',\n                    transition: 'transform 0.3s ease'\n                  },\n                  children: \"\\u2794\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\"Pergunta \", index + 1, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 28\n                  }, this), \" \", question.Pergunta]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 23\n              }, this), expandedQuestions[questionKey] && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"question-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Resposta:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 32\n                    }, this), \" \", question.Resposta]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Coment\\xE1rios:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 32\n                    }, this), \" \", question.Comentarios || 'Nenhum comentário']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"Normas Aplic\\xE1veis:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 32\n                    }, this), \" \", question.Normas_aplicaveis]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"\\xCDndice da Pergunta:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 307,\n                      columnNumber: 32\n                    }, this), \" \", question.Indice_Pergunta]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                      children: \"\\xC2mbito:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 308,\n                      columnNumber: 32\n                    }, this), \" \", question.Ambito]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 29\n                  }, this), ((_question$Documentaca2 = question.Documentacao) === null || _question$Documentaca2 === void 0 ? void 0 : _question$Documentaca2.trim()) && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"documentos\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                      children: \"Documentos:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                      children: question.Documentacao.split(',').map((fileName, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"a\", {\n                          href: \"#\",\n                          onClick: () => downloadFile(fileName.trim()),\n                          style: {\n                            color: 'blue',\n                            textDecoration: 'underline'\n                          },\n                          children: fileName.trim()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 316,\n                          columnNumber: 39\n                        }, this)\n                      }, idx, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 315,\n                        columnNumber: 37\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 313,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)]\n    }, survey.id_entrevista, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [\"P\\xE1gina \", currentPage, \" de \", Math.ceil(surveys.length / surveysPerPage)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prevPage,\n          disabled: currentPage === 1,\n          style: {\n            padding: '10px 20px',\n            cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\n            backgroundColor: '#f1f1f1',\n            border: '1px solid #007bff',\n            borderRadius: '5px'\n          },\n          children: \"Anterior\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextPage,\n          disabled: currentPage * surveysPerPage >= surveys.length,\n          style: {\n            padding: '10px 20px',\n            cursor: currentPage * surveysPerPage >= surveys.length ? 'not-allowed' : 'pointer',\n            backgroundColor: '#f1f1f1',\n            border: '1px solid #007bff',\n            borderRadius: '5px'\n          },\n          children: \"Pr\\xF3ximo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSurveys, \"ajIGeu+j6dwgGoisvPe3H8EaPkM=\", false, function () {\n  return [useNavigate];\n});\n_c = AllSurveys;\nexport default AllSurveys;\nvar _c;\n$RefreshReg$(_c, \"AllSurveys\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsPDF","JSZip","FaDownload","jsxDEV","_jsxDEV","Fragment","_Fragment","AllSurveys","_s","navigate","surveys","setSurveys","expandedSurveyId","setExpandedSurveyId","expandedQuestions","setExpandedQuestions","currentPage","setCurrentPage","surveysPerPage","get","then","response","data","catch","error","console","toggleSurveyExpansion","id","prevId","toggleQuestionExpansion","surveyId","index","questionKey","prevExpandedQuestions","downloadFile","fileName","fileUrl","link","document","createElement","href","download","click","generatePDF","survey","doc","setFontSize","text","entrevista_id","yPosition","columnWidth","marginLeft","marginRight","entrevistadorName","entrevistadorJobTitle","entrevistadorLocation","entrevistadorFunctional_area","yPositionEntrevistado","entrevistadoName","entrevistadoJobTitle","entrevistadoLocation","entrevistadoFunctional_area","setLineWidth","line","surveyDetails","forEach","question","setFont","Pergunta","maxWidth","Ambito","IndicePergunta","Resposta","Comentarios","addPage","output","generateZIP","surveyData","zip","pdfBuffer","file","downloadPromises","_question$Documentaca","Documentacao","trim","questionFolder","folder","files","split","downloadPromise","responseType","push","Promise","all","generateAsync","type","content","URL","createObjectURL","indexOfLastSurvey","indexOfFirstSurvey","currentSurveys","slice","nextPage","length","prevPage","children","style","textAlign","marginBottom","className","onClick","_jsxFileName","lineNumber","columnNumber","map","display","justifyContent","alignItems","size","gap","flex","padding","borderRight","paddingLeft","marginTop","_question$Documentaca2","id_entrevista","cursor","transform","transition","Normas_aplicaveis","Indice_Pergunta","idx","color","textDecoration","Math","ceil","disabled","backgroundColor","border","borderRadius","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/AllSurveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Importa o hook para navegação\r\nimport axios from 'axios';\r\nimport { jsPDF } from 'jspdf'; // Importando jsPDF para criar o PDF\r\nimport JSZip from 'jszip'; // Importando JSZip\r\nimport { FaDownload } from 'react-icons/fa'; // Importando o ícone de download do react-icons\r\nimport './AllSurveys.css';\r\n\r\nconst AllSurveys = () => {\r\n  const navigate = useNavigate(); // Hook para redirecionamento\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null); // Controla qual título está expandido\r\n  const [expandedQuestions, setExpandedQuestions] = useState({}); // Controla as perguntas expandidas por entrevista\r\n  const [currentPage, setCurrentPage] = useState(1); // Página atual\r\n  const [surveysPerPage] = useState(10); // Número de entrevistas por página\r\n\r\n  // Carregar os dados da API\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:4000/api/surveys')\r\n      .then((response) => setSurveys(response.data))\r\n      .catch((error) => console.error('Erro ao obter as entrevistas:', error));\r\n  }, []);\r\n\r\n  // Alternar expansão de um título específico\r\n  const toggleSurveyExpansion = (id) => {\r\n    setExpandedSurveyId((prevId) => (prevId === id ? null : id)); // Se já estiver expandido, recolhe, senão expande\r\n  };\r\n\r\n  // Alternar expansão de uma pergunta específica dentro de uma entrevista\r\n  const toggleQuestionExpansion = (surveyId, index) => {\r\n    const questionKey = `${surveyId}-${index}`; // Gerar uma chave única para cada pergunta (combinando surveyId e index)\r\n    setExpandedQuestions((prevExpandedQuestions) => ({\r\n      ...prevExpandedQuestions,\r\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true, // Expande ou recolhe\r\n    }));\r\n  };\r\n\r\n  const downloadFile = (fileName) => {\r\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\r\n    const link = document.createElement('a');\r\n    link.href = fileUrl;\r\n    link.download = fileName;\r\n    link.click();\r\n  };\r\n\r\n  // Função para gerar o PDF\r\n // Gera o PDF como array buffer\r\n const generatePDF = (survey) => {\r\n  const doc = new jsPDF();\r\n  doc.setFontSize(18);\r\n\r\n  // Título com ID da Entrevista logo ao lado (sem espaçamento lateral)\r\n  doc.text('Informações da Entrevista:', 14, 20);\r\n  doc.setFontSize(14);\r\n  doc.text(`${survey.entrevista_id || 'Não disponível'}`, 170, 20);  // Colocando o ID ao lado sem distância\r\n\r\n  let yPosition = 40; // Ajustando a posição inicial para mais espaço no topo\r\n\r\n  // Largura das colunas para o entrevistador e entrevistado\r\n  const columnWidth = 85;\r\n  const marginLeft = 14;  // Distância da esquerda para a coluna do entrevistador\r\n  const marginRight = 105; // Distância da esquerda para a coluna do entrevistado\r\n\r\n  // Adicionando as informações do Entrevistador à esquerda com espaçamento extra\r\n  doc.setFontSize(14);\r\n  doc.text('Entrevistador:', marginLeft, yPosition);\r\n  yPosition += 10;\r\n  doc.setFontSize(12);\r\n  doc.text(`Nome: ${survey.entrevistadorName || 'Não disponível'}`, marginLeft, yPosition);\r\n  yPosition += 6;\r\n  doc.text(`Cargo: ${survey.entrevistadorJobTitle || 'Não disponível'}`, marginLeft, yPosition);\r\n  yPosition += 6;\r\n  doc.text(`Localização: ${survey.entrevistadorLocation || 'Não disponível'}`, marginLeft, yPosition);\r\n  yPosition += 6;\r\n  doc.text(`Área Funcional: ${survey.entrevistadorFunctional_area || 'Não disponível'}`, marginLeft, yPosition);\r\n  yPosition += 10;\r\n\r\n  // Mantendo a mesma altura para o Entrevistado, alinhado ao lado direito\r\n  let yPositionEntrevistado = 40; // Iniciando a posição do entrevistado com o mesmo espaçamento\r\n\r\n  doc.setFontSize(14);\r\n  doc.text('Entrevistado:', marginRight, yPositionEntrevistado);\r\n  yPositionEntrevistado += 10;\r\n  doc.setFontSize(12);\r\n  doc.text(`Nome: ${survey.entrevistadoName || 'Não disponível'}`, marginRight, yPositionEntrevistado);\r\n  yPositionEntrevistado += 6;\r\n  doc.text(`Cargo: ${survey.entrevistadoJobTitle || 'Não disponível'}`, marginRight, yPositionEntrevistado);\r\n  yPositionEntrevistado += 6;\r\n  doc.text(`Localização: ${survey.entrevistadoLocation || 'Não disponível'}`, marginRight, yPositionEntrevistado);\r\n  yPositionEntrevistado += 6;\r\n  doc.text(`Área Funcional: ${survey.entrevistadoFunctional_area || 'Não disponível'}`, marginRight, yPositionEntrevistado);\r\n  yPositionEntrevistado += 10;\r\n\r\n  // Desenhando uma linha vertical entre as colunas do entrevistador e entrevistado\r\n  doc.setLineWidth(0.5);\r\n  doc.line(marginRight - 10, 30, marginRight - 10, yPositionEntrevistado); // Linha vertical separando as duas colunas\r\n\r\n  // Adicionando um espaçamento maior entre as listas do entrevistador/entrevistado e os detalhes da entrevista\r\n  yPositionEntrevistado += 20; // Aqui aumentamos o espaçamento entre as seções\r\n\r\n  // Iniciando a seção de detalhes da entrevista abaixo das listas do entrevistador e entrevistado\r\n  doc.setFontSize(14);\r\n  doc.text('Detalhes da Entrevista:', marginLeft, yPositionEntrevistado);\r\n  yPositionEntrevistado += 10;\r\n\r\n  // Iterando sobre as perguntas e respostas\r\n  survey.surveyDetails.forEach((question, index) => {\r\n    // Pergunta em negrito\r\n    doc.setFontSize(12);\r\n    doc.setFont('helvetica', 'bold');\r\n    doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, marginLeft, yPositionEntrevistado, { maxWidth: 180 });\r\n    yPositionEntrevistado += 10;\r\n\r\n    // Removendo o espaçamento entre \"Pergunta\" e \"Âmbito\"\r\n    doc.setFont('helvetica', 'normal');\r\n    doc.text(`Âmbito: ${question.Ambito || 'Não disponível'}`, marginLeft, yPositionEntrevistado, { maxWidth: 180 });\r\n    yPositionEntrevistado += 6;  // Espaço reduzido entre Âmbito e Índice\r\n\r\n    // Detalhes da Pergunta\r\n    doc.text(`Índice da Pergunta: ${question.IndicePergunta || 'Não disponível'}`, marginLeft, yPositionEntrevistado, { maxWidth: 180 });\r\n    yPositionEntrevistado += 6;\r\n\r\n    // Resposta\r\n    doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, marginLeft, yPositionEntrevistado, { maxWidth: 180 });\r\n    yPositionEntrevistado += 6;\r\n\r\n    // Comentários\r\n    doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, marginLeft, yPositionEntrevistado, { maxWidth: 180 });\r\n    yPositionEntrevistado += 10;\r\n\r\n    // Verificar se a posição y está muito próxima do final da página\r\n    if (yPositionEntrevistado > 270) { // 270 é a margem inferior do PDF\r\n      doc.addPage(); // Adiciona uma nova página se a posição y estiver muito alta\r\n      yPositionEntrevistado = 20; // Reinicia a posição y na nova página\r\n    }\r\n  });\r\n\r\n  return doc.output('arraybuffer'); // Retorna o PDF como um array buffer\r\n};\r\n\r\n\r\n// Gera o ZIP e força o download\r\nconst generateZIP = async (surveyData) => {\r\n  const zip = new JSZip();\r\n  const pdfBuffer = generatePDF(surveyData);\r\n\r\n  // Adiciona o PDF ao ZIP\r\n  zip.file(`${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`, pdfBuffer);\r\n\r\n  // Array para armazenar as promessas de download de arquivos\r\n  const downloadPromises = [];\r\n\r\n  // Cria subpastas para perguntas e adiciona os arquivos associados\r\n  surveyData.surveyDetails.forEach((question, index) => {\r\n    if (question.Documentacao?.trim()) {\r\n      const questionFolder = zip.folder(`Pergunta ${index + 1}`);\r\n      const files = question.Documentacao.split(',');\r\n\r\n      // Para cada arquivo, adiciona uma promessa de download\r\n      files.forEach((fileName) => {\r\n        const fileUrl = `http://localhost:4000/uploads/${fileName.trim()}`;\r\n        const downloadPromise = axios\r\n          .get(fileUrl, { responseType: 'arraybuffer' }) // Baixa o arquivo como arraybuffer\r\n          .then((response) => {\r\n            questionFolder.file(fileName.trim(), response.data); // Adiciona o arquivo ao ZIP\r\n          })\r\n          .catch((error) => {\r\n            console.error(`Erro ao baixar arquivo \"${fileName}\":`, error);\r\n          });\r\n\r\n        downloadPromises.push(downloadPromise); // Armazena a promessa\r\n      });\r\n    }\r\n  });\r\n\r\n  // Aguarda todos os downloads serem concluídos antes de gerar o ZIP\r\n  await Promise.all(downloadPromises);\r\n\r\n  // Gera o arquivo ZIP como um blob\r\n  zip.generateAsync({ type: 'blob' }).then((content) => {\r\n    // Força o download do arquivo ZIP\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(content);\r\n    link.download = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.zip`;\r\n    link.click();\r\n  });\r\n};\r\n\r\n\r\n  // Determina os índices para cortar as entrevistas para a página atual\r\n  const indexOfLastSurvey = currentPage * surveysPerPage;\r\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\r\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\r\n\r\n  // Funções de navegação de página\r\n  const nextPage = () => {\r\n    if (currentPage * surveysPerPage < surveys.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Botão para redirecionar à página de UserInfo */}\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <button className='back-home'\r\n          onClick={() => navigate('/')}>\r\n          Voltar para Página Inicial\r\n        </button>\r\n      </div>\r\n\r\n      <h1>Entrevistas Realizadas</h1>\r\n\r\n      {/* Exibir as entrevistas da página atual */}\r\n      {currentSurveys.map((survey) => (\r\n        \r\n        <div key={survey.id_entrevista} className=\"survey\">\r\n          {/* Cabeçalho da entrevista com a data formatada */}\r\n          <div\r\n            className=\"survey-header\"\r\n            onClick={() => toggleSurveyExpansion(survey.entrevista_id)}\r\n            style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\r\n          >\r\n            <h2>\r\n              <strong>Entrevistador:</strong> {survey.entrevistadorName || 'Sem nome do entrevistador'} |\r\n              <strong> Entrevistado:</strong> {survey.entrevistadoName || 'Sem nome do entrevistado'}\r\n            </h2>\r\n\r\n            {/* Botão de Download com Ícone */}\r\n            <button className='download-button'\r\n              onClick={() => generateZIP(survey)}>\r\n              <FaDownload size={16} />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Exibir detalhes apenas para o título expandido */}\r\n          {expandedSurveyId === survey.entrevista_id && (\r\n            <>\r\n              <div\r\n                className=\"survey-details\"\r\n                style={{\r\n                  display: 'flex',\r\n                  justifyContent: 'center',\r\n                  gap: '20px',\r\n                  marginBottom: '10px',\r\n                }}\r\n              >\r\n                {/* Detalhes do entrevistador */}\r\n                <div style={{ flex: 1, padding: '10px', borderRight: '1px solid #ddd' }}>\r\n                  <h3>Entrevistador</h3>\r\n                  <ul>\r\n                    <li><strong>Nome:</strong> {survey.entrevistadorName || 'Não disponível'}</li>\r\n                    <li><strong>Cargo:</strong> {survey.entrevistadorJobTitle || 'Não disponível'}</li>\r\n                    <li><strong>Localização:</strong> {survey.entrevistadorLocation || 'Não disponível'}</li>\r\n                    <li><strong>Área Funcional:</strong> {survey.entrevistadorFunctional_area || 'Não disponível'}</li>\r\n                  </ul>\r\n                </div>\r\n\r\n                {/* Detalhes do entrevistado */}\r\n                <div style={{ flex: 1, padding: '10px' }}>\r\n                  <h3>Entrevistado</h3>\r\n                  <ul>\r\n                    <li><strong>Nome:</strong> {survey.entrevistadoName || 'Não disponível'}</li>\r\n                    <li><strong>Cargo:</strong> {survey.entrevistadoJobTitle || 'Não disponível'}</li>\r\n                    <li><strong>Localização:</strong> {survey.entrevistadoLocation || 'Não disponível'}</li>\r\n                    <li><strong>Área Funcional:</strong> {survey.entrevistadoFunctional_area || 'Não disponível'}</li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"questions-list\" style={{ paddingLeft: '20px', marginTop: '10px' }}>\r\n                {survey.surveyDetails.map((question, index) => {\r\n                  const questionKey = `${survey.id_entrevista}-${index}`; // Gerar chave única para a pergunta\r\n                  return (\r\n                    <div key={index} className=\"question-container\">\r\n                      {/* Linha de pergunta com a seta ao lado esquerdo */}\r\n                      <div\r\n                        style={{ display: 'flex', alignItems: 'center', cursor: 'pointer' }}\r\n                        onClick={() => toggleQuestionExpansion(survey.id_entrevista, index)}\r\n                      >\r\n                        <span\r\n                          style={{\r\n                            marginRight: '10px', // Espaçamento entre a seta e o texto\r\n                            transform: expandedQuestions[questionKey] ? 'rotate(90deg)' : 'rotate(0deg)',\r\n                            transition: 'transform 0.3s ease',\r\n                          }}\r\n                        >\r\n                          ➔\r\n                        </span>\r\n                        <p><strong>Pergunta {index + 1}:</strong> {question.Pergunta}</p>\r\n                      </div>\r\n\r\n                      {/* Detalhes expandidos */}\r\n                      {expandedQuestions[questionKey] && (\r\n                        <>\r\n                          <div className=\"question-details\">\r\n                            <p><strong>Resposta:</strong> {question.Resposta}</p>\r\n                            <p><strong>Comentários:</strong> {question.Comentarios || 'Nenhum comentário'}</p>\r\n                            <p><strong>Normas Aplicáveis:</strong> {question.Normas_aplicaveis}</p>\r\n                            <p><strong>Índice da Pergunta:</strong> {question.Indice_Pergunta}</p>\r\n                            <p><strong>Âmbito:</strong> {question.Ambito}</p>\r\n\r\n                            {question.Documentacao?.trim() && (\r\n                              <div className=\"documentos\">\r\n                                <h4>Documentos:</h4>\r\n                                <ul>\r\n                                  {question.Documentacao.split(',').map((fileName, idx) => (\r\n                                    <li key={idx}>\r\n                                      <a\r\n                                        href=\"#\"\r\n                                        onClick={() => downloadFile(fileName.trim())}\r\n                                        style={{ color: 'blue', textDecoration: 'underline' }}\r\n                                      >\r\n                                        {fileName.trim()}\r\n                                      </a>\r\n                                    </li>\r\n                                  ))}\r\n                                </ul>\r\n                              </div>\r\n                            )}\r\n                          </div>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n  {/* Texto da página */}\r\n  <div style={{ marginBottom: '10px' }}>\r\n    Página {currentPage} de {Math.ceil(surveys.length / surveysPerPage)}\r\n  </div>\r\n\r\n  {/* Contêiner para os botões de navegação */}\r\n  <div style={{ display: 'flex', justifyContent: 'center', gap: '10px' }}>\r\n    {/* Botão \"Anterior\" */}\r\n    <button\r\n      onClick={prevPage}\r\n      disabled={currentPage === 1}\r\n      style={{\r\n        padding: '10px 20px',\r\n        cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\r\n        backgroundColor: '#f1f1f1',\r\n        border: '1px solid #007bff',\r\n        borderRadius: '5px',\r\n      }}\r\n    >\r\n      Anterior\r\n    </button>\r\n\r\n    {/* Botão \"Próximo\" */}\r\n    <button\r\n      onClick={nextPage}\r\n      disabled={currentPage * surveysPerPage >= surveys.length}\r\n      style={{\r\n        padding: '10px 20px',\r\n        cursor: currentPage * surveysPerPage >= surveys.length ? 'not-allowed' : 'pointer',\r\n        backgroundColor: '#f1f1f1',\r\n        border: '1px solid #007bff',\r\n        borderRadius: '5px',\r\n      }}\r\n    >\r\n      Próximo\r\n    </button>\r\n  </div>\r\n</div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSurveys;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}