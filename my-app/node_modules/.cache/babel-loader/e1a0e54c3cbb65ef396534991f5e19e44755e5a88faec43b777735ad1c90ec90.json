{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\AllSurveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importar o hook useNavigate\nimport axios from 'axios';\nimport './AllSurveys.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllSurveys = () => {\n  _s();\n  const navigate = useNavigate(); // Hook para redirecionar\n  const [surveys, setSurveys] = useState([]);\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null);\n  const [expandedQuestions, setExpandedQuestions] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [surveysPerPage] = useState(20);\n  useEffect(() => {\n    // Redirecionar automaticamente para UserInfo\n    navigate('/', {\n      state: {\n        message: 'P치gina Inicial'\n      }\n    });\n  }, [navigate]); // Executa no primeiro render\n\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/surveys').then(response => setSurveys(response.data)).catch(error => console.error('Erro ao obter as entrevistas:', error));\n  }, []);\n\n  // Restante da l칩gica permanece igual\n  const toggleSurveyExpansion = id => {\n    setExpandedSurveyId(prevId => prevId === id ? null : id);\n  };\n  const toggleQuestionExpansion = (surveyId, index) => {\n    const questionKey = `${surveyId}-${index}`;\n    setExpandedQuestions(prevExpandedQuestions => ({\n      ...prevExpandedQuestions,\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true\n    }));\n  };\n  const downloadFile = fileName => {\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\n    const link = document.createElement('a');\n    link.href = fileUrl;\n    link.download = fileName;\n    link.click();\n  };\n  const indexOfLastSurvey = currentPage * surveysPerPage;\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\n  const nextPage = () => {\n    if (currentPage * surveysPerPage < surveys.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Entrevistas Realizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSurveys, \"BKdYl7i4hgMtdfm+IixLaBZOB+0=\", false, function () {\n  return [useNavigate];\n});\n_c = AllSurveys;\nexport default AllSurveys;\nvar _c;\n$RefreshReg$(_c, \"AllSurveys\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","AllSurveys","_s","navigate","surveys","setSurveys","expandedSurveyId","setExpandedSurveyId","expandedQuestions","setExpandedQuestions","currentPage","setCurrentPage","surveysPerPage","state","message","get","then","response","data","catch","error","console","toggleSurveyExpansion","id","prevId","toggleQuestionExpansion","surveyId","index","questionKey","prevExpandedQuestions","downloadFile","fileName","fileUrl","link","document","createElement","href","download","click","indexOfLastSurvey","indexOfFirstSurvey","currentSurveys","slice","nextPage","length","prevPage","children","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/AllSurveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Importar o hook useNavigate\r\nimport axios from 'axios';\r\nimport './AllSurveys.css';\r\n\r\nconst AllSurveys = () => {\r\n  const navigate = useNavigate(); // Hook para redirecionar\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null);\r\n  const [expandedQuestions, setExpandedQuestions] = useState({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [surveysPerPage] = useState(20);\r\n\r\n  useEffect(() => {\r\n    // Redirecionar automaticamente para UserInfo\r\n    navigate('/', { state: { message: 'P치gina Inicial' } });\r\n  }, [navigate]); // Executa no primeiro render\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:4000/api/surveys')\r\n      .then((response) => setSurveys(response.data))\r\n      .catch((error) => console.error('Erro ao obter as entrevistas:', error));\r\n  }, []);\r\n\r\n  // Restante da l칩gica permanece igual\r\n  const toggleSurveyExpansion = (id) => {\r\n    setExpandedSurveyId((prevId) => (prevId === id ? null : id));\r\n  };\r\n\r\n  const toggleQuestionExpansion = (surveyId, index) => {\r\n    const questionKey = `${surveyId}-${index}`;\r\n    setExpandedQuestions((prevExpandedQuestions) => ({\r\n      ...prevExpandedQuestions,\r\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true,\r\n    }));\r\n  };\r\n\r\n  const downloadFile = (fileName) => {\r\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\r\n    const link = document.createElement('a');\r\n    link.href = fileUrl;\r\n    link.download = fileName;\r\n    link.click();\r\n  };\r\n\r\n  const indexOfLastSurvey = currentPage * surveysPerPage;\r\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\r\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\r\n\r\n  const nextPage = () => {\r\n    if (currentPage * surveysPerPage < surveys.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Entrevistas Realizadas</h1>\r\n      {/* Restante do JSX */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSurveys;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}