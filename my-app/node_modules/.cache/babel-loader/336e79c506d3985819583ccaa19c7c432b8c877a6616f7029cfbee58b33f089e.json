{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './Survey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  var _files$currentQuestio2;\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    selectedQuestions,\n    InfoEntrevistador,\n    InfoEntrevistado\n  } = location.state || {\n    selectedQuestions: [],\n    InfoEntrevistador: {},\n    InfoEntrevistado: {}\n  };\n  console.log('Perguntas recebidas:', selectedQuestions);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\n  const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\n  const [files, setFiles] = useState({}); // Mapeamento: Pergunta -> Arquivos\n\n  const handleNextQuestion = () => {\n    if (responses[currentQuestionIndex] === '') {\n      alert('Por favor, forneça uma resposta antes de continuar.');\n      return;\n    }\n    if (currentQuestionIndex === selectedQuestions.length - 1) {\n      handleSubmit();\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1);\n    }\n  };\n  const handleOptionSelect = option => {\n    setResponses(prevResponses => {\n      const updatedResponses = [...prevResponses];\n      updatedResponses[currentQuestionIndex] = option;\n      return updatedResponses;\n    });\n  };\n  const handleFileChange = e => {\n    var _files$currentQuestio;\n    const selectedFiles = Array.from(e.target.files);\n\n    // Verifique se o número total de arquivos já selecionados para a pergunta não excede o limite de 5\n    if ((((_files$currentQuestio = files[currentQuestionIndex]) === null || _files$currentQuestio === void 0 ? void 0 : _files$currentQuestio.length) || 0) + selectedFiles.length > 5) {\n      alert('Você não pode adicionar mais do que 5 arquivos.');\n      return;\n    }\n\n    // Atualize os arquivos para a pergunta atual\n    setFiles(prevFiles => {\n      const updatedFiles = prevFiles[currentQuestionIndex] || [];\n      return {\n        ...prevFiles,\n        [currentQuestionIndex]: [...updatedFiles, ...selectedFiles]\n      };\n    });\n  };\n  const handleRemoveFile = fileName => {\n    setFiles(prevFiles => {\n      var _updatedFiles$current;\n      const updatedFiles = {\n        ...prevFiles\n      };\n      updatedFiles[currentQuestionIndex] = (_updatedFiles$current = updatedFiles[currentQuestionIndex]) === null || _updatedFiles$current === void 0 ? void 0 : _updatedFiles$current.filter(file => file.name !== fileName);\n      return updatedFiles;\n    });\n  };\n  const handleSubmit = () => {\n    console.log(InfoEntrevistador, InfoEntrevistado);\n    const now = new Date();\n    const submissionData = new FormData();\n\n    // Adiciona as informações do entrevistador e entrevistado ao FormData\n    submissionData.append('entrevistador', JSON.stringify(InfoEntrevistador));\n    submissionData.append('entrevistado', JSON.stringify(InfoEntrevistado));\n\n    // Adiciona as respostas, comentários e documentos de cada pergunta ao FormData\n    responses.forEach((resp, index) => {\n      submissionData.append('responses[]', JSON.stringify({\n        Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\n        Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\n        Indice_Pergunta: selectedQuestions[index].id,\n        Ambito: selectedQuestions[index].âmbito,\n        Pergunta: selectedQuestions[index].pergunta,\n        Resposta: resp,\n        Comentarios: comments[index]\n      }));\n    });\n\n    // Adiciona os arquivos de cada pergunta ao FormData\n    Object.keys(files).forEach(questionIndex => {\n      files[questionIndex].forEach(file => {\n        submissionData.append('files[]', file); // Envia cada arquivo individualmente\n      });\n    });\n    console.log('Dados a serem enviados:', submissionData);\n    fetch('http://localhost:4000/api/survey', {\n      method: 'POST',\n      body: submissionData\n    }).then(response => {\n      if (!response.ok) {\n        return response.text().then(text => {\n          throw new Error(`Erro ${response.status}: ${text}`);\n        });\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Dados enviados com sucesso:', data);\n      navigate('/survey-summary', {\n        state: {\n          selectedQuestions,\n          responses,\n          comments\n        }\n      });\n    }).catch(error => {\n      console.error('Erro ao enviar os dados:', error);\n      alert(`Houve um erro ao enviar os dados: ${error.message}`);\n    });\n  };\n  if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\n    return null;\n  }\n  const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\n  const totalQuestions = selectedQuestions.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Pergunta \", currentQuestionIndex + 1, \" de \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pergunta-text\",\n      children: selectedQuestions[currentQuestionIndex].pergunta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"additional-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Informa\\xE7\\xF5es Adicionais:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Normas Aplic\\xE1veis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }, this), \" \", selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xCDndice da Pergunta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 21\n          }, this), \" \", selectedQuestions[currentQuestionIndex].id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xC2mbito:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), \" \", selectedQuestions[currentQuestionIndex].âmbito || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Sim'),\n        children: \"Sim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Não'),\n        children: \"N\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"500\",\n      className: \"response-input\",\n      value: responses[currentQuestionIndex],\n      onChange: e => {\n        const updatedResponses = [...responses];\n        updatedResponses[currentQuestionIndex] = e.target.value;\n        setResponses(updatedResponses);\n      },\n      placeholder: \"A sua resposta...\",\n      rows: \"6\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Coment\\xE1rios:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"500\",\n      className: \"comment-input\",\n      value: comments[currentQuestionIndex],\n      onChange: e => {\n        const updatedComments = [...comments];\n        updatedComments[currentQuestionIndex] = e.target.value;\n        setComments(updatedComments);\n      },\n      placeholder: \"O seu coment\\xE1rio...\",\n      rows: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"file-upload-btn\",\n        children: \"Carregar Arquivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        multiple: true,\n        accept: \".xlsx, .xls, .docx, .doc, .jpg, .jpeg, .png, .pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), ((_files$currentQuestio2 = files[currentQuestionIndex]) === null || _files$currentQuestio2 === void 0 ? void 0 : _files$currentQuestio2.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Arquivos Adicionados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files[currentQuestionIndex].map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFile(file.name),\n            className: \"remove-file-btn\",\n            children: \"Remover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handlePreviousQuestion,\n        disabled: currentQuestionIndex === 0,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"UN2lHUcJRGj5z/4tN+Ac8zj7gdo=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Survey","_s","_files$currentQuestio2","location","navigate","selectedQuestions","InfoEntrevistador","InfoEntrevistado","state","console","log","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","Array","length","fill","comments","setComments","files","setFiles","handleNextQuestion","alert","handleSubmit","prevIndex","handlePreviousQuestion","handleOptionSelect","option","prevResponses","updatedResponses","handleFileChange","e","_files$currentQuestio","selectedFiles","from","target","prevFiles","updatedFiles","handleRemoveFile","fileName","_updatedFiles$current","filter","file","name","now","Date","submissionData","FormData","append","JSON","stringify","forEach","resp","index","Data","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","Normas_aplicaveis","normasAplicaveis","Indice_Pergunta","id","Ambito","âmbito","Pergunta","pergunta","Resposta","Comentarios","Object","keys","questionIndex","fetch","method","body","then","response","ok","text","Error","status","json","data","catch","error","message","currentQuestionId","totalQuestions","children","_jsxFileName","lineNumber","columnNumber","className","onClick","minLength","maxLength","value","onChange","placeholder","rows","required","updatedComments","htmlFor","type","multiple","accept","map","disabled","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/Survey.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './Survey.css';\r\n\r\nconst Survey = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { selectedQuestions, InfoEntrevistador, InfoEntrevistado } = location.state || { selectedQuestions: [], InfoEntrevistador: {}, InfoEntrevistado: {} };\r\n\r\n    console.log('Perguntas recebidas:', selectedQuestions);\r\n\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [files, setFiles] = useState({}); // Mapeamento: Pergunta -> Arquivos\r\n\r\n    const handleNextQuestion = () => {\r\n        if (responses[currentQuestionIndex] === '') {\r\n            alert('Por favor, forneça uma resposta antes de continuar.');\r\n            return;\r\n        }\r\n\r\n        if (currentQuestionIndex === selectedQuestions.length - 1) {\r\n            handleSubmit();\r\n        } else {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousQuestion = () => {\r\n        if (currentQuestionIndex > 0) {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\r\n        }\r\n    };\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setResponses((prevResponses) => {\r\n            const updatedResponses = [...prevResponses];\r\n            updatedResponses[currentQuestionIndex] = option;\r\n            return updatedResponses;\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const selectedFiles = Array.from(e.target.files);\r\n        \r\n        // Verifique se o número total de arquivos já selecionados para a pergunta não excede o limite de 5\r\n        if ((files[currentQuestionIndex]?.length || 0) + selectedFiles.length > 5) {\r\n            alert('Você não pode adicionar mais do que 5 arquivos.');\r\n            return;\r\n        }\r\n    \r\n        // Atualize os arquivos para a pergunta atual\r\n        setFiles((prevFiles) => {\r\n            const updatedFiles = prevFiles[currentQuestionIndex] || [];\r\n            return {\r\n                ...prevFiles,\r\n                [currentQuestionIndex]: [...updatedFiles, ...selectedFiles],\r\n            };\r\n        });\r\n    };\r\n\r\n    const handleRemoveFile = (fileName) => {\r\n        setFiles((prevFiles) => {\r\n            const updatedFiles = { ...prevFiles };\r\n            updatedFiles[currentQuestionIndex] = updatedFiles[currentQuestionIndex]?.filter(\r\n                (file) => file.name !== fileName\r\n            );\r\n            return updatedFiles;\r\n        });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        console.log(InfoEntrevistador, InfoEntrevistado);\r\n        const now = new Date();\r\n        const submissionData = new FormData();\r\n    \r\n        // Adiciona as informações do entrevistador e entrevistado ao FormData\r\n        submissionData.append('entrevistador', JSON.stringify(InfoEntrevistador));\r\n        submissionData.append('entrevistado', JSON.stringify(InfoEntrevistado));\r\n    \r\n        // Adiciona as respostas, comentários e documentos de cada pergunta ao FormData\r\n        responses.forEach((resp, index) => {\r\n            submissionData.append('responses[]', JSON.stringify({\r\n                Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\r\n                Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\r\n                Indice_Pergunta: selectedQuestions[index].id,\r\n                Ambito: selectedQuestions[index].âmbito,\r\n                Pergunta: selectedQuestions[index].pergunta,\r\n                Resposta: resp,\r\n                Comentarios: comments[index],\r\n            }));\r\n        });\r\n    \r\n        // Adiciona os arquivos de cada pergunta ao FormData\r\n        Object.keys(files).forEach((questionIndex) => {\r\n            files[questionIndex].forEach((file) => {\r\n                submissionData.append('files[]', file); // Envia cada arquivo individualmente\r\n            });\r\n        });\r\n    \r\n        console.log('Dados a serem enviados:', submissionData);\r\n    \r\n        fetch('http://localhost:4000/api/survey', {\r\n            method: 'POST',\r\n            body: submissionData,\r\n        })\r\n            .then((response) => {\r\n                if (!response.ok) {\r\n                    return response.text().then((text) => {\r\n                        throw new Error(`Erro ${response.status}: ${text}`);\r\n                    });\r\n                }\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                console.log('Dados enviados com sucesso:', data);\r\n                navigate('/survey-summary', { state: { selectedQuestions, responses, comments } });\r\n            })\r\n            .catch((error) => {\r\n                console.error('Erro ao enviar os dados:', error);\r\n                alert(`Houve um erro ao enviar os dados: ${error.message}`);\r\n            });\r\n    };\r\n    \r\n\r\n    if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\r\n        return null;\r\n    }\r\n\r\n    const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\r\n    const totalQuestions = selectedQuestions.length;\r\n\r\n    return (\r\n        <div>\r\n        <h2>Pergunta {currentQuestionIndex + 1} de {totalQuestions}</h2>\r\n        <h3 className=\"pergunta-text\">{selectedQuestions[currentQuestionIndex].pergunta}</h3>\r\n\r\n        <div className=\"additional-info\">\r\n            <h4>Informações Adicionais:</h4>\r\n            <ul>\r\n                <li><strong>Normas Aplicáveis:</strong> {selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A'}</li>\r\n                <li><strong>Índice da Pergunta:</strong> {selectedQuestions[currentQuestionIndex].id}</li>\r\n                <li><strong>Âmbito:</strong> {selectedQuestions[currentQuestionIndex].âmbito || 'N/A'}</li>\r\n            </ul>\r\n        </div>\r\n\r\n        <div className=\"option-buttons\">\r\n            <button\r\n                className={`small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`}\r\n                onClick={() => handleOptionSelect('Sim')}\r\n            >\r\n                Sim\r\n            </button>\r\n            <button\r\n                className={`small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`}\r\n                onClick={() => handleOptionSelect('Não')}\r\n            >\r\n                Não\r\n            </button>\r\n        </div>\r\n\r\n        <textarea\r\n            minLength=\"5\"\r\n            maxLength=\"500\"\r\n            className=\"response-input\"\r\n            value={responses[currentQuestionIndex]}\r\n            onChange={(e) => {\r\n                const updatedResponses = [...responses];\r\n                updatedResponses[currentQuestionIndex] = e.target.value;\r\n                setResponses(updatedResponses);\r\n            }}\r\n            placeholder=\"A sua resposta...\"\r\n            rows=\"6\"\r\n            required\r\n        />\r\n\r\n        <h3>Comentários:</h3>\r\n        <textarea\r\n            minLength=\"5\"\r\n            maxLength=\"500\"\r\n            className=\"comment-input\"\r\n            value={comments[currentQuestionIndex]}\r\n            onChange={(e) => {\r\n                const updatedComments = [...comments];\r\n                updatedComments[currentQuestionIndex] = e.target.value;\r\n                setComments(updatedComments);\r\n            }}\r\n            placeholder=\"O seu comentário...\"\r\n            rows=\"3\"\r\n        />\r\n\r\n        <div className=\"file-upload\">\r\n            <label htmlFor=\"file-upload\" className=\"file-upload-btn\">\r\n                Carregar Arquivos\r\n            </label>\r\n            <input\r\n                type=\"file\"\r\n                id=\"file-upload\"\r\n                multiple\r\n                accept=\".xlsx, .xls, .docx, .doc, .jpg, .jpeg, .png, .pdf\"\r\n                onChange={handleFileChange}\r\n            />\r\n        </div>\r\n\r\n        {files[currentQuestionIndex]?.length > 0 && (\r\n            <div className=\"file-list\">\r\n                <h4>Arquivos Adicionados:</h4>\r\n                <ul>\r\n                    {files[currentQuestionIndex].map((file, index) => (\r\n                        <li key={index} className=\"file-item\">\r\n                            <span>{file.name}</span>\r\n                            <button\r\n                                onClick={() => handleRemoveFile(file.name)}\r\n                                className=\"remove-file-btn\"\r\n                            >\r\n                                Remover\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )}\r\n\r\n        <div className=\"button-container\">\r\n            {currentQuestionIndex > 0 && (\r\n                <button\r\n                    className=\"back-button\"\r\n                    onClick={handlePreviousQuestion}\r\n                    disabled={currentQuestionIndex === 0}\r\n                >\r\n                    Voltar\r\n                </button>\r\n            )}\r\n            <button\r\n                className=\"submit-button\"\r\n                type=\"submit\"\r\n                onClick={handleNextQuestion}\r\n            >\r\n                {currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'}\r\n            </button>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Survey;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}