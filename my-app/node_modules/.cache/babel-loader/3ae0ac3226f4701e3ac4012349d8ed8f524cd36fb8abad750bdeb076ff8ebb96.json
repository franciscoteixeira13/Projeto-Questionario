{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './FileUpload.css'; // Adicione o estilo de acordo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [currentFile, setCurrentFile] = useState(''); // Para armazenar o nome do arquivo atual na pasta\n\n  // Função para obter o nome do arquivo atual na pasta 'ficheiro-excel'\n  useEffect(() => {\n    fetch('http://localhost:4000/api/excel-file') // Chama a API para obter o nome do arquivo atual\n    .then(response => response.json()).then(data => {\n      if (data.fileName) {\n        // Extraímos apenas o nome do arquivo, sem o caminho completo\n        const fileName = data.fileName.split('/').pop();\n        setCurrentFile(fileName); // Atualiza o nome do arquivo atual\n      }\n    }).catch(error => console.error('Erro ao obter o arquivo atual:', error));\n  }, []);\n\n  // Função para selecionar o arquivo\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel')) {\n      setSelectedFile(file);\n      setFileName(file.name); // Exibe o nome do arquivo\n    } else {\n      alert('Por favor, selecione um arquivo Excel válido (.xlsx ou .xls)');\n    }\n  };\n\n  // Função para fazer o upload do arquivo\n  const handleFileUpload = () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      fetch('http://localhost:4000/api/upload-file', {\n        method: 'POST',\n        body: formData\n      }).then(response => response.json()).then(data => {\n        alert('Arquivo carregado com sucesso!');\n        console.log(data);\n      }).catch(error => {\n        console.error('Erro ao carregar o arquivo:', error);\n        alert('Erro ao carregar o arquivo!');\n      });\n    } else {\n      alert('Por favor, selecione um arquivo primeiro.');\n    }\n  };\n\n  // Função para fazer o reset para o arquivo padrão\n  const handleResetFile = () => {\n    fetch('http://localhost:4000/api/reset-file', {\n      method: 'POST'\n    }).then(response => response.json()).then(data => {\n      alert('Arquivo resetado com sucesso!');\n      console.log(data);\n    }).catch(error => {\n      console.error('Erro ao resetar o arquivo:', error);\n      alert('Erro ao resetar o arquivo!');\n    });\n  };\n\n  // Função para fazer o download do arquivo atual\n  // Função para fazer o download do arquivo atual\n  const handleDownloadFile = () => {\n    if (currentFile) {\n      const fileUrl = `http://localhost:4000//public/ficheiro-excel/${currentFile}`;\n\n      // Criação de um link de download\n      const link = document.createElement('a');\n      link.href = fileUrl;\n      link.download = currentFile; // Definindo o nome do arquivo a ser baixado\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link); // Remove o link da página após o clique\n    } else {\n      alert('Arquivo não encontrado!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"file-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Carregar Ficheiro Excel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), currentFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-file-container\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Arquivo a ser utilizado atualmente: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: 'blue',\n            cursor: 'pointer'\n          },\n          onClick: handleDownloadFile,\n          children: currentFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"select-file-button\",\n      onClick: () => document.getElementById('file-input').click(),\n      children: \"Escolher Arquivo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-input\",\n      accept: \"\",\n      multiple: true,\n      onChange: handleFileChange,\n      style: {\n        display: 'none'\n      } // Esconde o input real\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Arquivo selecionado:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }, this), \" \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 22\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"insert-button\",\n      onClick: handleFileUpload,\n      children: \"Inserir Ficheiro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-button\",\n      onClick: handleResetFile,\n      style: {\n        color: 'white',\n        marginTop: '10px'\n      },\n      children: \"Resetar Arquivo para Padr\\xE3o\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(FileUpload, \"fpcAocdsXxVPkGa3NlELUo4zU9I=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","FileUpload","_s","selectedFile","setSelectedFile","fileName","setFileName","currentFile","setCurrentFile","fetch","then","response","json","data","split","pop","catch","error","console","handleFileChange","event","file","target","files","type","name","alert","handleFileUpload","formData","FormData","append","method","body","log","handleResetFile","handleDownloadFile","fileUrl","link","document","createElement","href","download","appendChild","click","removeChild","className","children","_jsxFileName","lineNumber","columnNumber","style","color","cursor","onClick","getElementById","id","accept","multiple","onChange","display","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/FileUpload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './FileUpload.css'; // Adicione o estilo de acordo\r\n\r\nconst FileUpload = () => {\r\n    const [selectedFile, setSelectedFile] = useState(null);\r\n    const [fileName, setFileName] = useState('');\r\n    const [currentFile, setCurrentFile] = useState(''); // Para armazenar o nome do arquivo atual na pasta\r\n\r\n    // Função para obter o nome do arquivo atual na pasta 'ficheiro-excel'\r\n    useEffect(() => {\r\n        fetch('http://localhost:4000/api/excel-file') // Chama a API para obter o nome do arquivo atual\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                if (data.fileName) {\r\n                    // Extraímos apenas o nome do arquivo, sem o caminho completo\r\n                    const fileName = data.fileName.split('/').pop();\r\n                    setCurrentFile(fileName); // Atualiza o nome do arquivo atual\r\n                }\r\n            })\r\n            .catch((error) => console.error('Erro ao obter o arquivo atual:', error));\r\n    }, []);\r\n\r\n    // Função para selecionar o arquivo\r\n    const handleFileChange = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file && (file.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || file.type === 'application/vnd.ms-excel')) {\r\n            setSelectedFile(file);\r\n            setFileName(file.name); // Exibe o nome do arquivo\r\n        } else {\r\n            alert('Por favor, selecione um arquivo Excel válido (.xlsx ou .xls)');\r\n        }\r\n    };\r\n\r\n    // Função para fazer o upload do arquivo\r\n    const handleFileUpload = () => {\r\n        if (selectedFile) {\r\n            const formData = new FormData();\r\n            formData.append('file', selectedFile);\r\n\r\n            fetch('http://localhost:4000/api/upload-file', {\r\n                method: 'POST',\r\n                body: formData,\r\n            })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n                alert('Arquivo carregado com sucesso!');\r\n                console.log(data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Erro ao carregar o arquivo:', error);\r\n                alert('Erro ao carregar o arquivo!');\r\n            });\r\n        } else {\r\n            alert('Por favor, selecione um arquivo primeiro.');\r\n        }\r\n    };\r\n\r\n    // Função para fazer o reset para o arquivo padrão\r\n    const handleResetFile = () => {\r\n        fetch('http://localhost:4000/api/reset-file', {\r\n            method: 'POST',\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            alert('Arquivo resetado com sucesso!');\r\n            console.log(data);\r\n        })\r\n        .catch((error) => {\r\n            console.error('Erro ao resetar o arquivo:', error);\r\n            alert('Erro ao resetar o arquivo!');\r\n        });\r\n    };\r\n\r\n    // Função para fazer o download do arquivo atual\r\n    // Função para fazer o download do arquivo atual\r\nconst handleDownloadFile = () => {\r\n    if (currentFile) {\r\n        const fileUrl = `http://localhost:4000//public/ficheiro-excel/${currentFile}`;\r\n        \r\n        // Criação de um link de download\r\n        const link = document.createElement('a');\r\n        link.href = fileUrl;\r\n        link.download = currentFile; // Definindo o nome do arquivo a ser baixado\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link); // Remove o link da página após o clique\r\n    } else {\r\n        alert('Arquivo não encontrado!');\r\n    }\r\n};\r\n\r\n\r\n    return (\r\n        <div className=\"file-upload-container\">\r\n        <h2>Carregar Ficheiro Excel</h2>\r\n    \r\n        {currentFile && (\r\n            <div className=\"current-file-container\">\r\n                <p><strong>Arquivo a ser utilizado atualmente: </strong>\r\n                    <span \r\n                        style={{ color: 'blue', cursor: 'pointer' }} \r\n                        onClick={handleDownloadFile}\r\n                    >\r\n                        {currentFile}\r\n                    </span>\r\n                </p>\r\n            </div>\r\n        )}\r\n    \r\n        <button\r\n            className=\"select-file-button\"\r\n            onClick={() => document.getElementById('file-input').click()}\r\n        >\r\n            Escolher Arquivo\r\n        </button>\r\n        <input\r\n            type=\"file\"\r\n            id=\"file-input\"\r\n            accept=\"\"\r\n            multiple\r\n            onChange={handleFileChange}\r\n            style={{ display: 'none' }} // Esconde o input real\r\n        />\r\n    \r\n        {/* Nome do arquivo selecionado */}\r\n        {fileName && <p><strong>Arquivo selecionado:</strong> {fileName}</p>}\r\n    \r\n        {/* Botão de \"Inserir Ficheiro\" só aparece se um arquivo for selecionado */}\r\n        {selectedFile && (\r\n            <button className=\"insert-button\" onClick={handleFileUpload}>\r\n                Inserir Ficheiro\r\n            </button>\r\n        )}\r\n    \r\n        <button\r\n            className=\"reset-button\"\r\n            onClick={handleResetFile}\r\n            style={{ color: 'white', marginTop: '10px' }}\r\n        >\r\n            Resetar Arquivo para Padrão\r\n        </button>\r\n    </div>\r\n\r\n    );\r\n};\r\n\r\nexport default FileUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACZW,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAAA,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZ,IAAIA,IAAI,CAACR,QAAQ,EAAE;QACf;QACA,MAAMA,QAAQ,GAAGQ,IAAI,CAACR,QAAQ,CAACS,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;QAC/CP,cAAc,CAACH,QAAQ,CAAC,CAAC,CAAC;MAC9B;IACJ,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC,CAAC;EACjF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,gBAAgB,GAAIC,KAAK,IAAK;IAChC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,KAAKA,IAAI,CAACG,IAAI,KAAK,mEAAmE,IAAIH,IAAI,CAACG,IAAI,KAAK,0BAA0B,CAAC,EAAE;MACzIpB,eAAe,CAACiB,IAAI,CAAC;MACrBf,WAAW,CAACe,IAAI,CAACI,IAAI,CAAC,CAAC,CAAC;IAC5B,CAAC,MAAM;MACHC,KAAK,CAAC,8DAA8D,CAAC;IACzE;EACJ,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIxB,YAAY,EAAE;MACd,MAAMyB,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE3B,YAAY,CAAC;MAErCM,KAAK,CAAC,uCAAuC,EAAE;QAC3CsB,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEJ;MACV,CAAC,CAAC,CACDlB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACZa,KAAK,CAAC,gCAAgC,CAAC;QACvCR,OAAO,CAACe,GAAG,CAACpB,IAAI,CAAC;MACrB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;QACnDS,KAAK,CAAC,6BAA6B,CAAC;MACxC,CAAC,CAAC;IACN,CAAC,MAAM;MACHA,KAAK,CAAC,2CAA2C,CAAC;IACtD;EACJ,CAAC;;EAED;EACA,MAAMQ,eAAe,GAAGA,CAAA,KAAM;IAC1BzB,KAAK,CAAC,sCAAsC,EAAE;MAC1CsB,MAAM,EAAE;IACZ,CAAC,CAAC,CACDrB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACZa,KAAK,CAAC,+BAA+B,CAAC;MACtCR,OAAO,CAACe,GAAG,CAACpB,IAAI,CAAC;IACrB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IAAK;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClDS,KAAK,CAAC,4BAA4B,CAAC;IACvC,CAAC,CAAC;EACN,CAAC;;EAED;EACA;EACJ,MAAMS,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAI5B,WAAW,EAAE;MACb,MAAM6B,OAAO,GAAG,gDAAgD7B,WAAW,EAAE;;MAE7E;MACA,MAAM8B,IAAI,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;MACxCF,IAAI,CAACG,IAAI,GAAGJ,OAAO;MACnBC,IAAI,CAACI,QAAQ,GAAGlC,WAAW,CAAC,CAAC;MAC7B+B,QAAQ,CAACN,IAAI,CAACU,WAAW,CAACL,IAAI,CAAC;MAC/BA,IAAI,CAACM,KAAK,CAAC,CAAC;MACZL,QAAQ,CAACN,IAAI,CAACY,WAAW,CAACP,IAAI,CAAC,CAAC,CAAC;IACrC,CAAC,MAAM;MACHX,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAGG,oBACI1B,OAAA;IAAK6C,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACtC9C,OAAA;MAAA8C,QAAA,EAAI;IAAuB;MAAAzC,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE/B1C,WAAW,iBACRP,OAAA;MAAK6C,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACnC9C,OAAA;QAAA8C,QAAA,gBAAG9C,OAAA;UAAA8C,QAAA,EAAQ;QAAoC;UAAAzC,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpDjD,OAAA;UACIkD,KAAK,EAAE;YAAEC,KAAK,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAU,CAAE;UAC5CC,OAAO,EAAElB,kBAAmB;UAAAW,QAAA,EAE3BvC;QAAW;UAAAF,QAAA,EAAA0C,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAA5C,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAA5C,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACR,eAEDjD,OAAA;MACI6C,SAAS,EAAC,oBAAoB;MAC9BQ,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAACgB,cAAc,CAAC,YAAY,CAAC,CAACX,KAAK,CAAC,CAAE;MAAAG,QAAA,EAChE;IAED;MAAAzC,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTjD,OAAA;MACIwB,IAAI,EAAC,MAAM;MACX+B,EAAE,EAAC,YAAY;MACfC,MAAM,EAAC,EAAE;MACTC,QAAQ;MACRC,QAAQ,EAAEvC,gBAAiB;MAC3B+B,KAAK,EAAE;QAAES,OAAO,EAAE;MAAO,CAAE,CAAC;IAAA;MAAAtD,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,EAGD5C,QAAQ,iBAAIL,OAAA;MAAA8C,QAAA,gBAAG9C,OAAA;QAAA8C,QAAA,EAAQ;MAAoB;QAAAzC,QAAA,EAAA0C,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAAC5C,QAAQ;IAAA;MAAAA,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGnE9C,YAAY,iBACTH,OAAA;MAAQ6C,SAAS,EAAC,eAAe;MAACQ,OAAO,EAAE1B,gBAAiB;MAAAmB,QAAA,EAAC;IAE7D;MAAAzC,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX,eAEDjD,OAAA;MACI6C,SAAS,EAAC,cAAc;MACxBQ,OAAO,EAAEnB,eAAgB;MACzBgB,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAES,SAAS,EAAE;MAAO,CAAE;MAAAd,QAAA,EAChD;IAED;MAAAzC,QAAA,EAAA0C,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAA5C,QAAA,EAAA0C,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAGV,CAAC;AAAC/C,EAAA,CA7IID,UAAU;AAAA4D,EAAA,GAAV5D,UAAU;AA+IhB,eAAeA,UAAU;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}