{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './Survey.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    selectedQuestions,\n    InfoEntrevistador,\n    InfoEntrevistado\n  } = location.state || {\n    selectedQuestions: [],\n    InfoEntrevistador: {},\n    InfoEntrevistado: {}\n  };\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\n  const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\n  const [files, setFiles] = useState(Array(selectedQuestions.length).fill([]));\n\n  // Verifica se os dados do User Info estão preenchidos\n  useEffect(() => {\n    if (!InfoEntrevistador.nomeEntrevistador || !InfoEntrevistado.nomeEntrevistado || Object.values(InfoEntrevistador).some(value => !value || value.trim() === '') || Object.values(InfoEntrevistado).some(value => !value || value.trim() === '')) {\n      // Redireciona para a página inicial se os dados do User Info estiverem incompletos\n      alert('Por favor, selecione quest.');\n      navigate('/');\n    } else if (selectedQuestions.length === 0) {\n      // Redireciona para a página de seleção de perguntas se não houver perguntas selecionadas\n      alert('Não há perguntas selecionadas. Por favor, volte e selecione as perguntas.');\n      navigate('/select-questions');\n    }\n  }, [InfoEntrevistador, InfoEntrevistado, selectedQuestions, navigate]);\n  const handleFileChange = event => {\n    const newFiles = Array.from(event.target.files);\n    if (files[currentQuestionIndex].length + newFiles.length > 5) {\n      alert('Você pode enviar no máximo 5 arquivos por pergunta.');\n      return;\n    }\n    setFiles(prevFiles => {\n      const updatedFiles = [...prevFiles];\n      updatedFiles[currentQuestionIndex] = [...updatedFiles[currentQuestionIndex], ...newFiles];\n      return updatedFiles;\n    });\n  };\n  const handleRemoveFile = fileIndex => {\n    setFiles(prevFiles => {\n      const updatedFiles = [...prevFiles];\n      updatedFiles[currentQuestionIndex] = updatedFiles[currentQuestionIndex].filter((_, index) => index !== fileIndex);\n      return updatedFiles;\n    });\n  };\n  const handleNextQuestion = () => {\n    if (responses[currentQuestionIndex] === '') {\n      alert('Por favor, forneça uma resposta antes de continuar.');\n      return;\n    }\n    if (currentQuestionIndex === selectedQuestions.length - 1) {\n      handleSubmit();\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1);\n    }\n  };\n  const handleOptionSelect = option => {\n    setResponses(prevResponses => {\n      const updatedResponses = [...prevResponses];\n      updatedResponses[currentQuestionIndex] = option;\n      return updatedResponses;\n    });\n  };\n  const handleSubmit = () => {\n    if (!InfoEntrevistador.nomeEntrevistador || !InfoEntrevistado.nomeEntrevistado) {\n      alert('Por favor, preencha as informações do entrevistador e do entrevistado corretamente.');\n      return;\n    }\n    const now = new Date();\n    const formData = new FormData();\n\n    // Adiciona campos do InfoEntrevistador diretamente ao FormData\n    Object.entries(InfoEntrevistador).forEach(([key, value]) => {\n      formData.append(`InfoEntrevistador[${key}]`, value);\n    });\n\n    // Adiciona campos do InfoEntrevistado diretamente ao FormData\n    Object.entries(InfoEntrevistado).forEach(([key, value]) => {\n      formData.append(`InfoEntrevistado[${key}]`, value);\n    });\n\n    // Adiciona as respostas e os arquivos ao FormData\n    responses.forEach((response, index) => {\n      const questionData = {\n        Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\n        Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\n        Indice_Pergunta: selectedQuestions[index].id,\n        Ambito: selectedQuestions[index].âmbito,\n        Pergunta: selectedQuestions[index].pergunta,\n        Resposta: responses[index],\n        Comentarios: comments[index]\n      };\n\n      // Adiciona dados da pergunta\n      Object.entries(questionData).forEach(([key, value]) => {\n        formData.append(`responses[${index}][${key}]`, value);\n      });\n\n      // Adiciona os arquivos relacionados (se houver)\n      if (files[index] && files[index].length > 0) {\n        files[index].forEach(file => {\n          formData.append(`files[${index}]`, file);\n        });\n      }\n    });\n\n    // Envia os dados para o servidor\n    fetch('http://localhost:4000/api/survey', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (!response.ok) {\n        return response.text().then(text => {\n          throw new Error(`Erro ${response.status}: ${text}`);\n        });\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Dados enviados com sucesso:', data);\n      navigate('/survey-summary', {\n        state: {\n          selectedQuestions,\n          responses,\n          comments,\n          files\n        }\n      });\n    }).catch(error => {\n      console.error('Erro ao enviar os dados:', error);\n      alert(`Houve um erro ao enviar os dados: ${error.message}`);\n    });\n  };\n  if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\n    return null;\n  }\n  const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\n  const totalQuestions = selectedQuestions.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Pergunta \", currentQuestionIndex + 1, \" de \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pergunta-text\",\n      children: selectedQuestions[currentQuestionIndex].pergunta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-details\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Normas Aplic\\xE1veis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xCDndice da Pergunta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xC2mbito:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].âmbito || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Sim'),\n        children: \"Sim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Não'),\n        children: \"N\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"40\",\n      className: \"response-input\",\n      value: responses[currentQuestionIndex],\n      onChange: e => setResponses(prevResponses => {\n        const updatedResponses = [...prevResponses];\n        updatedResponses[currentQuestionIndex] = e.target.value;\n        return updatedResponses;\n      }),\n      placeholder: \"A sua resposta...\",\n      rows: \"4\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Coment\\xE1rios:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"40\",\n      className: \"comment-input\",\n      value: comments[currentQuestionIndex],\n      onChange: e => setComments(prevComments => {\n        const updatedComments = [...prevComments];\n        updatedComments[currentQuestionIndex] = e.target.value;\n        return updatedComments;\n      }),\n      placeholder: \"O seu coment\\xE1rio...\",\n      rows: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"select-file-button\",\n        onClick: () => document.getElementById('file-input').click(),\n        children: \"Escolher Arquivos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-input\",\n        multiple: true,\n        onChange: handleFileChange,\n        style: {\n          display: 'none'\n        } // Esconde o input real\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 17\n      }, this), files[currentQuestionIndex].length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Arquivos Selecionados:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: files[currentQuestionIndex].map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"file-item\",\n            children: [file.name, /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveFile(index),\n              className: \"remove-file-btn\",\n              children: \"Remover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handlePreviousQuestion,\n        disabled: currentQuestionIndex === 0,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"k2H5kBfC9rAGDm/DGYtBHwCJz4k=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Survey","_s","location","navigate","selectedQuestions","InfoEntrevistador","InfoEntrevistado","state","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","Array","length","fill","comments","setComments","files","setFiles","nomeEntrevistador","nomeEntrevistado","Object","values","some","value","trim","alert","handleFileChange","event","newFiles","from","target","prevFiles","updatedFiles","handleRemoveFile","fileIndex","filter","_","index","handleNextQuestion","handleSubmit","prevIndex","handlePreviousQuestion","handleOptionSelect","option","prevResponses","updatedResponses","now","Date","formData","FormData","entries","forEach","key","append","response","questionData","Data","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","Normas_aplicaveis","normasAplicaveis","Indice_Pergunta","id","Ambito","âmbito","Pergunta","pergunta","Resposta","Comentarios","file","fetch","method","body","then","ok","text","Error","status","json","data","console","log","catch","error","message","currentQuestionId","totalQuestions","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","minLength","maxLength","onChange","e","placeholder","rows","required","prevComments","updatedComments","document","getElementById","click","type","multiple","style","display","map","name","disabled","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/Survey.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './Survey.css';\r\n\r\nconst Survey = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { selectedQuestions, InfoEntrevistador, InfoEntrevistado } = location.state || { selectedQuestions: [], InfoEntrevistador: {}, InfoEntrevistado: {} };\r\n\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [files, setFiles] = useState(Array(selectedQuestions.length).fill([]));\r\n\r\n    // Verifica se os dados do User Info estão preenchidos\r\n    useEffect(() => {\r\n        if (\r\n            !InfoEntrevistador.nomeEntrevistador || \r\n            !InfoEntrevistado.nomeEntrevistado || \r\n            Object.values(InfoEntrevistador).some(value => !value || value.trim() === '') || \r\n            Object.values(InfoEntrevistado).some(value => !value || value.trim() === '')\r\n        ) {\r\n            // Redireciona para a página inicial se os dados do User Info estiverem incompletos\r\n            alert('Por favor, selecione quest.');\r\n            navigate('/');\r\n        } else if (selectedQuestions.length === 0) {\r\n            // Redireciona para a página de seleção de perguntas se não houver perguntas selecionadas\r\n            alert('Não há perguntas selecionadas. Por favor, volte e selecione as perguntas.');\r\n            navigate('/select-questions');\r\n        }\r\n    }, [InfoEntrevistador, InfoEntrevistado, selectedQuestions, navigate]);\r\n\r\n    const handleFileChange = (event) => {\r\n        const newFiles = Array.from(event.target.files);\r\n\r\n        if (files[currentQuestionIndex].length + newFiles.length > 5) {\r\n            alert('Você pode enviar no máximo 5 arquivos por pergunta.');\r\n            return;\r\n        }\r\n\r\n        setFiles((prevFiles) => {\r\n            const updatedFiles = [...prevFiles];\r\n            updatedFiles[currentQuestionIndex] = [\r\n                ...updatedFiles[currentQuestionIndex],\r\n                ...newFiles\r\n            ];\r\n            return updatedFiles;\r\n        });\r\n    };\r\n\r\n    const handleRemoveFile = (fileIndex) => {\r\n        setFiles((prevFiles) => {\r\n            const updatedFiles = [...prevFiles];\r\n            updatedFiles[currentQuestionIndex] = updatedFiles[currentQuestionIndex].filter((_, index) => index !== fileIndex);\r\n            return updatedFiles;\r\n        });\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        if (responses[currentQuestionIndex] === '') {\r\n            alert('Por favor, forneça uma resposta antes de continuar.');\r\n            return;\r\n        }\r\n\r\n        if (currentQuestionIndex === selectedQuestions.length - 1) {\r\n            handleSubmit();\r\n        } else {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousQuestion = () => {\r\n        if (currentQuestionIndex > 0) {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\r\n        }\r\n    };\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setResponses((prevResponses) => {\r\n            const updatedResponses = [...prevResponses];\r\n            updatedResponses[currentQuestionIndex] = option;\r\n            return updatedResponses;\r\n        });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        if (!InfoEntrevistador.nomeEntrevistador || !InfoEntrevistado.nomeEntrevistado) {\r\n            alert('Por favor, preencha as informações do entrevistador e do entrevistado corretamente.');\r\n            return;\r\n        }\r\n\r\n        const now = new Date();\r\n        const formData = new FormData();\r\n\r\n        // Adiciona campos do InfoEntrevistador diretamente ao FormData\r\n        Object.entries(InfoEntrevistador).forEach(([key, value]) => {\r\n            formData.append(`InfoEntrevistador[${key}]`, value);\r\n        });\r\n\r\n        // Adiciona campos do InfoEntrevistado diretamente ao FormData\r\n        Object.entries(InfoEntrevistado).forEach(([key, value]) => {\r\n            formData.append(`InfoEntrevistado[${key}]`, value);\r\n        });\r\n\r\n        // Adiciona as respostas e os arquivos ao FormData\r\n        responses.forEach((response, index) => {\r\n            const questionData = {\r\n                Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\r\n                Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\r\n                Indice_Pergunta: selectedQuestions[index].id,\r\n                Ambito: selectedQuestions[index].âmbito,\r\n                Pergunta: selectedQuestions[index].pergunta,\r\n                Resposta: responses[index],\r\n                Comentarios: comments[index],\r\n            };\r\n\r\n            // Adiciona dados da pergunta\r\n            Object.entries(questionData).forEach(([key, value]) => {\r\n                formData.append(`responses[${index}][${key}]`, value);\r\n            });\r\n\r\n            // Adiciona os arquivos relacionados (se houver)\r\n            if (files[index] && files[index].length > 0) {\r\n                files[index].forEach((file) => {\r\n                    formData.append(`files[${index}]`, file);\r\n                });\r\n            }\r\n        });\r\n\r\n        // Envia os dados para o servidor\r\n        fetch('http://localhost:4000/api/survey', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.text().then(text => {\r\n                    throw new Error(`Erro ${response.status}: ${text}`);\r\n                });\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            console.log('Dados enviados com sucesso:', data);\r\n            navigate('/survey-summary', { state: { selectedQuestions, responses, comments, files } });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Erro ao enviar os dados:', error);\r\n            alert(`Houve um erro ao enviar os dados: ${error.message}`);\r\n        });\r\n    };\r\n\r\n    if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\r\n        return null;\r\n    }\r\n\r\n    const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\r\n    const totalQuestions = selectedQuestions.length;\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pergunta {currentQuestionIndex + 1} de {totalQuestions}</h2>\r\n            <h3 className='pergunta-text'>{selectedQuestions[currentQuestionIndex].pergunta}</h3>\r\n\r\n            <div className=\"question-details\">\r\n                <ul>\r\n                    <li><strong>Normas Aplicáveis:</strong> {selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A'}</li>\r\n                    <li><strong>Índice da Pergunta:</strong> {selectedQuestions[currentQuestionIndex].id}</li>\r\n                    <li><strong>Âmbito:</strong> {selectedQuestions[currentQuestionIndex].âmbito || 'N/A'}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"option-buttons\">\r\n                <button\r\n                    className={`small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`}\r\n                    onClick={() => handleOptionSelect('Sim')}\r\n                >\r\n                    Sim\r\n                </button>\r\n                <button\r\n                    className={`small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`}\r\n                    onClick={() => handleOptionSelect('Não')}\r\n                >\r\n                    Não\r\n                </button>\r\n            </div>\r\n\r\n            <textarea\r\n                minLength='5'\r\n                maxLength='40'\r\n                className=\"response-input\"\r\n                value={responses[currentQuestionIndex]}\r\n                onChange={(e) =>\r\n                    setResponses((prevResponses) => {\r\n                        const updatedResponses = [...prevResponses];\r\n                        updatedResponses[currentQuestionIndex] = e.target.value;\r\n                        return updatedResponses;\r\n                    })\r\n                }\r\n                placeholder=\"A sua resposta...\"\r\n                rows=\"4\"\r\n                required\r\n            />\r\n\r\n            <h3>Comentários:</h3>\r\n            <textarea\r\n                minLength='5'\r\n                maxLength='40'\r\n                className=\"comment-input\"\r\n                value={comments[currentQuestionIndex]}\r\n                onChange={(e) =>\r\n                    setComments((prevComments) => {\r\n                        const updatedComments = [...prevComments];\r\n                        updatedComments[currentQuestionIndex] = e.target.value;\r\n                        return updatedComments;\r\n                    })\r\n                }\r\n                placeholder=\"O seu comentário...\"\r\n                rows=\"3\"\r\n            />\r\n\r\n            {/* Botão de upload de arquivos */}\r\n            <div className=\"file-upload\">\r\n                <button\r\n                    className=\"select-file-button\"\r\n                    onClick={() => document.getElementById('file-input').click()}\r\n                >\r\n                    Escolher Arquivos\r\n                </button>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"file-input\"\r\n                    multiple\r\n                    onChange={handleFileChange}\r\n                    style={{ display: 'none' }} // Esconde o input real\r\n                />\r\n                {files[currentQuestionIndex].length > 0 && (\r\n                    <>\r\n                        <h4>Arquivos Selecionados:</h4>\r\n                        <ul>\r\n                            {files[currentQuestionIndex].map((file, index) => (\r\n                                <li key={index} className=\"file-item\">\r\n                                    {file.name}\r\n                                    <button onClick={() => handleRemoveFile(index)} className=\"remove-file-btn\">Remover</button>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    </>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n                {currentQuestionIndex > 0 && (\r\n                    <button className='back-button' onClick={handlePreviousQuestion} disabled={currentQuestionIndex === 0}>\r\n                        Voltar\r\n                    </button>\r\n                )}\r\n                <button className='submit-button' type='submit' onClick={handleNextQuestion}>\r\n                    {currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Survey;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}