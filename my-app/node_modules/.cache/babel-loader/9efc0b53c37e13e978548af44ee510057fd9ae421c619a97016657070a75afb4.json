{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\UserInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserInfo = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Estado para armazenar os dados do usuário\n  const [userInfo, setUserInfo] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const [formValid, setFormValid] = useState(false); // Estado para controlar se o formulário é válido\n\n  // Função para verificar se todos os campos obrigatórios estão preenchidos corretamente\n  const validateForm = () => {\n    const {\n      name,\n      email,\n      phone\n    } = userInfo;\n    // Validação simples: nome, email e telefone não podem estar vazios, e o email precisa ser válido\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    const isValid = name.trim() !== '' && emailRegex.test(email.trim()) && phone.trim() !== '';\n    setFormValid(isValid);\n  };\n\n  // Função para manipular mudanças nos campos do formulário\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUserInfo(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n    validateForm(); // Revalida o formulário a cada mudança\n  };\n\n  // Função para enviar o formulário e navegar para a próxima página\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (formValid) {\n      navigate('/select-questions', {\n        state: {\n          userInfo\n        }\n      }); // Passa userInfo para a próxima página\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Informa\\xE7\\xF5es do Usu\\xE1rio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Nome:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: userInfo.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: userInfo.email,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Telefone:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"phone\",\n          value: userInfo.phone,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: !formValid,\n        children: \"Avan\\xE7ar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(UserInfo, \"+Voa7r9WkJlDa12SRwxWwGXCag4=\", false, function () {\n  return [useNavigate];\n});\n_c = UserInfo;\nexport default UserInfo;\nvar _c;\n$RefreshReg$(_c, \"UserInfo\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","UserInfo","_s","navigate","userInfo","setUserInfo","name","email","phone","formValid","setFormValid","validateForm","emailRegex","isValid","trim","test","handleInputChange","e","value","target","prevState","handleSubmit","preventDefault","state","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","disabled","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/UserInfo.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UserInfo = () => {\r\n    const navigate = useNavigate();\r\n    \r\n    // Estado para armazenar os dados do usuário\r\n    const [userInfo, setUserInfo] = useState({\r\n        name: '',\r\n        email: '',\r\n        phone: ''\r\n    });\r\n\r\n    const [formValid, setFormValid] = useState(false); // Estado para controlar se o formulário é válido\r\n\r\n    // Função para verificar se todos os campos obrigatórios estão preenchidos corretamente\r\n    const validateForm = () => {\r\n        const { name, email, phone } = userInfo;\r\n        // Validação simples: nome, email e telefone não podem estar vazios, e o email precisa ser válido\r\n        const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n        const isValid = name.trim() !== '' && \r\n                        emailRegex.test(email.trim()) && \r\n                        phone.trim() !== '';\r\n        setFormValid(isValid);\r\n    };\r\n\r\n    // Função para manipular mudanças nos campos do formulário\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserInfo(prevState => ({\r\n            ...prevState,\r\n            [name]: value\r\n        }));\r\n        validateForm(); // Revalida o formulário a cada mudança\r\n    };\r\n\r\n    // Função para enviar o formulário e navegar para a próxima página\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid) {\r\n            navigate('/select-questions', { state: { userInfo } }); // Passa userInfo para a próxima página\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Informações do Usuário</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label>Nome:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        value={userInfo.name}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Email:</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={userInfo.email}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Telefone:</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"phone\"\r\n                        value={userInfo.phone}\r\n                        onChange={handleInputChange}\r\n                        required\r\n                    />\r\n                </div>\r\n                <button type=\"submit\" disabled={!formValid}>Avançar</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserInfo;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}