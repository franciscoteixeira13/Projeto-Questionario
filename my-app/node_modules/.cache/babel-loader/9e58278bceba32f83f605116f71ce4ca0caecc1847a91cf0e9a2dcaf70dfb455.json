{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './Survey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    selectedQuestions,\n    userInfo\n  } = location.state || {\n    selectedQuestions: [],\n    userInfo: {}\n  };\n  console.log('Perguntas recebidas:', selectedQuestions); // Log para depuração\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\n  const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\n  const [files, setFiles] = useState(Array(selectedQuestions.length).fill([])); // Armazenar arquivos como um array\n\n  // Função para adicionar arquivos\n  const handleFileChange = event => {\n    const newFiles = Array.from(event.target.files); // Converte FileList em array\n    setFiles(prevFiles => {\n      const updatedFiles = [...prevFiles];\n      updatedFiles[currentQuestionIndex] = [...updatedFiles[currentQuestionIndex], ...newFiles]; // Adiciona os novos arquivos\n      return updatedFiles;\n    });\n  };\n\n  // Função para remover um arquivo específico\n  const handleRemoveFile = fileIndex => {\n    setFiles(prevFiles => {\n      const updatedFiles = [...prevFiles];\n      updatedFiles[currentQuestionIndex] = updatedFiles[currentQuestionIndex].filter((_, index) => index !== fileIndex);\n      return updatedFiles;\n    });\n  };\n  const handleNextQuestion = () => {\n    if (responses[currentQuestionIndex] === '') {\n      alert('Por favor, forneça uma resposta antes de continuar.'); // Alerta para o usuário\n      return; // Não avança se a resposta estiver vazia\n    }\n    if (currentQuestionIndex === selectedQuestions.length - 1) {\n      handleSubmit();\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1);\n    }\n  };\n  const handleOptionSelect = option => {\n    setResponses(prevResponses => {\n      const updatedResponses = [...prevResponses];\n      updatedResponses[currentQuestionIndex] = option;\n      return updatedResponses;\n    });\n  };\n  const handleSubmit = () => {\n    const now = new Date();\n    const submissionData = {\n      user: userInfo,\n      responses: responses.map((resp, index) => ({\n        Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\n        Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\n        Indice_Pergunta: selectedQuestions[index].id,\n        Ambito: selectedQuestions[index].âmbito,\n        Pergunta: selectedQuestions[index].pergunta,\n        Resposta: responses[index],\n        Comentarios: comments[index],\n        Arquivos: files[index] // Enviar os arquivos selecionados\n      }))\n    };\n    console.log('Dados a serem enviados:', submissionData);\n    fetch('http://localhost:4000/api/survey', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(submissionData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.text().then(text => {\n          throw new Error(`Erro ${response.status}: ${text}`);\n        });\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Dados enviados com sucesso:', data);\n      navigate('/survey-summary', {\n        state: {\n          selectedQuestions,\n          responses,\n          comments,\n          files\n        }\n      });\n    }).catch(error => {\n      console.error('Erro ao enviar os dados:', error);\n      alert(`Houve um erro ao enviar os dados: ${error.message}`);\n    });\n  };\n  if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\n    return null; // Ou alguma mensagem de erro\n  }\n  const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\n  const totalQuestions = selectedQuestions.length; // Total de perguntas\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Pergunta \", currentQuestionIndex + 1, \" de \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pergunta-text\",\n      children: selectedQuestions[currentQuestionIndex].pergunta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-details\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Normas Aplic\\xE1veis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xCDndice da Pergunta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xC2mbito:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].âmbito || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Sim'),\n        children: \"Sim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Não'),\n        children: \"N\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"40\",\n      className: \"response-input\",\n      value: responses[currentQuestionIndex],\n      onChange: e => setResponses(prevResponses => {\n        const updatedResponses = [...prevResponses];\n        updatedResponses[currentQuestionIndex] = e.target.value;\n        return updatedResponses;\n      }),\n      placeholder: \"A sua resposta...\",\n      rows: \"4\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Coment\\xE1rios:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"40\",\n      className: \"comment-input\",\n      value: comments[currentQuestionIndex],\n      onChange: e => setComments(prevComments => {\n        const updatedComments = [...prevComments];\n        updatedComments[currentQuestionIndex] = e.target.value;\n        return updatedComments;\n      }),\n      placeholder: \"O seu coment\\xE1rio...\",\n      rows: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        multiple: true,\n        onChange: handleFileChange,\n        className: \"file-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Arquivos Selecionados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files[currentQuestionIndex].map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"file-item\",\n          children: [file.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFile(index),\n            className: \"remove-file-button\",\n            children: \"Remover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handlePreviousQuestion,\n        disabled: currentQuestionIndex === 0,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"F4vmDXAZD68kFSmp2gHrBgtT2Mc=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Survey","_s","location","navigate","selectedQuestions","userInfo","state","console","log","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","Array","length","fill","comments","setComments","files","setFiles","handleFileChange","event","newFiles","from","target","prevFiles","updatedFiles","handleRemoveFile","fileIndex","filter","_","index","handleNextQuestion","alert","handleSubmit","prevIndex","handlePreviousQuestion","handleOptionSelect","option","prevResponses","updatedResponses","now","Date","submissionData","user","map","resp","Data","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","Normas_aplicaveis","normasAplicaveis","Indice_Pergunta","id","Ambito","âmbito","Pergunta","pergunta","Resposta","Comentarios","Arquivos","fetch","method","headers","body","JSON","stringify","then","response","ok","text","Error","status","json","data","catch","error","message","currentQuestionId","totalQuestions","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","minLength","maxLength","value","onChange","e","placeholder","rows","required","prevComments","updatedComments","type","multiple","file","name","disabled","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/Survey.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './Survey.css';\r\n\r\nconst Survey = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { selectedQuestions, userInfo } = location.state || { selectedQuestions: [], userInfo: {} };\r\n\r\n    console.log('Perguntas recebidas:', selectedQuestions); // Log para depuração\r\n\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [files, setFiles] = useState(Array(selectedQuestions.length).fill([])); // Armazenar arquivos como um array\r\n\r\n    // Função para adicionar arquivos\r\n    const handleFileChange = (event) => {\r\n        const newFiles = Array.from(event.target.files); // Converte FileList em array\r\n        setFiles((prevFiles) => {\r\n            const updatedFiles = [...prevFiles];\r\n            updatedFiles[currentQuestionIndex] = [...updatedFiles[currentQuestionIndex], ...newFiles]; // Adiciona os novos arquivos\r\n            return updatedFiles;\r\n        });\r\n    };\r\n\r\n    // Função para remover um arquivo específico\r\n    const handleRemoveFile = (fileIndex) => {\r\n        setFiles((prevFiles) => {\r\n            const updatedFiles = [...prevFiles];\r\n            updatedFiles[currentQuestionIndex] = updatedFiles[currentQuestionIndex].filter((_, index) => index !== fileIndex);\r\n            return updatedFiles;\r\n        });\r\n    };\r\n\r\n    const handleNextQuestion = () => {\r\n        if (responses[currentQuestionIndex] === '') {\r\n            alert('Por favor, forneça uma resposta antes de continuar.'); // Alerta para o usuário\r\n            return; // Não avança se a resposta estiver vazia\r\n        }\r\n\r\n        if (currentQuestionIndex === selectedQuestions.length - 1) {\r\n            handleSubmit();\r\n        } else {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousQuestion = () => {\r\n        if (currentQuestionIndex > 0) {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\r\n        }\r\n    };\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setResponses((prevResponses) => {\r\n            const updatedResponses = [...prevResponses];\r\n            updatedResponses[currentQuestionIndex] = option;\r\n            return updatedResponses;\r\n        });\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const now = new Date();\r\n        const submissionData = {\r\n            user: userInfo,\r\n            responses: responses.map((resp, index) => ({\r\n                Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\r\n                Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\r\n                Indice_Pergunta: selectedQuestions[index].id,\r\n                Ambito: selectedQuestions[index].âmbito,\r\n                Pergunta: selectedQuestions[index].pergunta,\r\n                Resposta: responses[index],\r\n                Comentarios: comments[index],\r\n                Arquivos: files[index] // Enviar os arquivos selecionados\r\n            }))\r\n        };\r\n\r\n        console.log('Dados a serem enviados:', submissionData);\r\n\r\n        fetch('http://localhost:4000/api/survey', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(submissionData),\r\n        })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.text().then(text => {\r\n                    throw new Error(`Erro ${response.status}: ${text}`);\r\n                });\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            console.log('Dados enviados com sucesso:', data);\r\n            navigate('/survey-summary', { state: { selectedQuestions, responses, comments, files } });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Erro ao enviar os dados:', error);\r\n            alert(`Houve um erro ao enviar os dados: ${error.message}`);\r\n        });\r\n    };\r\n\r\n    if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\r\n        return null; // Ou alguma mensagem de erro\r\n    }\r\n\r\n    const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\r\n    const totalQuestions = selectedQuestions.length; // Total de perguntas\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pergunta {currentQuestionIndex + 1} de {totalQuestions}</h2>\r\n            <h3 className='pergunta-text'>{selectedQuestions[currentQuestionIndex].pergunta}</h3>\r\n\r\n            {/* Informações adicionais diretamente acima ou abaixo da pergunta */}\r\n            <div className=\"question-details\">\r\n                <ul>\r\n                    <li><strong>Normas Aplicáveis:</strong> {selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A'}</li>\r\n                    <li><strong>Índice da Pergunta:</strong> {selectedQuestions[currentQuestionIndex].id}</li>\r\n                    <li><strong>Âmbito:</strong> {selectedQuestions[currentQuestionIndex].âmbito || 'N/A'}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"option-buttons\">\r\n                <button\r\n                    className={`small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`}\r\n                    onClick={() => handleOptionSelect('Sim')}\r\n                >\r\n                    Sim\r\n                </button>\r\n                <button\r\n                    className={`small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`}\r\n                    onClick={() => handleOptionSelect('Não')}\r\n                >\r\n                    Não\r\n                </button>\r\n            </div>\r\n\r\n            <textarea\r\n                minLength='5'\r\n                maxLength='40'\r\n                className=\"response-input\"\r\n                value={responses[currentQuestionIndex]}\r\n                onChange={(e) =>\r\n                    setResponses((prevResponses) => {\r\n                        const updatedResponses = [...prevResponses];\r\n                        updatedResponses[currentQuestionIndex] = e.target.value;\r\n                        return updatedResponses;\r\n                    })\r\n                }\r\n                placeholder=\"A sua resposta...\"\r\n                rows=\"4\"\r\n                required\r\n            />\r\n\r\n            <h3>Comentários:</h3>\r\n            <textarea\r\n                minLength='5'\r\n                maxLength='40'\r\n                className=\"comment-input\"\r\n                value={comments[currentQuestionIndex]}\r\n                onChange={(e) =>\r\n                    setComments((prevComments) => {\r\n                        const updatedComments = [...prevComments];\r\n                        updatedComments[currentQuestionIndex] = e.target.value;\r\n                        return updatedComments;\r\n                    })\r\n                }\r\n                placeholder=\"O seu comentário...\"\r\n                rows=\"3\"\r\n            />\r\n\r\n            {/* Campo para adicionar arquivos */}\r\n            <div className=\"file-upload\">\r\n                <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={handleFileChange}\r\n                    className=\"file-input\"\r\n                />\r\n                <h4>Arquivos Selecionados:</h4>\r\n                <ul>\r\n                    {files[currentQuestionIndex].map((file, index) => (\r\n                        <li key={index} className=\"file-item\">\r\n                            {file.name}\r\n                            <button onClick={() => handleRemoveFile(index)} className=\"remove-file-button\">Remover</button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n                {currentQuestionIndex > 0 && (\r\n                    <button className='back-button' onClick={handlePreviousQuestion} disabled={currentQuestionIndex === 0}>\r\n                        Voltar\r\n                    </button>\r\n                )}\r\n                <button className='submit-button' type='submit' onClick={handleNextQuestion}>\r\n                    {currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Survey;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}