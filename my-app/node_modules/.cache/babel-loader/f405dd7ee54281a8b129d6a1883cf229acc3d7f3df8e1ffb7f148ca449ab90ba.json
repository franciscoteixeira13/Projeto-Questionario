{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\Main.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport './Main.css';\nimport App from './App';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleTheme = () => {\n    const newTheme = !isDarkMode;\n    setIsDarkMode(newTheme);\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\n    document.body.className = newTheme ? 'dark-mode' : 'light-mode';\n  };\n  useEffect(() => {\n    const savedTheme = localStorage.getItem('theme');\n    if (savedTheme === 'dark') {\n      setIsDarkMode(true);\n      document.body.className = 'dark-mode'; // Set body class on initial load\n    } else {\n      document.body.className = 'light-mode'; // Set body class on initial load\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Painel de Entrevistas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        class: \"switch\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"slider round\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n//}\n_s(Main, \"bUs4CHDjU8AH+ZZYt8wlh4bHppI=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","App","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","isDarkMode","setIsDarkMode","toggleTheme","newTheme","localStorage","setItem","document","body","className","savedTheme","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","class","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/Main.js"],"sourcesContent":["import React from 'react';\r\nimport { useState, useEffect } from 'react'\r\nimport './Main.css'\r\nimport App from './App'\r\n\r\nexport default function Main() {\r\n\r\nconst [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\nconst toggleTheme = () => {\r\n    const newTheme = !isDarkMode;\r\n    setIsDarkMode(newTheme);\r\n    localStorage.setItem('theme', newTheme ? 'dark' : 'light');\r\n    document.body.className = newTheme ? 'dark-mode' : 'light-mode';\r\n};\r\n\r\nuseEffect(() => {\r\n    const savedTheme = localStorage.getItem('theme');\r\n    if (savedTheme === 'dark') {\r\n      setIsDarkMode(true);\r\n      document.body.className = 'dark-mode'; // Set body class on initial load\r\n    } else {\r\n      document.body.className = 'light-mode'; // Set body class on initial load\r\n    }\r\n}, []);\r\n\r\n\r\nreturn (\r\n    <>\r\n    <div>\r\n      <h1>Painel de Entrevistas</h1>\r\n      <label class=\"switch\">\r\n        <input type='checkbox' onClick={toggleTheme}></input>\r\n        <span class=\"slider round\"></span>\r\n      </label>\r\n      <App />\r\n      \r\n      \r\n    </div> \r\n          \r\n    \r\n    </>\r\n    \r\n      \r\n    \r\n  );\r\n}\r\n//}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAO,YAAY;AACnB,OAAOC,GAAG,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvB,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAE/B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,QAAQ,GAAG,CAACH,UAAU;IAC5BC,aAAa,CAACE,QAAQ,CAAC;IACvBC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;IAC1DG,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAGL,QAAQ,GAAG,WAAW,GAAG,YAAY;EACnE,CAAC;EAEDX,SAAS,CAAC,MAAM;IACZ,MAAMiB,UAAU,GAAGL,YAAY,CAACM,OAAO,CAAC,OAAO,CAAC;IAChD,IAAID,UAAU,KAAK,MAAM,EAAE;MACzBR,aAAa,CAAC,IAAI,CAAC;MACnBK,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAG,WAAW,CAAC,CAAC;IACzC,CAAC,MAAM;MACLF,QAAQ,CAACC,IAAI,CAACC,SAAS,GAAG,YAAY,CAAC,CAAC;IAC1C;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIb,OAAA,CAAAE,SAAA;IAAAc,QAAA,eACAhB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BpB,OAAA;QAAOqB,KAAK,EAAC,QAAQ;QAAAL,QAAA,gBACnBhB,OAAA;UAAOsB,IAAI,EAAC,UAAU;UAACC,OAAO,EAAEhB;QAAY;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACrDpB,OAAA;UAAMqB,KAAK,EAAC;QAAc;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC,eACRpB,OAAA,CAACF,GAAG;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGJ;EAAC,gBAGJ,CAAC;AAKP;AACA;AAAAhB,EAAA,CA1CwBD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AAAA,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}