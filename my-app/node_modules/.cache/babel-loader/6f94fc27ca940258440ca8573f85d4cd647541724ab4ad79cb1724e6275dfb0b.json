{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\AllSurveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importa o hook para navegação\nimport axios from 'axios';\nimport { jsPDF } from 'jspdf'; // Importando jsPDF para criar o PDF\nimport { FaDownload } from 'react-icons/fa'; // Importando o ícone de download do react-icons\nimport JSZip from 'jszip'; // Importando JSZip\nimport './AllSurveys.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllSurveys = () => {\n  _s();\n  const navigate = useNavigate(); // Hook para redirecionamento\n  const [surveys, setSurveys] = useState([]);\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null); // Controla qual título está expandido\n  const [expandedQuestions, setExpandedQuestions] = useState({}); // Controla as perguntas expandidas por entrevista\n  const [currentPage, setCurrentPage] = useState(1); // Página atual\n  const [surveysPerPage] = useState(20); // Número de entrevistas por página\n\n  // Carregar os dados da API\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/surveys').then(response => setSurveys(response.data)).catch(error => console.error('Erro ao obter as entrevistas:', error));\n  }, []);\n\n  // Alternar expansão de um título específico\n  const toggleSurveyExpansion = id => {\n    setExpandedSurveyId(prevId => prevId === id ? null : id); // Se já estiver expandido, recolhe, senão expande\n  };\n\n  // Alternar expansão de uma pergunta específica dentro de uma entrevista\n  const toggleQuestionExpansion = (surveyId, index) => {\n    const questionKey = `${surveyId}-${index}`; // Gerar uma chave única para cada pergunta (combinando surveyId e index)\n    setExpandedQuestions(prevExpandedQuestions => ({\n      ...prevExpandedQuestions,\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true // Expande ou recolhe\n    }));\n  };\n\n  // Função para baixar os documentos de uma pergunta\n  const downloadFile = fileName => {\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\n    const link = document.createElement('a');\n    link.href = fileUrl;\n    link.download = fileName;\n    link.click();\n  };\n\n  // Função para gerar o PDF\n  const generatePDF = surveyData => {\n    const doc = new jsPDF();\n\n    // Título do PDF\n    doc.setFontSize(18);\n    doc.text('Informações da Entrevista', 14, 20);\n    let yPosition = 30;\n\n    // Informações do entrevistador\n    doc.setFontSize(12);\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n\n    // Informações do entrevistado\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n\n    // Adicionar perguntas e respostas\n    surveyData.surveyDetails.forEach((question, index) => {\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\n      yPosition += 20; // Espaço entre perguntas\n    });\n\n    // Nome do arquivo: Entrevistador - Entrevistado.pdf\n    const filename = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`;\n\n    // Salvar o PDF com o nome correto\n    doc.save(filename);\n  };\n\n  // Função para gerar o arquivo ZIP com o PDF e documentos\n  const generateZip = surveyData => {\n    const zip = new JSZip();\n\n    // Criar uma subpasta para a entrevista\n    const folderName = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}`;\n    const folder = zip.folder(folderName);\n\n    // Adicionar o PDF à pasta\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text('Informações da Entrevista', 14, 20);\n    let yPosition = 30;\n    doc.setFontSize(12);\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n    surveyData.surveyDetails.forEach((question, index) => {\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\n      yPosition += 20;\n    });\n    const pdfBlob = doc.output('blob');\n    folder.file(`${folderName}.pdf`, pdfBlob);\n\n    // Adicionar documentos de cada questão na subpasta\n    surveyData.surveyDetails.forEach((question, index) => {\n      var _question$Documentaca;\n      if ((_question$Documentaca = question.Documentacao) !== null && _question$Documentaca !== void 0 && _question$Documentaca.trim()) {\n        const docs = question.Documentacao.split(',');\n        const questionFolder = folder.folder(`Pergunta ${index + 1}`);\n        docs.forEach(fileName => {\n          const fileUrl = `http://localhost:4000/uploads/${fileName.trim()}`;\n          axios.get(fileUrl, {\n            responseType: 'blob'\n          }).then(response => {\n            questionFolder.file(fileName.trim(), response.data);\n          });\n        });\n      }\n    });\n\n    // Criar o arquivo ZIP\n    zip.generateAsync({\n      type: 'blob'\n    }).then(content => {\n      const link = document.createElement('a');\n      link.href = URL.createObjectURL(content);\n      link.download = `${folderName}.zip`;\n      link.click();\n    });\n  };\n\n  // Determina os índices para cortar as entrevistas para a página atual\n  const indexOfLastSurvey = currentPage * surveysPerPage;\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\n\n  // Funções de navegação de página\n  const nextPage = () => {\n    if (currentPage * surveysPerPage < surveys.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-home\",\n        onClick: () => navigate('/'),\n        children: \"Voltar para P\\xE1gina Inicial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Entrevistas Realizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), currentSurveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-header\",\n        onClick: () => toggleSurveyExpansion(survey.entrevista_id),\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Entrevistador:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadorName || 'Sem nome do entrevistador', \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Entrevistado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadoName || 'Sem nome do entrevistado']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => generateZip(survey),\n          children: [/*#__PURE__*/_jsxDEV(FaDownload, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), \" Baixar PDF e Documentos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: expandedSurveyId === survey.id_entrevista ? 'block' : 'none',\n          marginBottom: '10px'\n        },\n        children: survey.surveyDetails.map((question, index) => {\n          var _question$Documentaca2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleQuestionExpansion(survey.id_entrevista, index),\n              children: expandedQuestions[`${survey.id_entrevista}-${index}`] ? 'Esconder Resposta' : 'Mostrar Resposta'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: expandedQuestions[`${survey.id_entrevista}-${index}`] ? 'block' : 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Pergunta:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 22\n                }, this), \" \", question.Pergunta]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Resposta:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 22\n                }, this), \" \", question.Resposta || 'Sem resposta']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Coment\\xE1rios:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 22\n                }, this), \" \", question.Comentarios || 'Sem comentários']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this), ((_question$Documentaca2 = question.Documentacao) === null || _question$Documentaca2 === void 0 ? void 0 : _question$Documentaca2.trim()) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Documentos:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: question.Documentacao.split(',').map((file, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => downloadFile(file.trim()),\n                      children: [\"Baixar \", file.trim()]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 29\n                    }, this)\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 27\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, survey.id_entrevista, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        style: {\n          padding: '10px 20px',\n          marginRight: '10px',\n          cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\n          backgroundColor: '#f1f1f1',\n          border: '1px solid #007bff',\n          borderRadius: '5px'\n        },\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          margin: '0 10px'\n        },\n        children: [\"P\\xE1gina \", currentPage, \" de \", Math.ceil(surveys.length / surveysPerPage)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage * surveysPerPage >= surveys.length,\n        style: {\n          padding: '10px 20px',\n          cursor: currentPage * surveysPerPage >= surveys.length ? 'not-allowed' : 'pointer',\n          backgroundColor: '#f1f1f1',\n          border: '1px solid #007bff',\n          borderRadius: '5px'\n        },\n        children: \"Pr\\xF3ximo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSurveys, \"k4xM5Xf2jUksJFxbAvxz2/2CBHY=\", false, function () {\n  return [useNavigate];\n});\n_c = AllSurveys;\nexport default AllSurveys;\nvar _c;\n$RefreshReg$(_c, \"AllSurveys\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsPDF","FaDownload","JSZip","jsxDEV","_jsxDEV","AllSurveys","_s","navigate","surveys","setSurveys","expandedSurveyId","setExpandedSurveyId","expandedQuestions","setExpandedQuestions","currentPage","setCurrentPage","surveysPerPage","get","then","response","data","catch","error","console","toggleSurveyExpansion","id","prevId","toggleQuestionExpansion","surveyId","index","questionKey","prevExpandedQuestions","downloadFile","fileName","fileUrl","link","document","createElement","href","download","click","generatePDF","surveyData","doc","setFontSize","text","yPosition","entrevistadorName","entrevistadoName","surveyDetails","forEach","question","Pergunta","Resposta","Comentarios","filename","save","generateZip","zip","folderName","folder","pdfBlob","output","file","_question$Documentaca","Documentacao","trim","docs","split","questionFolder","responseType","generateAsync","type","content","URL","createObjectURL","indexOfLastSurvey","indexOfFirstSurvey","currentSurveys","slice","nextPage","length","prevPage","children","style","textAlign","marginBottom","className","onClick","_jsxFileName","lineNumber","columnNumber","map","survey","entrevista_id","display","justifyContent","alignItems","id_entrevista","_question$Documentaca2","idx","marginTop","disabled","padding","marginRight","cursor","backgroundColor","border","borderRadius","margin","Math","ceil","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/AllSurveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Importa o hook para navegação\r\nimport axios from 'axios';\r\nimport { jsPDF } from 'jspdf'; // Importando jsPDF para criar o PDF\r\nimport { FaDownload } from 'react-icons/fa'; // Importando o ícone de download do react-icons\r\nimport JSZip from 'jszip'; // Importando JSZip\r\nimport './AllSurveys.css';\r\n\r\nconst AllSurveys = () => {\r\n  const navigate = useNavigate(); // Hook para redirecionamento\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null); // Controla qual título está expandido\r\n  const [expandedQuestions, setExpandedQuestions] = useState({}); // Controla as perguntas expandidas por entrevista\r\n  const [currentPage, setCurrentPage] = useState(1); // Página atual\r\n  const [surveysPerPage] = useState(20); // Número de entrevistas por página\r\n\r\n  // Carregar os dados da API\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:4000/api/surveys')\r\n      .then((response) => setSurveys(response.data))\r\n      .catch((error) => console.error('Erro ao obter as entrevistas:', error));\r\n  }, []);\r\n\r\n  // Alternar expansão de um título específico\r\n  const toggleSurveyExpansion = (id) => {\r\n    setExpandedSurveyId((prevId) => (prevId === id ? null : id)); // Se já estiver expandido, recolhe, senão expande\r\n  };\r\n\r\n  // Alternar expansão de uma pergunta específica dentro de uma entrevista\r\n  const toggleQuestionExpansion = (surveyId, index) => {\r\n    const questionKey = `${surveyId}-${index}`; // Gerar uma chave única para cada pergunta (combinando surveyId e index)\r\n    setExpandedQuestions((prevExpandedQuestions) => ({\r\n      ...prevExpandedQuestions,\r\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true, // Expande ou recolhe\r\n    }));\r\n  };\r\n\r\n  // Função para baixar os documentos de uma pergunta\r\n  const downloadFile = (fileName) => {\r\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\r\n    const link = document.createElement('a');\r\n    link.href = fileUrl;\r\n    link.download = fileName;\r\n    link.click();\r\n  };\r\n\r\n  // Função para gerar o PDF\r\n  const generatePDF = (surveyData) => {\r\n    const doc = new jsPDF();\r\n\r\n    // Título do PDF\r\n    doc.setFontSize(18);\r\n    doc.text('Informações da Entrevista', 14, 20);\r\n\r\n    let yPosition = 30;\r\n\r\n    // Informações do entrevistador\r\n    doc.setFontSize(12);\r\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n\r\n    // Informações do entrevistado\r\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n\r\n    // Adicionar perguntas e respostas\r\n    surveyData.surveyDetails.forEach((question, index) => {\r\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\r\n      yPosition += 20; // Espaço entre perguntas\r\n    });\r\n\r\n    // Nome do arquivo: Entrevistador - Entrevistado.pdf\r\n    const filename = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`;\r\n\r\n    // Salvar o PDF com o nome correto\r\n    doc.save(filename);\r\n  };\r\n\r\n  // Função para gerar o arquivo ZIP com o PDF e documentos\r\n  const generateZip = (surveyData) => {\r\n    const zip = new JSZip();\r\n\r\n    // Criar uma subpasta para a entrevista\r\n    const folderName = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}`;\r\n    const folder = zip.folder(folderName);\r\n\r\n    // Adicionar o PDF à pasta\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(18);\r\n    doc.text('Informações da Entrevista', 14, 20);\r\n\r\n    let yPosition = 30;\r\n    doc.setFontSize(12);\r\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n    surveyData.surveyDetails.forEach((question, index) => {\r\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\r\n      yPosition += 20;\r\n    });\r\n\r\n    const pdfBlob = doc.output('blob');\r\n    folder.file(`${folderName}.pdf`, pdfBlob);\r\n\r\n    // Adicionar documentos de cada questão na subpasta\r\n    surveyData.surveyDetails.forEach((question, index) => {\r\n      if (question.Documentacao?.trim()) {\r\n        const docs = question.Documentacao.split(',');\r\n        const questionFolder = folder.folder(`Pergunta ${index + 1}`);\r\n        docs.forEach((fileName) => {\r\n          const fileUrl = `http://localhost:4000/uploads/${fileName.trim()}`;\r\n          axios.get(fileUrl, { responseType: 'blob' }).then((response) => {\r\n            questionFolder.file(fileName.trim(), response.data);\r\n          });\r\n        });\r\n      }\r\n    });\r\n\r\n    // Criar o arquivo ZIP\r\n    zip.generateAsync({ type: 'blob' }).then((content) => {\r\n      const link = document.createElement('a');\r\n      link.href = URL.createObjectURL(content);\r\n      link.download = `${folderName}.zip`;\r\n      link.click();\r\n    });\r\n  };\r\n\r\n  // Determina os índices para cortar as entrevistas para a página atual\r\n  const indexOfLastSurvey = currentPage * surveysPerPage;\r\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\r\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\r\n\r\n  // Funções de navegação de página\r\n  const nextPage = () => {\r\n    if (currentPage * surveysPerPage < surveys.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <button className='back-home' onClick={() => navigate('/')}>\r\n          Voltar para Página Inicial\r\n        </button>\r\n      </div>\r\n\r\n      <h1>Entrevistas Realizadas</h1>\r\n\r\n      {/* Exibir as entrevistas da página atual */}\r\n      {currentSurveys.map((survey) => (\r\n        <div key={survey.id_entrevista} className=\"survey\">\r\n          <div\r\n            className=\"survey-header\"\r\n            onClick={() => toggleSurveyExpansion(survey.entrevista_id)}\r\n            style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\r\n          >\r\n            <h2>\r\n              <strong>Entrevistador:</strong> {survey.entrevistadorName || 'Sem nome do entrevistador'} |\r\n              <strong> Entrevistado:</strong> {survey.entrevistadoName || 'Sem nome do entrevistado'}\r\n            </h2>\r\n\r\n            <button onClick={() => generateZip(survey)}>\r\n              <FaDownload /> Baixar PDF e Documentos\r\n            </button>\r\n          </div>\r\n\r\n          <div\r\n            style={{\r\n              display: expandedSurveyId === survey.id_entrevista ? 'block' : 'none',\r\n              marginBottom: '10px',\r\n            }}\r\n          >\r\n            {survey.surveyDetails.map((question, index) => (\r\n              <div key={index} style={{ marginBottom: '10px' }}>\r\n                <button onClick={() => toggleQuestionExpansion(survey.id_entrevista, index)}>\r\n                  {expandedQuestions[`${survey.id_entrevista}-${index}`] ? 'Esconder Resposta' : 'Mostrar Resposta'}\r\n                </button>\r\n\r\n                <div style={{ display: expandedQuestions[`${survey.id_entrevista}-${index}`] ? 'block' : 'none' }}>\r\n                  <p><strong>Pergunta:</strong> {question.Pergunta}</p>\r\n                  <p><strong>Resposta:</strong> {question.Resposta || 'Sem resposta'}</p>\r\n                  <p><strong>Comentários:</strong> {question.Comentarios || 'Sem comentários'}</p>\r\n\r\n                  {question.Documentacao?.trim() && (\r\n                    <div>\r\n                      <strong>Documentos:</strong>\r\n                      <ul>\r\n                        {question.Documentacao.split(',').map((file, idx) => (\r\n                          <li key={idx}>\r\n                            <button onClick={() => downloadFile(file.trim())}>\r\n                              Baixar {file.trim()}\r\n                            </button>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {/* Navegação de páginas */}\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <button\r\n          onClick={prevPage}\r\n          disabled={currentPage === 1}\r\n          style={{\r\n            padding: '10px 20px',\r\n            marginRight: '10px',\r\n            cursor: currentPage === 1 ? 'not-allowed' : 'pointer',\r\n            backgroundColor: '#f1f1f1',\r\n            border: '1px solid #007bff',\r\n            borderRadius: '5px',\r\n          }}\r\n        >\r\n          Anterior\r\n        </button>\r\n        <span style={{ margin: '0 10px' }}>\r\n          Página {currentPage} de {Math.ceil(surveys.length / surveysPerPage)}\r\n        </span>\r\n        <button\r\n          onClick={nextPage}\r\n          disabled={currentPage * surveysPerPage >= surveys.length}\r\n          style={{\r\n            padding: '10px 20px',\r\n            cursor: currentPage * surveysPerPage >= surveys.length ? 'not-allowed' : 'pointer',\r\n            backgroundColor: '#f1f1f1',\r\n            border: '1px solid #007bff',\r\n            borderRadius: '5px',\r\n          }}\r\n        >\r\n          Próximo\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSurveys;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}