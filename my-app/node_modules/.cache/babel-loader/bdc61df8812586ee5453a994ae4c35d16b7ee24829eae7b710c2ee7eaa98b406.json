{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\Survey.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport './Survey.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Survey = () => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const {\n    selectedQuestions,\n    userInfo,\n    interviewerInfo\n  } = location.state || {\n    selectedQuestions: [],\n    userInfo: {},\n    interviewerInfo: {}\n  };\n  console.log('Perguntas recebidas:', selectedQuestions); // Log para depuração\n\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\n  const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\n  const [files, setFiles] = useState([]);\n  const handleNextQuestion = () => {\n    if (responses[currentQuestionIndex] === '') {\n      alert('Por favor, forneça uma resposta antes de continuar.'); // Alerta para o usuário\n      return; // Não avança se a resposta estiver vazia\n    }\n    if (currentQuestionIndex === selectedQuestions.length - 1) {\n      handleSubmit();\n    } else {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    }\n  };\n  const handlePreviousQuestion = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prevIndex => prevIndex - 1);\n    }\n  };\n  const handleOptionSelect = option => {\n    setResponses(prevResponses => {\n      const updatedResponses = [...prevResponses];\n      updatedResponses[currentQuestionIndex] = option;\n      return updatedResponses;\n    });\n  };\n  const handleFileChange = e => {\n    const selectedFiles = Array.from(e.target.files);\n    setFiles(prevFiles => [...prevFiles, ...selectedFiles]); // Adiciona os novos arquivos\n  };\n  const handleRemoveFile = fileName => {\n    setFiles(prevFiles => prevFiles.filter(file => file.name !== fileName)); // Remove o arquivo\n  };\n  const handleSubmit = () => {\n    const now = new Date();\n    const submissionData = {\n      user: userInfo,\n      responses: responses.map((resp, index) => ({\n        Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\n        Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\n        Indice_Pergunta: selectedQuestions[index].id,\n        Ambito: selectedQuestions[index].âmbito,\n        Pergunta: selectedQuestions[index].pergunta,\n        Resposta: responses[index],\n        Comentarios: comments[index]\n      })),\n      files: files // Adiciona os arquivos ao envio\n    };\n    console.log('Dados a serem enviados:', submissionData);\n\n    // Enviar os dados para o backend\n    fetch('http://localhost:4000/api/survey', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(submissionData)\n    }).then(response => {\n      if (!response.ok) {\n        return response.text().then(text => {\n          throw new Error(`Erro ${response.status}: ${text}`);\n        });\n      }\n      return response.json();\n    }).then(data => {\n      console.log('Dados enviados com sucesso:', data);\n      navigate('/survey-summary', {\n        state: {\n          selectedQuestions,\n          responses,\n          comments\n        }\n      });\n    }).catch(error => {\n      console.error('Erro ao enviar os dados:', error);\n      alert(`Houve um erro ao enviar os dados: ${error.message}`);\n    });\n  };\n  if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\n    return null; // Ou alguma mensagem de erro\n  }\n  const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\n  const totalQuestions = selectedQuestions.length; // Total de perguntas\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Pergunta \", currentQuestionIndex + 1, \" de \", totalQuestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"pergunta-text\",\n      children: selectedQuestions[currentQuestionIndex].pergunta\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"additional-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Informa\\xE7\\xF5es Adicionais:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Normas Aplic\\xE1veis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xCDndice da Pergunta:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xC2mbito:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), \" \", selectedQuestions[currentQuestionIndex].âmbito || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"option-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Sim'),\n        children: \"Sim\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`,\n        onClick: () => handleOptionSelect('Não'),\n        children: \"N\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"\",\n      className: \"response-input\",\n      value: responses[currentQuestionIndex],\n      onChange: e => setResponses(prevResponses => {\n        const updatedResponses = [...prevResponses];\n        updatedResponses[currentQuestionIndex] = e.target.value;\n        return updatedResponses;\n      }),\n      placeholder: \"A sua resposta...\",\n      rows: \"4\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Coment\\xE1rios:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      minLength: \"5\",\n      maxLength: \"40\",\n      className: \"comment-input\",\n      value: comments[currentQuestionIndex],\n      onChange: e => setComments(prevComments => {\n        const updatedComments = [...prevComments];\n        updatedComments[currentQuestionIndex] = e.target.value;\n        return updatedComments;\n      }),\n      placeholder: \"O seu coment\\xE1rio...\",\n      rows: \"3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"file-upload-btn\",\n        children: \"Carregar Arquivos (Excel, Word, Imagens, etc.)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"file-upload\",\n        multiple: true,\n        accept: \".xlsx, .xls, .docx, .doc, .jpg, .jpeg, .png, .pdf\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }, this), files.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Arquivos Adicionados:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files.map((file, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [file.name, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleRemoveFile(file.name),\n            className: \"remove-file-btn\",\n            children: \"Remover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [currentQuestionIndex > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: handlePreviousQuestion,\n        disabled: currentQuestionIndex === 0,\n        children: \"Voltar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        onClick: handleNextQuestion,\n        children: currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n_s(Survey, \"YmiEFQISBP+NqE8/70GmO1/xW08=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Survey;\nexport default Survey;\nvar _c;\n$RefreshReg$(_c, \"Survey\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","jsxDEV","_jsxDEV","Survey","_s","location","navigate","selectedQuestions","userInfo","interviewerInfo","state","console","log","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","Array","length","fill","comments","setComments","files","setFiles","handleNextQuestion","alert","handleSubmit","prevIndex","handlePreviousQuestion","handleOptionSelect","option","prevResponses","updatedResponses","handleFileChange","e","selectedFiles","from","target","prevFiles","handleRemoveFile","fileName","filter","file","name","now","Date","submissionData","user","map","resp","index","Data","getDate","toString","padStart","getMonth","getFullYear","getHours","getMinutes","Normas_aplicaveis","normasAplicaveis","Indice_Pergunta","id","Ambito","âmbito","Pergunta","pergunta","Resposta","Comentarios","fetch","method","headers","body","JSON","stringify","then","response","ok","text","Error","status","json","data","catch","error","message","currentQuestionId","totalQuestions","children","_jsxFileName","lineNumber","columnNumber","className","onClick","minLength","maxLength","value","onChange","placeholder","rows","required","prevComments","updatedComments","htmlFor","type","multiple","accept","disabled","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/Survey.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\nimport './Survey.css';\r\n\r\nconst Survey = () => {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const { selectedQuestions, userInfo, interviewerInfo } = location.state || { selectedQuestions: [], userInfo: {}, interviewerInfo: {} };\r\n\r\n    console.log('Perguntas recebidas:', selectedQuestions); // Log para depuração\r\n\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [responses, setResponses] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [comments, setComments] = useState(Array(selectedQuestions.length).fill(''));\r\n    const [files, setFiles] = useState([]);\r\n\r\n    const handleNextQuestion = () => {\r\n        if (responses[currentQuestionIndex] === '') {\r\n            alert('Por favor, forneça uma resposta antes de continuar.'); // Alerta para o usuário\r\n            return; // Não avança se a resposta estiver vazia\r\n        }\r\n\r\n        if (currentQuestionIndex === selectedQuestions.length - 1) {\r\n            handleSubmit();\r\n        } else {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        }\r\n    };\r\n\r\n    const handlePreviousQuestion = () => {\r\n        if (currentQuestionIndex > 0) {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex - 1);\r\n        }\r\n    };\r\n\r\n    const handleOptionSelect = (option) => {\r\n        setResponses((prevResponses) => {\r\n            const updatedResponses = [...prevResponses];\r\n            updatedResponses[currentQuestionIndex] = option;\r\n            return updatedResponses;\r\n        });\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        const selectedFiles = Array.from(e.target.files);\r\n        setFiles((prevFiles) => [...prevFiles, ...selectedFiles]); // Adiciona os novos arquivos\r\n    };\r\n\r\n    const handleRemoveFile = (fileName) => {\r\n        setFiles((prevFiles) => prevFiles.filter((file) => file.name !== fileName)); // Remove o arquivo\r\n    };\r\n\r\n    const handleSubmit = () => {\r\n        const now = new Date();\r\n        const submissionData = {\r\n            user: userInfo,\r\n            responses: responses.map((resp, index) => ({\r\n                Data: `${now.getDate().toString().padStart(2, '0')}/${(now.getMonth() + 1).toString().padStart(2, '0')}/${now.getFullYear()} ${now.getHours().toString().padStart(2, '0')}:${now.getMinutes().toString().padStart(2, '0')}`,\r\n                Normas_aplicaveis: selectedQuestions[index].normasAplicaveis,\r\n                Indice_Pergunta: selectedQuestions[index].id,\r\n                Ambito: selectedQuestions[index].âmbito,\r\n                Pergunta: selectedQuestions[index].pergunta,\r\n                Resposta: responses[index],\r\n                Comentarios: comments[index]\r\n            })),\r\n            files: files // Adiciona os arquivos ao envio\r\n        };\r\n\r\n        console.log('Dados a serem enviados:', submissionData);\r\n\r\n        // Enviar os dados para o backend\r\n        fetch('http://localhost:4000/api/survey', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(submissionData),\r\n        })\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.text().then(text => {\r\n                    throw new Error(`Erro ${response.status}: ${text}`);\r\n                });\r\n            }\r\n            return response.json();\r\n        })\r\n        .then((data) => {\r\n            console.log('Dados enviados com sucesso:', data);\r\n            navigate('/survey-summary', { state: { selectedQuestions, responses, comments } });\r\n        })\r\n        .catch((error) => {\r\n            console.error('Erro ao enviar os dados:', error);\r\n            alert(`Houve um erro ao enviar os dados: ${error.message}`);\r\n        });\r\n    };\r\n\r\n    if (currentQuestionIndex >= selectedQuestions.length || currentQuestionIndex < 0) {\r\n        return null; // Ou alguma mensagem de erro\r\n    }\r\n\r\n    const currentQuestionId = selectedQuestions[currentQuestionIndex].id;\r\n    const totalQuestions = selectedQuestions.length; // Total de perguntas\r\n\r\n    return (\r\n        <div>\r\n            <h2>Pergunta {currentQuestionIndex + 1} de {totalQuestions}</h2>\r\n            <h3 className='pergunta-text'>{selectedQuestions[currentQuestionIndex].pergunta}</h3>\r\n\r\n            {/* Informações Adicionais acima da Resposta */}\r\n            <div className=\"additional-info\">\r\n                <h4>Informações Adicionais:</h4>\r\n                <ul>\r\n                    <li><strong>Normas Aplicáveis:</strong> {selectedQuestions[currentQuestionIndex].normasAplicaveis || 'N/A'}</li>\r\n                    <li><strong>Índice da Pergunta:</strong> {selectedQuestions[currentQuestionIndex].id}</li>\r\n                    <li><strong>Âmbito:</strong> {selectedQuestions[currentQuestionIndex].âmbito || 'N/A'}</li>\r\n                </ul>\r\n            </div>\r\n\r\n            <div className=\"option-buttons\">\r\n                <button\r\n                    className={`small-button ${responses[currentQuestionIndex] === 'Sim' ? 'selected' : ''}`}\r\n                    onClick={() => handleOptionSelect('Sim')}\r\n                >\r\n                    Sim\r\n                </button>\r\n                <button\r\n                    className={`small-button ${responses[currentQuestionIndex] === 'Não' ? 'selected' : ''}`}\r\n                    onClick={() => handleOptionSelect('Não')}\r\n                >\r\n                    Não\r\n                </button>\r\n            </div>\r\n            <textarea\r\n                minLength='5'\r\n                maxLength=''\r\n                className=\"response-input\"\r\n                value={responses[currentQuestionIndex]}\r\n                onChange={(e) =>\r\n                    setResponses((prevResponses) => {\r\n                        const updatedResponses = [...prevResponses];\r\n                        updatedResponses[currentQuestionIndex] = e.target.value;\r\n                        return updatedResponses;\r\n                    })\r\n                }\r\n                placeholder=\"A sua resposta...\"\r\n                rows=\"4\"\r\n                required\r\n            />\r\n\r\n            <h3>Comentários:</h3>\r\n            <textarea\r\n                minLength='5'\r\n                maxLength='40'\r\n                className=\"comment-input\"\r\n                value={comments[currentQuestionIndex]}\r\n                onChange={(e) =>\r\n                    setComments((prevComments) => {\r\n                        const updatedComments = [...prevComments];\r\n                        updatedComments[currentQuestionIndex] = e.target.value;\r\n                        return updatedComments;\r\n                    })\r\n                }\r\n                placeholder=\"O seu comentário...\"\r\n                rows=\"3\"\r\n            />\r\n\r\n            {/* Upload de Arquivos */}\r\n            <div className=\"file-upload\">\r\n                <label htmlFor=\"file-upload\" className=\"file-upload-btn\">\r\n                    Carregar Arquivos (Excel, Word, Imagens, etc.)\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"file-upload\"\r\n                    multiple\r\n                    accept=\".xlsx, .xls, .docx, .doc, .jpg, .jpeg, .png, .pdf\"\r\n                    onChange={handleFileChange}\r\n                />\r\n            </div>\r\n\r\n            {/* Lista de arquivos adicionados */}\r\n            {files.length > 0 && (\r\n                <div className=\"file-list\">\r\n                    <h4>Arquivos Adicionados:</h4>\r\n                    <ul>\r\n                        {files.map((file, index) => (\r\n                            <li key={index}>\r\n                                {file.name} \r\n                                <button \r\n                                    onClick={() => handleRemoveFile(file.name)} \r\n                                    className=\"remove-file-btn\"\r\n                                >\r\n                                    Remover\r\n                                </button>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"button-container\">\r\n                {currentQuestionIndex > 0 && (\r\n                    <button className='back-button' onClick={handlePreviousQuestion} disabled={currentQuestionIndex === 0}>\r\n                        Voltar\r\n                    </button>\r\n                )}\r\n                <button className='submit-button' type='submit' onClick={handleNextQuestion}>\r\n                    {currentQuestionIndex < selectedQuestions.length - 1 ? 'Próxima Pergunta' : 'Enviar Formulário'}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Survey;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEO,iBAAiB;IAAEC,QAAQ;IAAEC;EAAgB,CAAC,GAAGJ,QAAQ,CAACK,KAAK,IAAI;IAAEH,iBAAiB,EAAE,EAAE;IAAEC,QAAQ,EAAE,CAAC,CAAC;IAAEC,eAAe,EAAE,CAAC;EAAE,CAAC;EAEvIE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEL,iBAAiB,CAAC,CAAC,CAAC;;EAExD,MAAM,CAACM,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACnE,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAACmB,KAAK,CAACV,iBAAiB,CAACW,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EACpF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGvB,QAAQ,CAACmB,KAAK,CAACV,iBAAiB,CAACW,MAAM,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAClF,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM0B,kBAAkB,GAAGA,CAAA,KAAM;IAC7B,IAAIT,SAAS,CAACF,oBAAoB,CAAC,KAAK,EAAE,EAAE;MACxCY,KAAK,CAAC,qDAAqD,CAAC,CAAC,CAAC;MAC9D,OAAO,CAAC;IACZ;IAEA,IAAIZ,oBAAoB,KAAKN,iBAAiB,CAACW,MAAM,GAAG,CAAC,EAAE;MACvDQ,YAAY,CAAC,CAAC;IAClB,CAAC,MAAM;MACHZ,uBAAuB,CAAEa,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACzD;EACJ,CAAC;EAED,MAAMC,sBAAsB,GAAGA,CAAA,KAAM;IACjC,IAAIf,oBAAoB,GAAG,CAAC,EAAE;MAC1BC,uBAAuB,CAAEa,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;IACzD;EACJ,CAAC;EAED,MAAME,kBAAkB,GAAIC,MAAM,IAAK;IACnCd,YAAY,CAAEe,aAAa,IAAK;MAC5B,MAAMC,gBAAgB,GAAG,CAAC,GAAGD,aAAa,CAAC;MAC3CC,gBAAgB,CAACnB,oBAAoB,CAAC,GAAGiB,MAAM;MAC/C,OAAOE,gBAAgB;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,aAAa,GAAGlB,KAAK,CAACmB,IAAI,CAACF,CAAC,CAACG,MAAM,CAACf,KAAK,CAAC;IAChDC,QAAQ,CAAEe,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAE,GAAGH,aAAa,CAAC,CAAC,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMI,gBAAgB,GAAIC,QAAQ,IAAK;IACnCjB,QAAQ,CAAEe,SAAS,IAAKA,SAAS,CAACG,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKH,QAAQ,CAAC,CAAC,CAAC,CAAC;EACjF,CAAC;EAED,MAAMd,YAAY,GAAGA,CAAA,KAAM;IACvB,MAAMkB,GAAG,GAAG,IAAIC,IAAI,CAAC,CAAC;IACtB,MAAMC,cAAc,GAAG;MACnBC,IAAI,EAAEvC,QAAQ;MACdO,SAAS,EAAEA,SAAS,CAACiC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;QACvCC,IAAI,EAAE,GAAGP,GAAG,CAACQ,OAAO,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAI,CAACV,GAAG,CAACW,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAEF,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIV,GAAG,CAACY,WAAW,CAAC,CAAC,IAAIZ,GAAG,CAACa,QAAQ,CAAC,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,IAAIV,GAAG,CAACc,UAAU,CAAC,CAAC,CAACL,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE;QAC3NK,iBAAiB,EAAEpD,iBAAiB,CAAC2C,KAAK,CAAC,CAACU,gBAAgB;QAC5DC,eAAe,EAAEtD,iBAAiB,CAAC2C,KAAK,CAAC,CAACY,EAAE;QAC5CC,MAAM,EAAExD,iBAAiB,CAAC2C,KAAK,CAAC,CAACc,MAAM;QACvCC,QAAQ,EAAE1D,iBAAiB,CAAC2C,KAAK,CAAC,CAACgB,QAAQ;QAC3CC,QAAQ,EAAEpD,SAAS,CAACmC,KAAK,CAAC;QAC1BkB,WAAW,EAAEhD,QAAQ,CAAC8B,KAAK;MAC/B,CAAC,CAAC,CAAC;MACH5B,KAAK,EAAEA,KAAK,CAAC;IACjB,CAAC;IAEDX,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEkC,cAAc,CAAC;;IAEtD;IACAuB,KAAK,CAAC,kCAAkC,EAAE;MACtCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC5B,cAAc;IACvC,CAAC,CAAC,CACD6B,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,OAAOD,QAAQ,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAACG,IAAI,IAAI;UAChC,MAAM,IAAIC,KAAK,CAAC,QAAQH,QAAQ,CAACI,MAAM,KAAKF,IAAI,EAAE,CAAC;QACvD,CAAC,CAAC;MACN;MACA,OAAOF,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDN,IAAI,CAAEO,IAAI,IAAK;MACZvE,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEsE,IAAI,CAAC;MAChD5E,QAAQ,CAAC,iBAAiB,EAAE;QAAEI,KAAK,EAAE;UAAEH,iBAAiB;UAAEQ,SAAS;UAAEK;QAAS;MAAE,CAAC,CAAC;IACtF,CAAC,CAAC,CACD+D,KAAK,CAAEC,KAAK,IAAK;MACdzE,OAAO,CAACyE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD3D,KAAK,CAAC,qCAAqC2D,KAAK,CAACC,OAAO,EAAE,CAAC;IAC/D,CAAC,CAAC;EACN,CAAC;EAED,IAAIxE,oBAAoB,IAAIN,iBAAiB,CAACW,MAAM,IAAIL,oBAAoB,GAAG,CAAC,EAAE;IAC9E,OAAO,IAAI,CAAC,CAAC;EACjB;EAEA,MAAMyE,iBAAiB,GAAG/E,iBAAiB,CAACM,oBAAoB,CAAC,CAACiD,EAAE;EACpE,MAAMyB,cAAc,GAAGhF,iBAAiB,CAACW,MAAM,CAAC,CAAC;;EAEjD,oBACIhB,OAAA;IAAAsF,QAAA,gBACItF,OAAA;MAAAsF,QAAA,GAAI,WAAS,EAAC3E,oBAAoB,GAAG,CAAC,EAAC,MAAI,EAAC0E,cAAc;IAAA;MAAA/C,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAChEzF,OAAA;MAAI0F,SAAS,EAAC,eAAe;MAAAJ,QAAA,EAAEjF,iBAAiB,CAACM,oBAAoB,CAAC,CAACqD;IAAQ;MAAA1B,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAGrFzF,OAAA;MAAK0F,SAAS,EAAC,iBAAiB;MAAAJ,QAAA,gBAC5BtF,OAAA;QAAAsF,QAAA,EAAI;MAAuB;QAAAhD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChCzF,OAAA;QAAAsF,QAAA,gBACItF,OAAA;UAAAsF,QAAA,gBAAItF,OAAA;YAAAsF,QAAA,EAAQ;UAAkB;YAAAhD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACpF,iBAAiB,CAACM,oBAAoB,CAAC,CAAC+C,gBAAgB,IAAI,KAAK;QAAA;UAAApB,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAChHzF,OAAA;UAAAsF,QAAA,gBAAItF,OAAA;YAAAsF,QAAA,EAAQ;UAAmB;YAAAhD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACpF,iBAAiB,CAACM,oBAAoB,CAAC,CAACiD,EAAE;QAAA;UAAAtB,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1FzF,OAAA;UAAAsF,QAAA,gBAAItF,OAAA;YAAAsF,QAAA,EAAQ;UAAO;YAAAhD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACpF,iBAAiB,CAACM,oBAAoB,CAAC,CAACmD,MAAM,IAAI,KAAK;QAAA;UAAAxB,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAnD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3F,CAAC;IAAA;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAENzF,OAAA;MAAK0F,SAAS,EAAC,gBAAgB;MAAAJ,QAAA,gBAC3BtF,OAAA;QACI0F,SAAS,EAAE,gBAAgB7E,SAAS,CAACF,oBAAoB,CAAC,KAAK,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;QACzFgF,OAAO,EAAEA,CAAA,KAAMhE,kBAAkB,CAAC,KAAK,CAAE;QAAA2D,QAAA,EAC5C;MAED;QAAAhD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTzF,OAAA;QACI0F,SAAS,EAAE,gBAAgB7E,SAAS,CAACF,oBAAoB,CAAC,KAAK,KAAK,GAAG,UAAU,GAAG,EAAE,EAAG;QACzFgF,OAAO,EAAEA,CAAA,KAAMhE,kBAAkB,CAAC,KAAK,CAAE;QAAA2D,QAAA,EAC5C;MAED;QAAAhD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eACNzF,OAAA;MACI4F,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,EAAE;MACZH,SAAS,EAAC,gBAAgB;MAC1BI,KAAK,EAAEjF,SAAS,CAACF,oBAAoB,CAAE;MACvCoF,QAAQ,EAAG/D,CAAC,IACRlB,YAAY,CAAEe,aAAa,IAAK;QAC5B,MAAMC,gBAAgB,GAAG,CAAC,GAAGD,aAAa,CAAC;QAC3CC,gBAAgB,CAACnB,oBAAoB,CAAC,GAAGqB,CAAC,CAACG,MAAM,CAAC2D,KAAK;QACvD,OAAOhE,gBAAgB;MAC3B,CAAC,CACJ;MACDkE,WAAW,EAAC,mBAAmB;MAC/BC,IAAI,EAAC,GAAG;MACRC,QAAQ;IAAA;MAAA5D,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAEFzF,OAAA;MAAAsF,QAAA,EAAI;IAAY;MAAAhD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBzF,OAAA;MACI4F,SAAS,EAAC,GAAG;MACbC,SAAS,EAAC,IAAI;MACdH,SAAS,EAAC,eAAe;MACzBI,KAAK,EAAE5E,QAAQ,CAACP,oBAAoB,CAAE;MACtCoF,QAAQ,EAAG/D,CAAC,IACRb,WAAW,CAAEgF,YAAY,IAAK;QAC1B,MAAMC,eAAe,GAAG,CAAC,GAAGD,YAAY,CAAC;QACzCC,eAAe,CAACzF,oBAAoB,CAAC,GAAGqB,CAAC,CAACG,MAAM,CAAC2D,KAAK;QACtD,OAAOM,eAAe;MAC1B,CAAC,CACJ;MACDJ,WAAW,EAAC,wBAAqB;MACjCC,IAAI,EAAC;IAAG;MAAA3D,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eAGFzF,OAAA;MAAK0F,SAAS,EAAC,aAAa;MAAAJ,QAAA,gBACxBtF,OAAA;QAAOqG,OAAO,EAAC,aAAa;QAACX,SAAS,EAAC,iBAAiB;QAAAJ,QAAA,EAAC;MAEzD;QAAAhD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRzF,OAAA;QACIsG,IAAI,EAAC,MAAM;QACX1C,EAAE,EAAC,aAAa;QAChB2C,QAAQ;QACRC,MAAM,EAAC,mDAAmD;QAC1DT,QAAQ,EAAEhE;MAAiB;QAAAO,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAGLrE,KAAK,CAACJ,MAAM,GAAG,CAAC,iBACbhB,OAAA;MAAK0F,SAAS,EAAC,WAAW;MAAAJ,QAAA,gBACtBtF,OAAA;QAAAsF,QAAA,EAAI;MAAqB;QAAAhD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BzF,OAAA;QAAAsF,QAAA,EACKlE,KAAK,CAAC0B,GAAG,CAAC,CAACN,IAAI,EAAEQ,KAAK,kBACnBhD,OAAA;UAAAsF,QAAA,GACK9C,IAAI,CAACC,IAAI,eACVzC,OAAA;YACI2F,OAAO,EAAEA,CAAA,KAAMtD,gBAAgB,CAACG,IAAI,CAACC,IAAI,CAAE;YAC3CiD,SAAS,EAAC,iBAAiB;YAAAJ,QAAA,EAC9B;UAED;YAAAhD,QAAA,EAAAiD,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAPJzC,KAAK;UAAAV,QAAA,EAAAiD,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQV,CACP;MAAC;QAAAnD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACR,eAEDzF,OAAA;MAAK0F,SAAS,EAAC,kBAAkB;MAAAJ,QAAA,GAC5B3E,oBAAoB,GAAG,CAAC,iBACrBX,OAAA;QAAQ0F,SAAS,EAAC,aAAa;QAACC,OAAO,EAAEjE,sBAAuB;QAAC+E,QAAQ,EAAE9F,oBAAoB,KAAK,CAAE;QAAA2E,QAAA,EAAC;MAEvG;QAAAhD,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACX,eACDzF,OAAA;QAAQ0F,SAAS,EAAC,eAAe;QAACY,IAAI,EAAC,QAAQ;QAACX,OAAO,EAAErE,kBAAmB;QAAAgE,QAAA,EACvE3E,oBAAoB,GAAGN,iBAAiB,CAACW,MAAM,GAAG,CAAC,GAAG,kBAAkB,GAAG;MAAmB;QAAAsB,QAAA,EAAAiD,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3F,CAAC;IAAA;MAAAnD,QAAA,EAAAiD,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAnD,QAAA,EAAAiD,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACvF,EAAA,CAhNID,MAAM;EAAA,QACSJ,WAAW,EACXC,WAAW;AAAA;AAAA4G,EAAA,GAF1BzG,MAAM;AAkNZ,eAAeA,MAAM;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}