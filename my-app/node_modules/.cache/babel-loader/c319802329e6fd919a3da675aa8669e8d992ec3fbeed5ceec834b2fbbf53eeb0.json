{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\AllSurveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importa o hook para navegação\nimport axios from 'axios';\nimport { jsPDF } from 'jspdf'; // Importando jsPDF para criar o PDF\nimport { FaDownload } from 'react-icons/fa'; // Importando o ícone de download do react-icons\nimport JSZip from 'jszip'; // Importa JSZip para criar o arquivo ZIP\nimport { saveAs } from 'file-saver'; // Importa o método saveAs para salvar o arquivo ZIP\nimport './AllSurveys.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllSurveys = () => {\n  _s();\n  const navigate = useNavigate(); // Hook para redirecionamento\n  const [surveys, setSurveys] = useState([]);\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null); // Controla qual título está expandido\n  const [expandedQuestions, setExpandedQuestions] = useState({}); // Controla as perguntas expandidas por entrevista\n  const [currentPage, setCurrentPage] = useState(1); // Página atual\n  const [surveysPerPage] = useState(20); // Número de entrevistas por página\n\n  // Carregar os dados da API\n  useEffect(() => {\n    axios.get('http://localhost:4000/api/surveys').then(response => setSurveys(response.data)).catch(error => console.error('Erro ao obter as entrevistas:', error));\n  }, []);\n\n  // Alternar expansão de um título específico\n  const toggleSurveyExpansion = id => {\n    setExpandedSurveyId(prevId => prevId === id ? null : id); // Se já estiver expandido, recolhe, senão expande\n  };\n\n  // Alternar expansão de uma pergunta específica dentro de uma entrevista\n  const toggleQuestionExpansion = (surveyId, index) => {\n    const questionKey = `${surveyId}-${index}`; // Gerar uma chave única para cada pergunta (combinando surveyId e index)\n    setExpandedQuestions(prevExpandedQuestions => ({\n      ...prevExpandedQuestions,\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true // Expande ou recolhe\n    }));\n  };\n  const downloadFile = fileName => {\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\n    const link = document.createElement('a');\n    link.href = fileUrl;\n    link.download = fileName;\n    link.click();\n  };\n\n  // Função para gerar o PDF\n  const generatePDF = surveyData => {\n    const doc = new jsPDF();\n\n    // Título do PDF\n    doc.setFontSize(18);\n    doc.text('Informações da Entrevista', 14, 20);\n    let yPosition = 30;\n\n    // Informações do entrevistador\n    doc.setFontSize(12);\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n\n    // Informações do entrevistado\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n\n    // Adicionar perguntas e respostas\n    surveyData.surveyDetails.forEach((question, index) => {\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\n      yPosition += 20; // Espaço entre perguntas\n    });\n\n    // Nome do arquivo: Entrevistador - Entrevistado.pdf\n    const filename = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`;\n\n    // Salvar o PDF com o nome correto\n    doc.save(filename);\n  };\n\n  // Função para gerar o arquivo ZIP com os PDFs e documentos\n  const generateZip = async surveyData => {\n    const zip = new JSZip();\n    const folder = zip.folder('Entrevistas');\n\n    // Adicionar PDF à pasta ZIP\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text('Informações da Entrevista', 14, 20);\n    let yPosition = 30;\n    doc.setFontSize(12);\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\n    yPosition += 10;\n    surveyData.surveyDetails.forEach((question, index) => {\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\n      yPosition += 10;\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\n      yPosition += 20;\n    });\n    const pdf = doc.output('arraybuffer');\n    folder.file(`${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`, pdf);\n\n    // Adicionar documentos à pasta do ZIP\n    surveyData.surveyDetails.forEach(question => {\n      var _question$Documentaca;\n      if ((_question$Documentaca = question.Documentacao) !== null && _question$Documentaca !== void 0 && _question$Documentaca.trim()) {\n        const files = question.Documentacao.split(',');\n        const questionFolder = folder.folder(`Pergunta_${question.Indice_Pergunta}`);\n        files.forEach(fileName => {\n          const filePath = `http://localhost:4000/uploads/${fileName.trim()}`;\n          // Baixar o arquivo e adicionar ao ZIP\n          axios.get(filePath, {\n            responseType: 'arraybuffer'\n          }).then(response => {\n            questionFolder.file(fileName.trim(), response.data);\n          }).catch(error => console.error(`Erro ao obter o arquivo ${fileName}:`, error));\n        });\n      }\n    });\n\n    // Salvar o ZIP\n    zip.generateAsync({\n      type: 'blob'\n    }).then(content => {\n      saveAs(content, `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.zip`);\n    });\n  };\n\n  // Determina os índices para cortar as entrevistas para a página atual\n  const indexOfLastSurvey = currentPage * surveysPerPage;\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\n\n  // Funções de navegação de página\n  const nextPage = () => {\n    if (currentPage * surveysPerPage < surveys.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-home\",\n        onClick: () => navigate('/'),\n        children: \"Voltar para P\\xE1gina Inicial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Entrevistas Realizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), currentSurveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-header\",\n        onClick: () => toggleSurveyExpansion(survey.entrevista_id),\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Entrevistador:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadorName || 'Sem nome do entrevistador', \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Entrevistado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadoName || 'Sem nome do entrevistado']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => generatePDF(survey),\n          style: {\n            padding: '5px',\n            // Menor tamanho\n            backgroundColor: '#007bff',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '50%',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(FaDownload, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => generateZip(survey),\n          style: {\n            padding: '5px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '50%',\n            cursor: 'pointer',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            marginLeft: '10px'\n          },\n          children: /*#__PURE__*/_jsxDEV(FaDownload, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), expandedSurveyId === survey.entrevista_id && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-body\",\n        children: survey.surveyDetails.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              cursor: 'pointer'\n            },\n            onClick: () => toggleQuestionExpansion(survey.entrevista_id, index),\n            children: [\"Pergunta \", index + 1, \": \", question.Pergunta]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 19\n          }, this), expandedQuestions[`${survey.entrevista_id}-${index}`] && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Resposta:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 26\n              }, this), \" \", question.Resposta]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Coment\\xE1rios:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 26\n              }, this), \" \", question.Comentarios]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 23\n            }, this), question.Documentacao && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Documentos:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 30\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 27\n              }, this), question.Documentacao.split(',').map(fileName => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => downloadFile(fileName.trim()),\n                children: fileName.trim()\n              }, fileName.trim(), false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 29\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }, this)]\n    }, survey.id_entrevista, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"P\\xE1gina Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\" P\\xE1gina \", currentPage, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage * surveysPerPage >= surveys.length,\n        children: \"Pr\\xF3xima P\\xE1gina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSurveys, \"k4xM5Xf2jUksJFxbAvxz2/2CBHY=\", false, function () {\n  return [useNavigate];\n});\n_c = AllSurveys;\nexport default AllSurveys;\nvar _c;\n$RefreshReg$(_c, \"AllSurveys\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsPDF","FaDownload","JSZip","saveAs","jsxDEV","_jsxDEV","AllSurveys","_s","navigate","surveys","setSurveys","expandedSurveyId","setExpandedSurveyId","expandedQuestions","setExpandedQuestions","currentPage","setCurrentPage","surveysPerPage","get","then","response","data","catch","error","console","toggleSurveyExpansion","id","prevId","toggleQuestionExpansion","surveyId","index","questionKey","prevExpandedQuestions","downloadFile","fileName","fileUrl","link","document","createElement","href","download","click","generatePDF","surveyData","doc","setFontSize","text","yPosition","entrevistadorName","entrevistadoName","surveyDetails","forEach","question","Pergunta","Resposta","Comentarios","filename","save","generateZip","zip","folder","pdf","output","file","_question$Documentaca","Documentacao","trim","files","split","questionFolder","Indice_Pergunta","filePath","responseType","generateAsync","type","content","indexOfLastSurvey","indexOfFirstSurvey","currentSurveys","slice","nextPage","length","prevPage","children","style","textAlign","marginBottom","className","onClick","_jsxFileName","lineNumber","columnNumber","map","survey","entrevista_id","display","justifyContent","alignItems","padding","backgroundColor","color","border","borderRadius","cursor","size","marginLeft","id_entrevista","marginTop","disabled","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/AllSurveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // Importa o hook para navegação\r\nimport axios from 'axios';\r\nimport { jsPDF } from 'jspdf'; // Importando jsPDF para criar o PDF\r\nimport { FaDownload } from 'react-icons/fa'; // Importando o ícone de download do react-icons\r\nimport JSZip from 'jszip'; // Importa JSZip para criar o arquivo ZIP\r\nimport { saveAs } from 'file-saver'; // Importa o método saveAs para salvar o arquivo ZIP\r\nimport './AllSurveys.css';\r\n\r\nconst AllSurveys = () => {\r\n  const navigate = useNavigate(); // Hook para redirecionamento\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null); // Controla qual título está expandido\r\n  const [expandedQuestions, setExpandedQuestions] = useState({}); // Controla as perguntas expandidas por entrevista\r\n  const [currentPage, setCurrentPage] = useState(1); // Página atual\r\n  const [surveysPerPage] = useState(20); // Número de entrevistas por página\r\n\r\n  // Carregar os dados da API\r\n  useEffect(() => {\r\n    axios\r\n      .get('http://localhost:4000/api/surveys')\r\n      .then((response) => setSurveys(response.data))\r\n      .catch((error) => console.error('Erro ao obter as entrevistas:', error));\r\n  }, []);\r\n\r\n  // Alternar expansão de um título específico\r\n  const toggleSurveyExpansion = (id) => {\r\n    setExpandedSurveyId((prevId) => (prevId === id ? null : id)); // Se já estiver expandido, recolhe, senão expande\r\n  };\r\n\r\n  // Alternar expansão de uma pergunta específica dentro de uma entrevista\r\n  const toggleQuestionExpansion = (surveyId, index) => {\r\n    const questionKey = `${surveyId}-${index}`; // Gerar uma chave única para cada pergunta (combinando surveyId e index)\r\n    setExpandedQuestions((prevExpandedQuestions) => ({\r\n      ...prevExpandedQuestions,\r\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true, // Expande ou recolhe\r\n    }));\r\n  };\r\n\r\n  const downloadFile = (fileName) => {\r\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\r\n    const link = document.createElement('a');\r\n    link.href = fileUrl;\r\n    link.download = fileName;\r\n    link.click();\r\n  };\r\n\r\n  // Função para gerar o PDF\r\n  const generatePDF = (surveyData) => {\r\n    const doc = new jsPDF();\r\n\r\n    // Título do PDF\r\n    doc.setFontSize(18);\r\n    doc.text('Informações da Entrevista', 14, 20);\r\n\r\n    let yPosition = 30;\r\n\r\n    // Informações do entrevistador\r\n    doc.setFontSize(12);\r\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n\r\n    // Informações do entrevistado\r\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n\r\n    // Adicionar perguntas e respostas\r\n    surveyData.surveyDetails.forEach((question, index) => {\r\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\r\n      yPosition += 20; // Espaço entre perguntas\r\n    });\r\n\r\n    // Nome do arquivo: Entrevistador - Entrevistado.pdf\r\n    const filename = `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`;\r\n\r\n    // Salvar o PDF com o nome correto\r\n    doc.save(filename);\r\n  };\r\n\r\n  // Função para gerar o arquivo ZIP com os PDFs e documentos\r\n  const generateZip = async (surveyData) => {\r\n    const zip = new JSZip();\r\n    const folder = zip.folder('Entrevistas');\r\n\r\n    // Adicionar PDF à pasta ZIP\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(18);\r\n    doc.text('Informações da Entrevista', 14, 20);\r\n\r\n    let yPosition = 30;\r\n    doc.setFontSize(12);\r\n    doc.text(`Entrevistador: ${surveyData.entrevistadorName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n    doc.text(`Entrevistado: ${surveyData.entrevistadoName || 'Não disponível'}`, 14, yPosition);\r\n    yPosition += 10;\r\n\r\n    surveyData.surveyDetails.forEach((question, index) => {\r\n      doc.text(`Pergunta ${index + 1}: ${question.Pergunta}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Resposta: ${question.Resposta || 'Não disponível'}`, 14, yPosition);\r\n      yPosition += 10;\r\n      doc.text(`Comentários: ${question.Comentarios || 'Nenhum comentário'}`, 14, yPosition);\r\n      yPosition += 20;\r\n    });\r\n\r\n    const pdf = doc.output('arraybuffer');\r\n    folder.file(`${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.pdf`, pdf);\r\n\r\n    // Adicionar documentos à pasta do ZIP\r\n    surveyData.surveyDetails.forEach((question) => {\r\n      if (question.Documentacao?.trim()) {\r\n        const files = question.Documentacao.split(',');\r\n        const questionFolder = folder.folder(`Pergunta_${question.Indice_Pergunta}`);\r\n        files.forEach((fileName) => {\r\n          const filePath = `http://localhost:4000/uploads/${fileName.trim()}`;\r\n          // Baixar o arquivo e adicionar ao ZIP\r\n          axios.get(filePath, { responseType: 'arraybuffer' })\r\n            .then((response) => {\r\n              questionFolder.file(fileName.trim(), response.data);\r\n            })\r\n            .catch((error) => console.error(`Erro ao obter o arquivo ${fileName}:`, error));\r\n        });\r\n      }\r\n    });\r\n\r\n    // Salvar o ZIP\r\n    zip.generateAsync({ type: 'blob' })\r\n      .then((content) => {\r\n        saveAs(content, `${surveyData.entrevistadorName} - ${surveyData.entrevistadoName}.zip`);\r\n      });\r\n  };\r\n\r\n  // Determina os índices para cortar as entrevistas para a página atual\r\n  const indexOfLastSurvey = currentPage * surveysPerPage;\r\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\r\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\r\n\r\n  // Funções de navegação de página\r\n  const nextPage = () => {\r\n    if (currentPage * surveysPerPage < surveys.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Botão para redirecionar à página de UserInfo */}\r\n      <div style={{ textAlign: 'center', marginBottom: '20px' }}>\r\n        <button className='back-home'\r\n          onClick={() => navigate('/')}>\r\n          Voltar para Página Inicial\r\n        </button>\r\n      </div>\r\n\r\n      <h1>Entrevistas Realizadas</h1>\r\n\r\n      {/* Exibir as entrevistas da página atual */}\r\n      {currentSurveys.map((survey) => (\r\n        <div key={survey.id_entrevista} className=\"survey\">\r\n          {/* Cabeçalho da entrevista com a data formatada */}\r\n          <div\r\n            className=\"survey-header\"\r\n            onClick={() => toggleSurveyExpansion(survey.entrevista_id)}\r\n            style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}\r\n          >\r\n            <h2>\r\n              <strong>Entrevistador:</strong> {survey.entrevistadorName || 'Sem nome do entrevistador'} |\r\n              <strong> Entrevistado:</strong> {survey.entrevistadoName || 'Sem nome do entrevistado'}\r\n            </h2>\r\n\r\n            {/* Botão de Download com Ícone */}\r\n            <button\r\n              onClick={() => generatePDF(survey)}\r\n              style={{\r\n                padding: '5px', // Menor tamanho\r\n                backgroundColor: '#007bff',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '50%',\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n              }}\r\n            >\r\n              <FaDownload size={16} />\r\n            </button>\r\n\r\n            {/* Botão para gerar e baixar o ZIP */}\r\n            <button\r\n              onClick={() => generateZip(survey)}\r\n              style={{\r\n                padding: '5px',\r\n                backgroundColor: '#28a745',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '50%',\r\n                cursor: 'pointer',\r\n                display: 'flex',\r\n                alignItems: 'center',\r\n                justifyContent: 'center',\r\n                marginLeft: '10px',\r\n              }}\r\n            >\r\n              <FaDownload size={16} />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Exibir as perguntas e respostas */}\r\n          {expandedSurveyId === survey.entrevista_id && (\r\n            <div className=\"survey-body\">\r\n              {survey.surveyDetails.map((question, index) => (\r\n                <div key={index} style={{ marginBottom: '10px' }}>\r\n                  <h3\r\n                    style={{ cursor: 'pointer' }}\r\n                    onClick={() => toggleQuestionExpansion(survey.entrevista_id, index)}\r\n                  >\r\n                    Pergunta {index + 1}: {question.Pergunta}\r\n                  </h3>\r\n                  {expandedQuestions[`${survey.entrevista_id}-${index}`] && (\r\n                    <div>\r\n                      <p><strong>Resposta:</strong> {question.Resposta}</p>\r\n                      <p><strong>Comentários:</strong> {question.Comentarios}</p>\r\n                      {question.Documentacao && (\r\n                        <div>\r\n                          <p><strong>Documentos:</strong></p>\r\n                          {question.Documentacao.split(',').map((fileName) => (\r\n                            <button\r\n                              key={fileName.trim()}\r\n                              onClick={() => downloadFile(fileName.trim())}\r\n                            >\r\n                              {fileName.trim()}\r\n                            </button>\r\n                          ))}\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Navegação de páginas */}\r\n      <div style={{ textAlign: 'center', marginTop: '20px' }}>\r\n        <button onClick={prevPage} disabled={currentPage === 1}>\r\n          Página Anterior\r\n        </button>\r\n        <span> Página {currentPage} </span>\r\n        <button onClick={nextPage} disabled={currentPage * surveysPerPage >= surveys.length}>\r\n          Próxima Página\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSurveys;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}