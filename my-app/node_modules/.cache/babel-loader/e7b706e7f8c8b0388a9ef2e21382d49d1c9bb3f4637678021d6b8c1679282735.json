{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\fteixeira\\\\Documents\\\\Projeto-Questionario\\\\my-app\\\\src\\\\AllSurveys.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './AllSurveys.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AllSurveys = () => {\n  _s();\n  const [surveys, setSurveys] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchCriteria, setSearchCriteria] = useState('entrevistador');\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null);\n  const [expandedQuestions, setExpandedQuestions] = useState({});\n  const [currentPage, setCurrentPage] = useState(1);\n  const [surveysPerPage] = useState(20);\n\n  // Carregar os dados da API\n  useEffect(() => {\n    fetchSurveys(); // Carregar as entrevistas quando o componente for montado\n  }, []);\n\n  // Função para buscar as entrevistas\n  const fetchSurveys = async () => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/surveys');\n      setSurveys(response.data);\n    } catch (error) {\n      console.error('Erro ao obter as entrevistas:', error);\n    }\n  };\n\n  // Função para realizar a pesquisa em tempo real\n  useEffect(() => {\n    if (searchTerm === '') {\n      fetchSurveys(); // Se o campo de pesquisa estiver vazio, carrega todas as entrevistas\n    } else {\n      const timeoutId = setTimeout(() => {\n        searchSurveys(searchTerm, searchCriteria); // Realiza a pesquisa após um pequeno atraso\n      }, 500); // Delay de 500ms para evitar chamadas em excesso\n\n      return () => clearTimeout(timeoutId); // Limpar o timeout se o valor for alterado antes de terminar\n    }\n  }, [searchTerm, searchCriteria]); // Dependendo da alteração no input ou critério de pesquisa\n\n  // Função para pesquisar no banco de dados\n  const searchSurveys = async (term, criteria) => {\n    try {\n      const response = await axios.get('http://localhost:4000/api/search', {\n        params: {\n          searchTerm: term,\n          searchCriteria: criteria\n        }\n      });\n      setSurveys(response.data); // Atualiza a lista com os resultados da pesquisa\n      setCurrentPage(1); // Resetar a página para a primeira ao filtrar\n    } catch (error) {\n      console.error('Erro ao realizar a pesquisa:', error);\n    }\n  };\n\n  // Função para baixar os arquivos\n  const downloadFile = fileName => {\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\n    const link = document.createElement('a');\n    link.href = fileUrl;\n    link.download = fileName;\n    link.click();\n  };\n\n  // Alternar expansão de um título específico\n  const toggleSurveyExpansion = id => {\n    setExpandedSurveyId(prevId => prevId === id ? null : id);\n  };\n\n  // Alternar expansão de uma pergunta específica\n  const toggleQuestionExpansion = (surveyId, index) => {\n    const questionKey = `${surveyId}-${index}`;\n    setExpandedQuestions(prevExpandedQuestions => ({\n      ...prevExpandedQuestions,\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true\n    }));\n  };\n\n  // Função de navegação\n  const nextPage = () => {\n    if (currentPage * surveysPerPage < surveys.length) {\n      setCurrentPage(currentPage + 1);\n    }\n  };\n  const prevPage = () => {\n    if (currentPage > 1) {\n      setCurrentPage(currentPage - 1);\n    }\n  };\n\n  // Determina os índices para cortar as entrevistas para a página atual\n  const indexOfLastSurvey = currentPage * surveysPerPage;\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Entrevistas Realizadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: searchCriteria,\n        onChange: e => setSearchCriteria(e.target.value),\n        style: {\n          padding: '5px',\n          marginRight: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"entrevistador\",\n          children: \"Entrevistador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"entrevistado\",\n          children: \"Entrevistado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"entrevista_id\",\n          children: \"ID da Entrevista\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        placeholder: \"Pesquisar...\",\n        style: {\n          padding: '5px',\n          width: '300px',\n          marginRight: '10px',\n          border: '1px solid #ccc',\n          borderRadius: '4px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), currentSurveys.map(survey => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"survey\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-header\",\n        onClick: () => toggleSurveyExpansion(survey.id_entrevista),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Entrevistador:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadorName || 'Sem nome do entrevistador', \" |\", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \" Entrevistado:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), \" \", survey.entrevistadoName || 'Sem nome do entrevistado']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), survey.entrevistaData && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontStyle: 'italic',\n            fontSize: '0.9em',\n            marginTop: '5px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Data da Entrevista:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }, this), \" \", survey.entrevistaData]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), expandedSurveyId === survey.id_entrevista && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"survey-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: survey.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), survey.surveyDetails.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"documentos\",\n          children: question.Documentacao && question.Documentacao.trim() && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Documentos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: question.Documentacao.split(',').map((fileName, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  onClick: () => downloadFile(fileName.trim()),\n                  style: {\n                    color: 'blue',\n                    textDecoration: 'underline'\n                  },\n                  children: fileName.trim()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 29\n                }, this)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this)]\n    }, survey.id_entrevista, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevPage,\n        disabled: currentPage === 1,\n        children: \"Anterior\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextPage,\n        disabled: currentPage * surveysPerPage >= surveys.length,\n        children: \"Pr\\xF3xima\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(AllSurveys, \"8GplnMsq1c7R/Rc0T4HGtonlj7Y=\");\n_c = AllSurveys;\nexport default AllSurveys;\nvar _c;\n$RefreshReg$(_c, \"AllSurveys\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AllSurveys","_s","surveys","setSurveys","searchTerm","setSearchTerm","searchCriteria","setSearchCriteria","expandedSurveyId","setExpandedSurveyId","expandedQuestions","setExpandedQuestions","currentPage","setCurrentPage","surveysPerPage","fetchSurveys","response","get","data","error","console","timeoutId","setTimeout","searchSurveys","clearTimeout","term","criteria","params","downloadFile","fileName","fileUrl","link","document","createElement","href","download","click","toggleSurveyExpansion","id","prevId","toggleQuestionExpansion","surveyId","index","questionKey","prevExpandedQuestions","nextPage","length","prevPage","indexOfLastSurvey","indexOfFirstSurvey","currentSurveys","slice","children","_jsxFileName","lineNumber","columnNumber","className","style","marginBottom","value","onChange","e","target","padding","marginRight","type","placeholder","width","border","borderRadius","map","survey","onClick","id_entrevista","entrevistadorName","entrevistadoName","entrevistaData","fontStyle","fontSize","marginTop","details","surveyDetails","question","Documentacao","trim","split","idx","color","textDecoration","display","justifyContent","disabled","_c","$RefreshReg$"],"sources":["C:/Users/fteixeira/Documents/Projeto-Questionario/my-app/src/AllSurveys.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './AllSurveys.css';\r\n\r\nconst AllSurveys = () => {\r\n  const [surveys, setSurveys] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchCriteria, setSearchCriteria] = useState('entrevistador');\r\n  const [expandedSurveyId, setExpandedSurveyId] = useState(null);\r\n  const [expandedQuestions, setExpandedQuestions] = useState({});\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [surveysPerPage] = useState(20);\r\n\r\n  // Carregar os dados da API\r\n  useEffect(() => {\r\n    fetchSurveys(); // Carregar as entrevistas quando o componente for montado\r\n  }, []);\r\n\r\n  // Função para buscar as entrevistas\r\n  const fetchSurveys = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/api/surveys');\r\n      setSurveys(response.data);\r\n    } catch (error) {\r\n      console.error('Erro ao obter as entrevistas:', error);\r\n    }\r\n  };\r\n\r\n  // Função para realizar a pesquisa em tempo real\r\n  useEffect(() => {\r\n    if (searchTerm === '') {\r\n      fetchSurveys(); // Se o campo de pesquisa estiver vazio, carrega todas as entrevistas\r\n    } else {\r\n      const timeoutId = setTimeout(() => {\r\n        searchSurveys(searchTerm, searchCriteria); // Realiza a pesquisa após um pequeno atraso\r\n      }, 500); // Delay de 500ms para evitar chamadas em excesso\r\n\r\n      return () => clearTimeout(timeoutId); // Limpar o timeout se o valor for alterado antes de terminar\r\n    }\r\n  }, [searchTerm, searchCriteria]); // Dependendo da alteração no input ou critério de pesquisa\r\n\r\n  // Função para pesquisar no banco de dados\r\n  const searchSurveys = async (term, criteria) => {\r\n    try {\r\n      const response = await axios.get('http://localhost:4000/api/search', {\r\n        params: {\r\n          searchTerm: term,\r\n          searchCriteria: criteria,\r\n        },\r\n      });\r\n      setSurveys(response.data); // Atualiza a lista com os resultados da pesquisa\r\n      setCurrentPage(1); // Resetar a página para a primeira ao filtrar\r\n    } catch (error) {\r\n      console.error('Erro ao realizar a pesquisa:', error);\r\n    }\r\n  };\r\n\r\n  // Função para baixar os arquivos\r\n  const downloadFile = (fileName) => {\r\n    const fileUrl = `http://localhost:4000/uploads/${fileName}`;\r\n    const link = document.createElement('a');\r\n    link.href = fileUrl;\r\n    link.download = fileName;\r\n    link.click();\r\n  };\r\n\r\n  // Alternar expansão de um título específico\r\n  const toggleSurveyExpansion = (id) => {\r\n    setExpandedSurveyId((prevId) => (prevId === id ? null : id));\r\n  };\r\n\r\n  // Alternar expansão de uma pergunta específica\r\n  const toggleQuestionExpansion = (surveyId, index) => {\r\n    const questionKey = `${surveyId}-${index}`;\r\n    setExpandedQuestions((prevExpandedQuestions) => ({\r\n      ...prevExpandedQuestions,\r\n      [questionKey]: prevExpandedQuestions[questionKey] === true ? false : true,\r\n    }));\r\n  };\r\n\r\n  // Função de navegação\r\n  const nextPage = () => {\r\n    if (currentPage * surveysPerPage < surveys.length) {\r\n      setCurrentPage(currentPage + 1);\r\n    }\r\n  };\r\n\r\n  const prevPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(currentPage - 1);\r\n    }\r\n  };\r\n\r\n  // Determina os índices para cortar as entrevistas para a página atual\r\n  const indexOfLastSurvey = currentPage * surveysPerPage;\r\n  const indexOfFirstSurvey = indexOfLastSurvey - surveysPerPage;\r\n  const currentSurveys = surveys.slice(indexOfFirstSurvey, indexOfLastSurvey);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Entrevistas Realizadas</h1>\r\n\r\n      {/* Barra de pesquisa */}\r\n      <div className=\"search-bar\" style={{ marginBottom: '20px' }}>\r\n        <select\r\n          value={searchCriteria}\r\n          onChange={(e) => setSearchCriteria(e.target.value)}\r\n          style={{ padding: '5px', marginRight: '10px' }}\r\n        >\r\n          <option value=\"entrevistador\">Entrevistador</option>\r\n          <option value=\"entrevistado\">Entrevistado</option>\r\n          <option value=\"entrevista_id\">ID da Entrevista</option>\r\n        </select>\r\n        <input\r\n          type=\"text\"\r\n          value={searchTerm}\r\n          onChange={(e) => setSearchTerm(e.target.value)}\r\n          placeholder=\"Pesquisar...\"\r\n          style={{\r\n            padding: '5px',\r\n            width: '300px',\r\n            marginRight: '10px',\r\n            border: '1px solid #ccc',\r\n            borderRadius: '4px',\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      {/* Exibir as entrevistas da página atual */}\r\n      {currentSurveys.map((survey) => (\r\n        <div key={survey.id_entrevista} className=\"survey\">\r\n          {/* Cabeçalho da entrevista */}\r\n          <div\r\n            className=\"survey-header\"\r\n            onClick={() => toggleSurveyExpansion(survey.id_entrevista)}\r\n          >\r\n            <h2>\r\n              <strong>Entrevistador:</strong> {survey.entrevistadorName || 'Sem nome do entrevistador'} |\r\n              <strong> Entrevistado:</strong> {survey.entrevistadoName || 'Sem nome do entrevistado'}\r\n            </h2>\r\n            {survey.entrevistaData && (\r\n              <p style={{ fontStyle: 'italic', fontSize: '0.9em', marginTop: '5px' }}>\r\n                <strong>Data da Entrevista:</strong> {survey.entrevistaData}\r\n              </p>\r\n            )}\r\n          </div>\r\n\r\n          {/* Detalhes expandíveis */}\r\n          {expandedSurveyId === survey.id_entrevista && (\r\n            <div className=\"survey-details\">\r\n              <p>{survey.details}</p>\r\n              {/* Exemplo de exibição de arquivos para download */}\r\n              {survey.surveyDetails.map((question, index) => (\r\n                <div key={index} className=\"documentos\">\r\n                  {question.Documentacao && question.Documentacao.trim() && (\r\n                    <div>\r\n                      <h4>Documentos:</h4>\r\n                      <ul>\r\n                        {question.Documentacao.split(',').map((fileName, idx) => (\r\n                          <li key={idx}>\r\n                            <a\r\n                              href=\"#\"\r\n                              onClick={() => downloadFile(fileName.trim())}\r\n                              style={{ color: 'blue', textDecoration: 'underline' }}\r\n                            >\r\n                              {fileName.trim()}\r\n                            </a>\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ))}\r\n\r\n      {/* Navegação de páginas */}\r\n      <div style={{ display: 'flex', justifyContent: 'center', marginTop: '20px' }}>\r\n        <button onClick={prevPage} disabled={currentPage === 1}>\r\n          Anterior\r\n        </button>\r\n        <button\r\n          onClick={nextPage}\r\n          disabled={currentPage * surveysPerPage >= surveys.length}\r\n        >\r\n          Próxima\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllSurveys;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}